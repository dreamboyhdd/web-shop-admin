[{"D:\\ErpNew\\Webcustomer\\src\\index.js":"1","D:\\ErpNew\\Webcustomer\\src\\Redux\\Store\\index.js":"2","D:\\ErpNew\\Webcustomer\\src\\Router\\index.js":"3","D:\\ErpNew\\Webcustomer\\src\\Common\\index.js":"4","D:\\ErpNew\\Webcustomer\\src\\Router\\Routers.js":"5","D:\\ErpNew\\Webcustomer\\src\\Common\\SelectWard.js":"6","D:\\ErpNew\\Webcustomer\\src\\Common\\SelectService.js":"7","D:\\ErpNew\\Webcustomer\\src\\Common\\SelectSender.js":"8","D:\\ErpNew\\Webcustomer\\src\\Common\\CanvasChart.js":"9","D:\\ErpNew\\Webcustomer\\src\\Common\\FormReport.js":"10","D:\\ErpNew\\Webcustomer\\src\\Common\\ChartTemp.js":"11","D:\\ErpNew\\Webcustomer\\src\\Common\\DataTable.js":"12","D:\\ErpNew\\Webcustomer\\src\\Common\\NoCustomer.js":"13","D:\\ErpNew\\Webcustomer\\src\\Common\\LadingDetail.js":"14","D:\\ErpNew\\Webcustomer\\src\\Common\\LoadingAlert.js":"15","D:\\ErpNew\\Webcustomer\\src\\Common\\SelectRecipient.js":"16","D:\\ErpNew\\Webcustomer\\src\\Common\\SelectDistrict.js":"17","D:\\ErpNew\\Webcustomer\\src\\Common\\FormManagerAddress.js":"18","D:\\ErpNew\\Webcustomer\\src\\Common\\SelectCity.js":"19","D:\\ErpNew\\Webcustomer\\src\\Redux\\Reducers\\index.js":"20","D:\\ErpNew\\Webcustomer\\src\\Redux\\Sagas\\index.js":"21","D:\\ErpNew\\Webcustomer\\src\\Services\\Api.js":"22","D:\\ErpNew\\Webcustomer\\src\\Redux\\Reducers\\MainAction.js":"23","D:\\ErpNew\\Webcustomer\\src\\Redux\\Reducers\\Category\\Location.js":"24","D:\\ErpNew\\Webcustomer\\src\\Redux\\Sagas\\MainAction.js":"25","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\index.js":"26","D:\\ErpNew\\Webcustomer\\src\\Utils\\index.js":"27","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\index.js":"28","D:\\ErpNew\\Webcustomer\\src\\Language\\index.js":"29","D:\\ErpNew\\Webcustomer\\src\\Component\\Categorys\\index.js":"30","D:\\ErpNew\\Webcustomer\\src\\Component\\Template\\index.js":"31","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\index.js":"32","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\index.js":"33","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\index.js":"34","D:\\ErpNew\\Webcustomer\\src\\Utils\\Storage.js":"35","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\MainTypes.js":"36","D:\\ErpNew\\Webcustomer\\src\\Utils\\ScrollTop.js":"37","D:\\ErpNew\\Webcustomer\\src\\Utils\\EncodeString.js":"38","D:\\ErpNew\\Webcustomer\\src\\Utils\\DecodeString.js":"39","D:\\ErpNew\\Webcustomer\\src\\Utils\\ExportExcel.js":"40","D:\\ErpNew\\Webcustomer\\src\\Utils\\ValidEmail.js":"41","D:\\ErpNew\\Webcustomer\\src\\Utils\\ValidPhone.js":"42","D:\\ErpNew\\Webcustomer\\src\\Utils\\ValidNumber.js":"43","D:\\ErpNew\\Webcustomer\\src\\Utils\\Notification.js":"44","D:\\ErpNew\\Webcustomer\\src\\Utils\\ValidPassword.js":"45","D:\\ErpNew\\Webcustomer\\src\\Utils\\FormatMoney.js":"46","D:\\ErpNew\\Webcustomer\\src\\Utils\\PaginationTable2.js":"47","D:\\ErpNew\\Webcustomer\\src\\Utils\\FormatNumber.js":"48","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\MainAction.js":"49","D:\\ErpNew\\Webcustomer\\src\\Utils\\PaginationTable.js":"50","D:\\ErpNew\\Webcustomer\\src\\Utils\\RemoveExtraSpace.js":"51","D:\\ErpNew\\Webcustomer\\src\\Utils\\GetLatLngGoogle.js":"52","D:\\ErpNew\\Webcustomer\\src\\Utils\\RemoveAccents.js":"53","D:\\ErpNew\\Webcustomer\\src\\Utils\\GetCookieGroup.js":"54","D:\\ErpNew\\Webcustomer\\src\\Utils\\GetCookie.js":"55","D:\\ErpNew\\Webcustomer\\src\\Utils\\FormatDate.js":"56","D:\\ErpNew\\Webcustomer\\src\\Utils\\FormatDateJson.js":"57","D:\\ErpNew\\Webcustomer\\src\\Utils\\GetModule.js":"58","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\TestChart.js":"59","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\PaymentCODCustomerComponent.js":"60","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\LadingOutPrint.js":"61","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\VerificationComponent.js":"62","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\RegisterComponent.js":"63","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\ResetPasswordComponent.js":"64","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\ProfiveComponent.js":"65","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\LoginComponent.js":"66","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\LoginV1Component.js":"67","D:\\ErpNew\\Webcustomer\\src\\Services\\index.js":"68","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\index.js":"69","D:\\ErpNew\\Webcustomer\\src\\Enum\\index.js":"70","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Main\\index.js":"71","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\CustomerSenderAddressTypeAction.js":"72","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Main\\CustomerAction.js":"73","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\LadingTemporaryTypeAction.js":"74","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Main\\CustomerTypeAction.js":"75","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\LadingTemporaryAction.js":"76","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\TimelineTransportTypeAction.js":"77","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\TimelineTransportAction.js":"78","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\CustomerSenderAddressAction.js":"79","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\TestTypeAction.js":"80","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\TestAction.js":"81","D:\\ErpNew\\Webcustomer\\src\\Hooks\\index.js":"82","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\RouteVehicleComponent.js":"83","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\ForgotPasswordComponent.js":"84","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\CustomerPaymentDealineComponent.js":"85","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\PaymentReportComponent.js":"86","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\ChangePasswordComponent.js":"87","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\WareHouseSupplierReportComponent.js":"88","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\GoogleMapComponent.js":"89","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\CustomerRecipientComponent.js":"90","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\WareHousePersoninChargeReportComponent.js":"91","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\WareHouseInventoryReportComponent.js":"92","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\OutstandingDebtReportComponent.js":"93","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\KpiDeliveryCODReportComponent.js":"94","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\CustomerSenderComponent.js":"95","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\WareHouseOutputReportComponent.js":"96","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\WareHouseImportReportComponent.js":"97","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\WareHouseTranportReportComponent.js":"98","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\OverViewReportComponent.js":"99","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\V1LadingCreateComponent.js":"100","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\SearchLading.js":"101","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\LookupLading.js":"102","D:\\ErpNew\\Webcustomer\\src\\Hooks\\useInput.js":"103","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\LadingExcelComponent.js":"104","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\LadingCreateComponent.js":"105","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\CustomerComplainList.js":"106","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\CustomerComplain.js":"107","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\HomeComponent.js":"108","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\LadingGetPriceComponent.js":"109","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Reports\\index.js":"110","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Reports\\ReportTypeAction.js":"111","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Reports\\ReportAction.js":"112","D:\\ErpNew\\Webcustomer\\src\\Component\\Template\\LeftMenu.js":"113","D:\\ErpNew\\Webcustomer\\src\\Component\\Template\\HeaderMenu.js":"114","D:\\ErpNew\\Webcustomer\\src\\Component\\Categorys\\TimelineTransport.js":"115","D:\\ErpNew\\Webcustomer\\src\\Component\\Template\\FooterMenu.js":"116","D:\\ErpNew\\Webcustomer\\src\\Component\\Categorys\\PostOfficeComponent.js":"117","D:\\ErpNew\\Webcustomer\\src\\Component\\Categorys\\LadingPrintFromExcelAveryComponent.js":"118","D:\\ErpNew\\Webcustomer\\src\\Component\\Categorys\\GetLadingTemporary.js":"119","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\ServiceType.js":"120","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\Service.js":"121","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\Lading.js":"122","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\LadingType.js":"123","D:\\ErpNew\\Webcustomer\\src\\Utils\\RegExpAddress.js":"124","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\LocationType.js":"125","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\Location.js":"126"},{"size":724,"mtime":1652503405149,"results":"127","hashOfConfig":"128"},{"size":574,"mtime":1652503405809,"results":"129","hashOfConfig":"128"},{"size":25,"mtime":1652503405047,"results":"130","hashOfConfig":"128"},{"size":457,"mtime":1660529840334,"results":"131","hashOfConfig":"128"},{"size":7186,"mtime":1660290385386,"results":"132","hashOfConfig":"128"},{"size":1747,"mtime":1654828498776,"results":"133","hashOfConfig":"128"},{"size":1773,"mtime":1664166207195,"results":"134","hashOfConfig":"128"},{"size":3587,"mtime":1664166250146,"results":"135","hashOfConfig":"128"},{"size":603,"mtime":1652503406640,"results":"136","hashOfConfig":"128"},{"size":3290,"mtime":1652503406694,"results":"137","hashOfConfig":"128"},{"size":2207,"mtime":1652503406948,"results":"138","hashOfConfig":"128"},{"size":1254,"mtime":1652503406789,"results":"139","hashOfConfig":"128"},{"size":704,"mtime":1660548469208,"results":"140","hashOfConfig":"128"},{"size":28695,"mtime":1664166057352,"results":"141","hashOfConfig":"128"},{"size":984,"mtime":1652503406909,"results":"142","hashOfConfig":"128"},{"size":2765,"mtime":1664166255457,"results":"143","hashOfConfig":"128"},{"size":1678,"mtime":1654827610678,"results":"144","hashOfConfig":"128"},{"size":38853,"mtime":1664166338730,"results":"145","hashOfConfig":"128"},{"size":4058,"mtime":1652503406978,"results":"146","hashOfConfig":"128"},{"size":294,"mtime":1652503405708,"results":"147","hashOfConfig":"128"},{"size":179,"mtime":1664178923478,"results":"148","hashOfConfig":"128"},{"size":1254,"mtime":1676946689121,"results":"149","hashOfConfig":"128"},{"size":396,"mtime":1652503405688,"results":"150","hashOfConfig":"128"},{"size":1338,"mtime":1652503405577,"results":"151","hashOfConfig":"128"},{"size":7358,"mtime":1678960861661,"results":"152","hashOfConfig":"128"},{"size":125,"mtime":1652503406621,"results":"153","hashOfConfig":"128"},{"size":787,"mtime":1660063930084,"results":"154","hashOfConfig":"128"},{"size":331,"mtime":1652503406479,"results":"155","hashOfConfig":"128"},{"size":215,"mtime":1652503405302,"results":"156","hashOfConfig":"128"},{"size":170,"mtime":1652503408237,"results":"157","hashOfConfig":"128"},{"size":119,"mtime":1652503409266,"results":"158","hashOfConfig":"128"},{"size":425,"mtime":1655202023032,"results":"159","hashOfConfig":"128"},{"size":688,"mtime":1657273555127,"results":"160","hashOfConfig":"128"},{"size":534,"mtime":1659343232823,"results":"161","hashOfConfig":"128"},{"size":529,"mtime":1652503407580,"results":"162","hashOfConfig":"128"},{"size":556,"mtime":1657613016057,"results":"163","hashOfConfig":"128"},{"size":63,"mtime":1652503407257,"results":"164","hashOfConfig":"128"},{"size":161,"mtime":1655197527691,"results":"165","hashOfConfig":"128"},{"size":181,"mtime":1652503407181,"results":"166","hashOfConfig":"128"},{"size":601,"mtime":1652503407553,"results":"167","hashOfConfig":"128"},{"size":466,"mtime":1652503407622,"results":"168","hashOfConfig":"128"},{"size":196,"mtime":1652503407440,"results":"169","hashOfConfig":"128"},{"size":311,"mtime":1652503407136,"results":"170","hashOfConfig":"128"},{"size":447,"mtime":1652503407388,"results":"171","hashOfConfig":"128"},{"size":447,"mtime":1652503407280,"results":"172","hashOfConfig":"128"},{"size":460,"mtime":1652503407509,"results":"173","hashOfConfig":"128"},{"size":750,"mtime":1652503407307,"results":"174","hashOfConfig":"128"},{"size":383,"mtime":1652503407535,"results":"175","hashOfConfig":"128"},{"size":1751,"mtime":1657612996381,"results":"176","hashOfConfig":"128"},{"size":748,"mtime":1652503407522,"results":"177","hashOfConfig":"128"},{"size":72,"mtime":1652503407194,"results":"178","hashOfConfig":"128"},{"size":1221,"mtime":1652503407216,"results":"179","hashOfConfig":"128"},{"size":991,"mtime":1652503407458,"results":"180","hashOfConfig":"128"},{"size":799,"mtime":1660069487302,"results":"181","hashOfConfig":"128"},{"size":2116,"mtime":1660063234389,"results":"182","hashOfConfig":"128"},{"size":1620,"mtime":1652503407408,"results":"183","hashOfConfig":"128"},{"size":950,"mtime":1657502475718,"results":"184","hashOfConfig":"128"},{"size":3013,"mtime":1659930731510,"results":"185","hashOfConfig":"128"},{"size":1385,"mtime":1652503408997,"results":"186","hashOfConfig":"128"},{"size":17486,"mtime":1660072273228,"results":"187","hashOfConfig":"128"},{"size":17320,"mtime":1658891633967,"results":"188","hashOfConfig":"128"},{"size":4310,"mtime":1664178908118,"results":"189","hashOfConfig":"128"},{"size":18628,"mtime":1659930944031,"results":"190","hashOfConfig":"128"},{"size":7188,"mtime":1655181587643,"results":"191","hashOfConfig":"128"},{"size":17923,"mtime":1660071501481,"results":"192","hashOfConfig":"128"},{"size":10684,"mtime":1655199783553,"results":"193","hashOfConfig":"128"},{"size":11664,"mtime":1663315963096,"results":"194","hashOfConfig":"128"},{"size":21,"mtime":1652503405214,"results":"195","hashOfConfig":"128"},{"size":763,"mtime":1652503406380,"results":"196","hashOfConfig":"128"},{"size":84,"mtime":1652503409724,"results":"197","hashOfConfig":"128"},{"size":163,"mtime":1652503406220,"results":"198","hashOfConfig":"128"},{"size":268,"mtime":1652503406390,"results":"199","hashOfConfig":"128"},{"size":5439,"mtime":1652503406187,"results":"200","hashOfConfig":"128"},{"size":150,"mtime":1652503406315,"results":"201","hashOfConfig":"128"},{"size":1494,"mtime":1652503406210,"results":"202","hashOfConfig":"128"},{"size":632,"mtime":1652503406289,"results":"203","hashOfConfig":"128"},{"size":68,"mtime":1652503406354,"results":"204","hashOfConfig":"128"},{"size":336,"mtime":1652503406327,"results":"205","hashOfConfig":"128"},{"size":994,"mtime":1652503406367,"results":"206","hashOfConfig":"128"},{"size":274,"mtime":1652503406302,"results":"207","hashOfConfig":"128"},{"size":561,"mtime":1652503406260,"results":"208","hashOfConfig":"128"},{"size":28,"mtime":1652503405406,"results":"209","hashOfConfig":"128"},{"size":2498,"mtime":1652503407829,"results":"210","hashOfConfig":"128"},{"size":3694,"mtime":1655175261312,"results":"211","hashOfConfig":"128"},{"size":7110,"mtime":1660072066291,"results":"212","hashOfConfig":"128"},{"size":8524,"mtime":1660072253713,"results":"213","hashOfConfig":"128"},{"size":8300,"mtime":1660071527322,"results":"214","hashOfConfig":"128"},{"size":21886,"mtime":1660072463994,"results":"215","hashOfConfig":"128"},{"size":49402,"mtime":1652503407720,"results":"216","hashOfConfig":"128"},{"size":18241,"mtime":1660071514125,"results":"217","hashOfConfig":"128"},{"size":14635,"mtime":1660072517799,"results":"218","hashOfConfig":"128"},{"size":17534,"mtime":1660072329148,"results":"219","hashOfConfig":"128"},{"size":7752,"mtime":1660072284555,"results":"220","hashOfConfig":"128"},{"size":16137,"mtime":1660072290046,"results":"221","hashOfConfig":"128"},{"size":15105,"mtime":1660071507969,"results":"222","hashOfConfig":"128"},{"size":14388,"mtime":1660072365935,"results":"223","hashOfConfig":"128"},{"size":14885,"mtime":1660072248601,"results":"224","hashOfConfig":"128"},{"size":15506,"mtime":1660072409982,"results":"225","hashOfConfig":"128"},{"size":12706,"mtime":1660072278870,"results":"226","hashOfConfig":"128"},{"size":147654,"mtime":1659930943879,"results":"227","hashOfConfig":"128"},{"size":110929,"mtime":1667525924903,"results":"228","hashOfConfig":"128"},{"size":1355,"mtime":1659930943938,"results":"229","hashOfConfig":"128"},{"size":393,"mtime":1652503405448,"results":"230","hashOfConfig":"128"},{"size":21353,"mtime":1679537134353,"results":"231","hashOfConfig":"128"},{"size":132319,"mtime":1679537305576,"results":"232","hashOfConfig":"128"},{"size":7886,"mtime":1660072107279,"results":"233","hashOfConfig":"128"},{"size":9821,"mtime":1660531238670,"results":"234","hashOfConfig":"128"},{"size":18095,"mtime":1660069278451,"results":"235","hashOfConfig":"128"},{"size":14034,"mtime":1660530023006,"results":"236","hashOfConfig":"128"},{"size":150,"mtime":1652503406559,"results":"237","hashOfConfig":"128"},{"size":1716,"mtime":1652503406594,"results":"238","hashOfConfig":"128"},{"size":6202,"mtime":1652503406578,"results":"239","hashOfConfig":"128"},{"size":24085,"mtime":1660291994013,"results":"240","hashOfConfig":"128"},{"size":10361,"mtime":1660547854792,"results":"241","hashOfConfig":"128"},{"size":5554,"mtime":1659930944032,"results":"242","hashOfConfig":"128"},{"size":1922,"mtime":1652503409347,"results":"243","hashOfConfig":"128"},{"size":5807,"mtime":1659930944032,"results":"244","hashOfConfig":"128"},{"size":25744,"mtime":1659930944032,"results":"245","hashOfConfig":"128"},{"size":7538,"mtime":1659930944032,"results":"246","hashOfConfig":"128"},{"size":140,"mtime":1652503406460,"results":"247","hashOfConfig":"128"},{"size":300,"mtime":1652503406448,"results":"248","hashOfConfig":"128"},{"size":3510,"mtime":1652503406528,"results":"249","hashOfConfig":"128"},{"size":830,"mtime":1652503406439,"results":"250","hashOfConfig":"128"},{"size":190,"mtime":1652503407488,"results":"251","hashOfConfig":"128"},{"size":844,"mtime":1652503406504,"results":"252","hashOfConfig":"128"},{"size":1831,"mtime":1652503406493,"results":"253","hashOfConfig":"128"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},"3kpjw3",{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"256"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"256"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"256"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"256"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"256"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"256"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"256"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"256"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"256"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"256"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"256"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"256"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"256"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"256"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"256"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"256"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"256"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"256"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"256"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"256"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"256"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"256"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"397","usedDeprecatedRules":"256"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"256"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"256"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"256"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"256"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"256"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"256"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"256"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"256"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"256"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"256"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"256"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"256"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"256"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"256"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"256"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"256"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"256"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"256"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"256"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"256"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"256"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"256"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"256"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"256"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":81,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"256"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"256"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"256"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"256"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":63,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"517","messages":"518","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"256"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"256"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"256"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"256"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"256"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"256"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"256"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"546","usedDeprecatedRules":"256"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"256"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"256"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"256"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},"D:\\ErpNew\\Webcustomer\\src\\index.js",[],["570","571"],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Store\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Router\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Common\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Router\\Routers.js",["572","573","574","575","576","577","578","579","580","581"],"import { Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\";\r\n\r\nimport { GetCookie } from \"../Utils\";\r\n\r\nimport { FooterMenu, HeaderMenu, LeftMenu } from \"../Component/Template\";\r\nimport {\r\n  GetLadingTemporary,\r\n  LadingPrintFromExcelAveryComponent,\r\n  PostOfficeComponent,\r\n  TimelineTransport\r\n} from \"../Component/Categorys\";\r\n\r\nimport {\r\n  CustomerComplain,\r\n  CustomerComplainList,\r\n  // CustomerOrder,\r\n  // CustomerOrderlist,\r\n  HomeComponent,\r\n  LadingCreateComponent,\r\n  V2LadingCreateComponent,\r\n  LadingExcelComponent,\r\n  LadingGetPriceComponent,\r\n  LookupLading,\r\n  SearchLading,\r\n  V1LadingCreateComponent,\r\n} from \"../Component/Main\";\r\n\r\nimport {\r\n  ChangePasswordComponent,\r\n  CustomerRecipientComponent,\r\n  CustomerSenderComponent,\r\n  ForgotPasswordComponent,\r\n  LadingOutPrint,\r\n  LoginComponent,\r\n  LoginV1Component,\r\n  ProfiveComponent,\r\n  RegisterComponent,\r\n  ResetPasswordComponent,\r\n  TestChart,\r\n  VerificationComponent,\r\n} from \"../Component/System\";\r\n\r\nimport {\r\n  WareHouseImportReportComponent,\r\n  WareHouseOutputReportComponent,\r\n  WareHouseInventoryReportComponent,\r\n  WareHouseTranportReportComponent,\r\n  WareHouseSupplierReportComponent,\r\n  OverViewReportComponent,\r\n  CustomerPaymentDealineComponent,\r\n  //MyChart\r\n  KpiDeliveryCODReportComponent,\r\n  OutstandingDebtReportComponent,\r\n  PaymentReportComponent,\r\n  RouteVehicleComponent,\r\n  WareHousePersoninChargeReportComponent,\r\n  PaymentCODCustomerComponent\r\n} from \"../Component/Reports\";\r\n\r\nexport const Routers = () => {\r\n  const ArrNoLogin = ['/', '/register', '/forgot', '/reset']\r\n  const CustomerID = GetCookie(\"CustomerID\");\r\n  let currentUrl = window.location.href;\r\n  let urlSplit = currentUrl.split(\"/\")[0] + \"//\" + currentUrl.split(\"/\")[2];\r\n  if ((urlSplit===\"/\" || (urlSplit!==\"/\" && ArrNoLogin.indexOf(urlSplit) !== -1)) && CustomerID === null)\r\n    window.location.href = \"/\";\r\n  /* if (GetCookie(\"CustomerID\") !== null && currentUrl !== (urlSplit + \"/\") && currentUrl.indexOf(\"/login\") === -1 && currentUrl.indexOf(\"/register\") === -1 && currentUrl.indexOf(\"/forgot\") === -1 && currentUrl.indexOf(\"/reset\") === -1)\r\n    window.location.href = \"/\"; */\r\n  return (\r\n    <BrowserRouter>\r\n      {\r\n        CustomerID === null ||\r\n          currentUrl === urlSplit + \"/\" ||\r\n          currentUrl.indexOf(\"/register\") !== -1 ||\r\n          currentUrl.indexOf(\"/forgot\") !== -1 ||\r\n          currentUrl.indexOf(\"/print-bill\") !==-1 ||\r\n          currentUrl.indexOf(\"/reset\") !== -1 ? null : (\r\n          <Route path=\"/\" component={LeftMenu} />\r\n        )}\r\n      <div className=\"main-panel ps\">\r\n        {\r\n          CustomerID === null ||\r\n            currentUrl === urlSplit + \"/\" ||\r\n            currentUrl.indexOf(\"/register\") !== -1 ||\r\n            currentUrl.indexOf(\"/forgot\") !== -1 ||\r\n            currentUrl.indexOf(\"/print-bill\") !==-1 ||\r\n            currentUrl.indexOf(\"/reset\") !== -1 ? null : (\r\n            <Route path=\"/\" component={HeaderMenu} />\r\n          )}\r\n\r\n        <Switch>\r\n          //#region TÀI KHOẢN\r\n          <Route exact path=\"/\" component={LoginV1Component} />\r\n          <Route exact path=\"/home\" component={HomeComponent} />\r\n          <Route exact path=\"/lo-trinh-giao-hang\" component={RouteVehicleComponent} />\r\n          <Route exact path=\"/register\" component={RegisterComponent} />\r\n          <Route exact path=\"/forgot\" component={ForgotPasswordComponent} />\r\n          <Route exact path=\"/reset\" component={ResetPasswordComponent} />\r\n          <Route exact path=\"/thong-tin-ca-nhan\" component={ProfiveComponent} />\r\n          <Route exact path=\"/doi-mat-khau\" component={ChangePasswordComponent} />\r\n          <Route exact path=\"/dia-chi-nhan-thuong-xuyen\" component={CustomerRecipientComponent} />\r\n          <Route exact path=\"/dia-chi-gui-thuong-xuyen\" component={CustomerSenderComponent} />\r\n          <Route exact path=\"/xac-thuc-tai-khoan\" component={VerificationComponent} />\r\n          <Route exact path=\"/mang-luoi-buu-cuc\" component={PostOfficeComponent} />\r\n          //#endregion TÀI KHOẢN\r\n\r\n          //#region BÁO CÁO\r\n          {/* Router for the system */}\r\n          <Route exact path=\"/cong-no-tam-tinh\" component={GetLadingTemporary} />\r\n          {/* Router for the system */}\r\n          <Route exact path=\"/thoi-gian-toan-trinh-phat-hang-dich-vu\" component={TimelineTransport} />\r\n          {/* Router for the report warehouse */}\r\n          <Route exact path=\"/bao-cao-nhap-kho\" component={WareHouseImportReportComponent} />\r\n          <Route exact path=\"/bao-cao-xuat-kho\" component={WareHouseOutputReportComponent} />\r\n          <Route exact path=\"/bao-cao-chuyen-kho\" component={WareHouseTranportReportComponent} />\r\n          <Route exact path=\"/bao-cao-ton-kho\" component={WareHouseInventoryReportComponent} />\r\n          <Route exact path=\"/bao-cao-ton-kho-ncc\" component={WareHouseSupplierReportComponent} />\r\n          <Route exact path=\"/bao-cao-ton-kho-npt\" component={WareHousePersoninChargeReportComponent} />\r\n          <Route exact path=\"/bao-cao-tong-quan\" component={OverViewReportComponent} />\r\n          <Route exact path=\"/bao-cao-dealine-thanh-toan\" component={CustomerPaymentDealineComponent} />\r\n          <Route exact path=\"/bao-cao-kpi-giao-hang-cod\" component={KpiDeliveryCODReportComponent} />\r\n          <Route exact path=\"/bao-cao-ton-no\" component={OutstandingDebtReportComponent} />\r\n          <Route exact path=\"/bang-ke-thanh-toan\" component={PaymentReportComponent} />\r\n          <Route exact path=\"/bang-ke-thanh-toan-cod\" component={PaymentCODCustomerComponent} />\r\n\r\n          //#endregion BÁO CÁO\r\n\r\n          //#region KHIẾU NẠI\r\n          {/* Router for the Main */}\r\n          <Route exact path=\"/ho-tro-don-hang\" component={CustomerComplain} />\r\n          <Route exact path=\"/danh-sach-ho-tro-don-hang\" component={CustomerComplainList} />\r\n          //#endregion KHIẾU NẠI\r\n\r\n          //#region VẬN ĐƠN\r\n          <Route exact path=\"/tao-nhanh-van-don\" component={LadingCreateComponent} />\r\n          <Route exact path=\"/tao-nhanh-van-don-v1\" component={V1LadingCreateComponent} />\r\n          <Route exact path=\"/tim-kiem-van-don\" component={SearchLading} />\r\n          <Route exact path=\"/tra-cuu-van-don\" component={LookupLading} />\r\n          <Route exact path=\"/upload-excel-van-don\" component={LadingExcelComponent} />\r\n          <Route exact path=\"/in-bill-tu-excel\" component={LadingPrintFromExcelAveryComponent} />\r\n          {/* Router for the system */}\r\n          <Route exact path=\"/\" component={LadingGetPriceComponent} />\r\n          <Route exact path=\"/uoc-tinh-cuoc-phi\" component={LadingGetPriceComponent} />\r\n          <Route exact path=\"/print-bill\" component={LadingOutPrint} />\r\n          //#endregion VẬN ĐƠN\r\n\r\n          //#region TEST\r\n          {/* Router for the test */}\r\n          {/* <Route exact path=\"/demo\" component={TextBoss} />\r\n          <Route exact path=\"/test\" component={Test} /> */}\r\n          <Route exact path=\"/chart\" component={TestChart} />\r\n          //#endregion TEST\r\n\r\n        </Switch>\r\n        {/* <Route path=\"/\" component={FooterMenu} /> */}\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Common\\SelectWard.js",["582","583","584","585","586"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Location } from \"../Redux/Actions/Category\";\r\nimport { APIKeyOld } from \"../Services/Api\";\r\nimport { mainAction } from \"../Redux/Actions\";\r\nconst SelectWardComp = React.forwardRef(({\r\n  onSelected = () => { },\r\n  onActive = 0,\r\n  ParentID = 0,\r\n  Disabled = false\r\n}, ref) => {\r\n  const [data, setData] = useState([]);\r\n  const [valueS, setValueS] = useState({});\r\n  const [_default, setDefault] = useState({ value: 0, label: \"Chọn phường xã\" });\r\n  const onSelecteItem = (item) => {\r\n    onSelected(item);\r\n    setValueS(item);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onGetLocation = async () => {\r\n    if (ParentID === 0) return;\r\n    const pr = {\r\n      ParentID: ParentID,\r\n      Type: 3,\r\n    };\r\n\r\n    const params = {\r\n      Json: JSON.stringify(pr),\r\n      func: \"CPN_spLocation_GET\",\r\n    };\r\n    // call redux saga\r\n    const list = await mainAction.API_spCallServer(params, dispatch);\r\n\r\n    let dataOptions = [], IsActive = 0;\r\n    dataOptions.push(_default);\r\n    list.forEach((element, index) => {\r\n      let option = { value: element.LocationId, label: element.Name, code:element.Code_Local };\r\n      dataOptions.push(option);\r\n    });\r\n    setData(dataOptions);\r\n    if (onActive !== 0) {\r\n      let dataActive = dataOptions.find(a => a.value === onActive);\r\n      setValueS(dataActive);\r\n    }else setValueS(_default);\r\n  };\r\n\r\n  useEffect(() => {\r\n    onGetLocation();\r\n  }, [onActive,ParentID]);\r\n  return <Select value={valueS} onChange={onSelecteItem} options={data} isDisabled={Disabled} ref={ref} />;\r\n});\r\n\r\nexport const SelectWard = React.memo(SelectWardComp);\r\n","D:\\ErpNew\\Webcustomer\\src\\Common\\SelectService.js",["587","588","589"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { mainAction } from \"../Redux/Actions\";\r\nconst SelectServiceComp = React.forwardRef(({\r\n  onSelected = () => { },\r\n  onActive = 0,\r\n}, ref) => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [valueS, setValueS] = useState(onActive);\r\n  const [_default, setDefault] = useState({ value: 33, label: \"Chuyển phát nhanh\" });\r\n  const onSelecteItem = (item) => {\r\n    onSelected(item);\r\n    setValueS(item);\r\n  };\r\n\r\n  useEffect(() => {\r\n    APIC_spServiceGetMany();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (onActive !== 0) {\r\n      APIC_spServiceGetMany();\r\n    }\r\n    else {\r\n      setValueS(_default);\r\n    }\r\n  }, [onActive]);\r\n\r\n  const APIC_spServiceGetMany = async () => {\r\n    let pr = {\r\n      Json: JSON.stringify({\r\n        Type: 0,\r\n      }),\r\n      func: \"APIC_spService_List\",\r\n    };\r\n    const list = await mainAction.API_spCallServer(pr, dispatch);\r\n    let dataOptions = [], IsActive = 0;\r\n    dataOptions.push({ value: 0, label: \"Chọn dịch vụ\" });\r\n    if (onActive === 0) setValueS(_default);\r\n    list.forEach((element, index) => {\r\n      let option = { value: element.ServiceID, label: element.ServiceName, code: element.ServiceCode };\r\n      dataOptions.push(option);\r\n      if (element.ServiceID === onActive)\r\n        IsActive = 1\r\n    });\r\n    setData(dataOptions);\r\n    if (IsActive === 1) {\r\n      let dataActive = dataOptions.find(a => a.value === onActive);\r\n      setValueS(dataActive);\r\n    }\r\n  };\r\n\r\n  return <Select value={valueS} onChange={onSelecteItem} options={data} ref={ref} />;\r\n});\r\n\r\nexport const SelectService = React.memo(SelectServiceComp);\r\n","D:\\ErpNew\\Webcustomer\\src\\Common\\SelectSender.js",["590","591","592","593","594","595","596","597","598","599","600","601","602"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DecodeString, GetCookie } from \"../Utils\";\r\nimport { mainAction } from \"../Redux/Actions\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../Services/Api\";\r\n\r\nconst SelectSenderComp = React.forwardRef(({\r\n  onSelected = () => { },\r\n  onActive = 0,\r\n  onLoad = 0, //reload select box\r\n  defaultLabel=\"\"\r\n}, ref) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState([]);\r\n  const [valueS, setValueS] = useState(0);\r\n  const [Customer, setCustomer] = useState(GetCookie(\"All\"));\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const [_default, setDefault] = useState({\r\n    value: 0,\r\n    label: defaultLabel===\"\"?(Customer?.CustomerName + \" - \" + Customer?.Phone + \" - \" + Customer?.Address + \", \"+ Customer?.WardName + \", \"+ Customer?.DistrictName + \", \"+ Customer?.CityName):defaultLabel,\r\n    obj: {\r\n      CityId: Customer?.City,\r\n      DistrictiId: Customer?.District,\r\n      WarId: Customer?.Ward,\r\n      Code_Local: Customer?.Code_Local,\r\n      CityName: Customer?.CityName,\r\n      DistrictyName: Customer?.DistrictName,\r\n      WarName: Customer?.WardName,\r\n      NameSend: Customer?.CustomerName,\r\n      PhoneSend: Customer?.Phone,\r\n      AddressFull: Customer?.Address  + \", \" + Customer?.WardName + \", \"+ Customer?.DistrictName + \", \"+ Customer?.CityName,\r\n      Street_Number: Customer?.Address,\r\n      State: 0\r\n    }\r\n  });\r\n\r\n  const onSelecteItem = (item) => {\r\n    onSelected(item);\r\n    setValueS(item);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (CustomerID === null) {\r\n      history.push(\"/\");\r\n    }\r\n    onGetCustomerSenderAddress();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (onActive !== 0) {\r\n      let _dataActive = data.find((p) => p.value === onActive);\r\n      setValueS(_dataActive);\r\n    }\r\n    else {\r\n      setValueS(_default);\r\n    }\r\n  }, [onActive]);\r\n\r\n  useEffect(() => {\r\n    if(onLoad===1)\r\n    {\r\n      onGetCustomerSenderAddress();\r\n      onLoad=0;\r\n    }\r\n  }, [onLoad]);\r\n\r\n  useEffect(() => {\r\n    let a = _default;\r\n    a.label = defaultLabel;\r\n    setDefault(a);\r\n    onGetCustomerSenderAddress();\r\n    setValueS(_default);\r\n  }, [defaultLabel]);\r\n\r\n  const onGetCustomerSenderAddress = async () => {\r\n    //let arr = DecodeString(cookies.customerLogin).split(\"|\");\r\n    const params = {\r\n      Json: '{\"CustomerId\":' + Customer?.CustomerID + '}',\r\n      func: \"APIC_spCustomerSenderAddressList\",\r\n    };\r\n    // call redux saga\r\n    const list = await mainAction.API_spCallServer(params, dispatch);\r\n    let dataOptions = [], IsActive = 0;\r\n    dataOptions.push(_default);\r\n    if (onActive === 0) setValueS(_default);\r\n    list.forEach((element, index) => {\r\n      let option = {\r\n        value: element.CustomerAddressSenderId,\r\n        label: element.NameSend + \" - \" + element.PhoneSend + \" - \" + element.AddressFull,\r\n        obj: element,\r\n      };\r\n      index === 0 ? setValueS(option) : setValueS(null);\r\n      dataOptions.push(option);\r\n    });\r\n    setData(dataOptions);\r\n    //if (IsActive === 1) {\r\n      let dataActive = dataOptions.find(a => a.value === onActive);\r\n      setValueS(dataActive);\r\n    //}\r\n  };\r\n\r\n  return <Select value={valueS} onChange={onSelecteItem} options={data} ref={ref} />;\r\n});\r\n\r\nexport const SelectSender = React.memo(SelectSenderComp);\r\n","D:\\ErpNew\\Webcustomer\\src\\Common\\CanvasChart.js",[],"D:\\ErpNew\\Webcustomer\\src\\Common\\FormReport.js",["603"],"import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nconst FormReportComp = ({\r\n    isVisible = false,\r\n    setIsVisible = () => { },\r\n    onFromDate = () => { },\r\n    onToDate = () => { },\r\n    onClickDate = () => { },\r\n    title = '',\r\n}) => {\r\n\r\n\r\n    const [fdate, onFdate] = useState(new Date());\r\n    const FromDate = (item) => {\r\n        onFromDate({fromDate:item});\r\n        onFdate(item);\r\n    }\r\n    \r\n    const [tdate, onTdate] = useState(new Date());\r\n    const ToDate = (item) => {\r\n        onToDate({toDate:item});\r\n        onTdate(item);\r\n    }\r\n\r\n    const ClickDate = () => {\r\n        onClickDate();\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n    }, []);\r\n    \r\n    return (\r\n\r\n        \r\n        <div className=\"col-md-12\">\r\n            <div className=\"card-header card-header-primary\">\r\n                 <h4 className=\"card-title\">{title}</h4>\r\n            </div>\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                \r\n                <form>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                           <div className=\"col-md-6\">\r\n                                <label className=\"control-label\">Từ ngày(dd/MM/yy)</label>\r\n                           </div>\r\n                           <div className=\"col-md-8\">\r\n                            <div className=\"form-group bmd-form-group\">\r\n                                <DateTimePicker\r\n                                    onChange={date => FromDate(date)}\r\n                                    value={fdate}\r\n                                />\r\n                                </div>\r\n                           </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                           <div className=\"col-md-6\">\r\n                                <label className=\"control-label\">Đến ngày(dd/MM/yy)</label>\r\n                           </div>\r\n                           <div className=\"col-md-8\">\r\n                            <div className=\"form-group bmd-form-group\">\r\n                                <DateTimePicker\r\n                                    onChange={date => ToDate(date)}\r\n                                    value={tdate}\r\n                                />\r\n                                </div>\r\n                           </div>\r\n                        </div>\r\n                    </div>\r\n                        <div className=\"card-body\">\r\n                            <button onClick={ClickDate} type=\"button\" className=\"btn btn-danger pull-right\">\r\n                            <i className=\"material-icons\">edit</i>\r\n                            Xác nhận?\r\n                            </button>\r\n                            <button  type=\"submit\" className=\"btn btn-default pull-right\">\r\n                            <i className=\"material-icons\">undo</i>\r\n                            Hủy\r\n                            </button>\r\n                        </div>\r\n                    <div className=\"clearfix\"></div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const FormReport = React.memo(FormReportComp)","D:\\ErpNew\\Webcustomer\\src\\Common\\ChartTemp.js",["604","605","606"],"import React from \"react\";\r\nimport { Chart } from \"react-charts\";  /* npm i react-charts */\r\nimport { PieChart } from \"react-minimal-pie-chart\"; /* npm i react-minimal-pie-chart */\r\n\r\nconst ChartComp = ({ type, title, data }) => { /* type=\"bar|line|area|bubble|pie\" */\r\n\r\n  const series = React.useMemo(/*only use for: bar, line, area, bubble chart*/\r\n    () => ({\r\n      type: type\r\n    }),\r\n    []\r\n  );\r\n\r\n  const axes = React.useMemo(/*only use for: bar, line, area, bubble chart*/\r\n    () => [\r\n      { primary: true, type: \"ordinal\", position: \"bottom\" },\r\n      { position: \"left\", type: \"linear\", stacked: false },//, \r\n    ],\r\n    []\r\n  );\r\n\r\n  const dataChart = React.useMemo(\r\n    () => data\r\n  );\r\n\r\n  const dataChartPie = React.useMemo(\r\n    () => data\r\n  );\r\n\r\n  const defaultLabelStyle = {\r\n    fontSize: '5px',\r\n    fontFamily: 'sans-serif',\r\n    fill: '#333'\r\n  };\r\n  const defaultLabelStyleHome = {\r\n    fontSize: '5px',\r\n    fontFamily: 'sans-serif',\r\n    fill: '#333',\r\n    display:'none'\r\n  };\r\n  if (type === \"Homepie\") {\r\n    return (\r\n      <div className=\"chartStyle\" >\r\n        <PieChart data={dataChartPie}\r\n          label={({ dataEntry }) => `${dataEntry.value !== 0 ? Math.round(dataEntry.percentage) + \"%\" : \"\"} `}\r\n          labelStyle={{ ...defaultLabelStyleHome }}\r\n          style={{ height: '350px', marginBottom: '30px' }}\r\n          lineWidth={40}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  if (type === \"pie\") {\r\n    return (\r\n      <div className=\"chartStyle\" >\r\n        <PieChart data={dataChartPie}\r\n          label={({ dataEntry }) => `${dataEntry.value !== 0 ? Math.round(dataEntry.percentage) + \"%\" : \"\"} `}\r\n          labelStyle={{ ...defaultLabelStyle }}\r\n          style={{ height: '250px', marginBottom: '30px' }}\r\n          lineWidth={70}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div className=\"chartStyle\" style={{ minHeight: \"400px\", width: \"100%\", overflowX: \"scroll\", overflowY: \"hidden\" }}>\r\n        <Chart\r\n          data={dataChart}\r\n          series={series}\r\n          axes={axes}\r\n          tooltip\r\n          title={title}\r\n        />\r\n      </div >\r\n    );\r\n  }\r\n};\r\n\r\nexport const ChartTemp = React.memo(ChartComp);\r\n","D:\\ErpNew\\Webcustomer\\src\\Common\\DataTable.js",["607","608","609"],"import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport ReactTable from \"react-table-6\";\r\nimport 'react-table-6/react-table.css';\r\nconst DataTableComp = ({\r\n    data = () => { },\r\n    columns = () => { },\r\n    IsLoad = false\r\n}) => {\r\n\r\n    useEffect(() => {\r\n       \r\n    }, []);\r\n    \r\n    return (\r\n        <ReactTable\r\n            data={data}\r\n            columns={columns}\r\n            defaultPageSize={10}\r\n            className=\"-striped -highlight\"\r\n            /* SubComponent={row => {\r\n                return(\r\n                    <input type=\"button\" value=\"Edit\"/>\r\n                )\r\n                }}  */\r\n            filterable={true}   \r\n            // Text\r\n            previousText='<'\r\n            nextText= '>'\r\n            loadingText= 'Loading...'\r\n            noDataText= 'Không tìm thấy dữ liệu'\r\n            pageText= 'Trang'\r\n            ofText= 'của'\r\n            rowsText= 'dòng'\r\n            \r\n            // Accessibility Labels\r\n            pageJumpText= 'chuyển đến trang'\r\n            rowsSelectorText= 'số dòng trên trang '\r\n\r\n        />\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const DataTable = React.memo(DataTableComp)","D:\\ErpNew\\Webcustomer\\src\\Common\\NoCustomer.js",["610","611","612","613"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst NoCustomerComp = React.forwardRef(() => {\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row Formlading\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h3>Vui lòng chọn mã khách hàng như hình bên dưới để sử dụng chức năng này !</h3>\r\n                        <img style={{ width: \"80%\" }} src=\"/assets/img/choosecustomer.png\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport const NoCustomer = React.memo(NoCustomerComp);\r\n","D:\\ErpNew\\Webcustomer\\src\\Common\\LadingDetail.js",["614","615","616","617","618","619","620","621","622"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../Services/Api\";\r\nimport { mainAction } from \"../Redux/Actions\";\r\nimport {\r\n  FormatMoney,\r\n  FormatDateJson,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../Utils\";\r\nconst LadingDetailComp = ({\r\n  LadingId = () => 0,\r\n  LadingCode = () => \"\"\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [Detail, setDetail] = useState({});\r\n  const [Products, setProducts] = useState([]);\r\n  const [History, setHistory] = useState([]);\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  useEffect(() => {\r\n    if (LadingCode !== \"\" || LadingId != 0)\r\n      GetLadingDetail();\r\n  }, [LadingCode, LadingId]);\r\n\r\n  const GetLadingDetail = async () => {\r\n    if (LadingCode !== \"\" || LadingId !== \"0\") {\r\n      try {\r\n        //Lấy thông tin vận đơn\r\n        let param = {\r\n          CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n          Code: LadingCode,\r\n          LadingId: LadingId,\r\n          CustomerID: CustomerID,\r\n          GroupId: GetCookieGroup(\"GroupId\")\r\n        }\r\n\r\n        let pr = {\r\n          Json: JSON.stringify(param),\r\n          func: \"APIC_spLading_Find\",\r\n        };\r\n        const data = await mainAction.API_spCallServer(pr, dispatch);\r\n        setDetail(data.Detail[0]);\r\n        setHistory(data.History);\r\n        setProducts(data.Products);\r\n      } catch (err) {\r\n        console.log(\"Eror\", err);\r\n        setDetail({});\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-12 dt\">\r\n      {Detail.Code === undefined && <div class=\"row cardcus\"><div class=\"col-md-12 text-center red\">Vận đơn {LadingCode} không được tạo bởi bạn. Bạn không có quyền tra cứu thông tin.</div></div>}\r\n      {Detail.Code !== undefined && <>\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 borderbottom\"> Thông tin vận đơn : <span style={{ color: 'green' }}>{LadingCode}</span></div>\r\n              {/*  thông tin */}\r\n              <div className=\"col-md-6\">\r\n                <div className=\"col-md-12 Blocktracking\">\r\n                  <div className=\"col-md-12 \">\r\n                    {/*  <i className=\"fa fa-barcode iwidth\"></i> */}\r\n                    <span className=\"colortext\"> Mã vận đơn: </span>\r\n                    <span className=\"noted\">{Detail.Code}</span>\r\n                  </div>\r\n                  <div className=\"col-md-12 padding-top-5\">\r\n                    {/*  <i className=\"fa fa-barcode iwidth\"></i> */}\r\n                    <span className=\"colortext\"> Mã đối tác: </span>\r\n                    <span className=\"noted\">\r\n                      {Detail.PartnerCode}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"col-md-12 padding-top-5\">\r\n                    {/*   <i className=\"fa fa-clock-o iwidth\"></i> */}\r\n                    <span className=\"colortext\">\r\n                      {\" \"}\r\n                      Thời gian dự kiến giao:{\" \"}\r\n                    </span>\r\n                    <span className=\"noted\"> Từ 8h - 17:30 ngày {\" \"}\r\n                      {FormatDateJson(\r\n                        Detail.DealineTime, 1\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"col-md-12 padding-top-5\">\r\n                    {/*   <i className=\"fa fa-sitemap iwidth\"></i> */}\r\n                    <span className=\"colortext\"> Trọng lượng (gram): </span>\r\n                    <span className=\"weight\">\r\n                      {FormatMoney(Detail.Weight)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"col-md-12 padding-top-5\">\r\n                    {/*   <i className=\"fa fa-tags iwidth\"></i> */}\r\n                    <span className=\"colortext\"> Số khối: </span>\r\n                    <span className=\"number-item\">\r\n                      {Detail.Mass} (cbm)\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"col-md-12 padding-top-5\">\r\n                    {/*   <i className=\"fa fa-pencil-square iwidth\"></i> */}\r\n                    <span className=\"colortext\"> Nội dung: </span>\r\n                    <span className=\"noted\">\r\n                      {Detail.Description}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"col-md-12 padding-top-5\">\r\n                    {/*   <i className=\"fa fa-file-text iwidth\"></i> */}\r\n                    <span className=\"colortext\"> Ghi chú: </span>\r\n                    <span className=\"noted\">{Detail.Noted}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-6\">\r\n                <div className=\"col-md-12 Blocktracking\">\r\n                  <div className=\"col-md-12\">\r\n                    {/*     <i className=\"fa fa-flag iwidth\"></i> */}\r\n                    <span className=\"colortext\"> Trạng thái: </span>\r\n                    <span style={{ background: '#65B168', color: 'white', padding: '3px 7px', borderRadius: '4px' }}>\r\n                      {Detail.StatusName}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-12 padding-top-5\">\r\n                    {/*   <i className=\"fa fa-clock-o iwidth\"></i> */}\r\n                    <span className=\"colortext\"> Thời gian tạo: </span>\r\n                    <span className=\"create-date\">\r\n                      {FormatDateJson(\r\n                        Detail.CreateDate\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-12 padding-top-5\">\r\n                    {/*       <i className=\"fa fa-briefcase iwidth\"></i> */}\r\n                    <span className=\"colortext\"> Dịch vụ: </span>\r\n                    <span className=\"number-item\">\r\n                      {Detail.ServiceName}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-12 padding-top-5\">\r\n                    {/*    <i className=\"fa fa-square-o iwidth\"></i> */}\r\n                    <span className=\"colortext\"> Số kiện: </span>\r\n                    <span className=\"number-item\">\r\n                      {FormatMoney(Detail.Number)}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-12 padding-top-5\">\r\n                    {/*     <i className=\"fa fa-credit-card iwidth\"></i> */}\r\n                    <span className=\"colortext\">\r\n                      {\" \"}\r\n                      Hình thức thanh toán:{\" \"}\r\n                    </span>\r\n                    <span className=\"noted\">\r\n                      {Detail.PaymentString}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 mt30\">\r\n            <div className=\"col-md-12 borderbottom row\">\r\n              {/*   <i className=\"material-icons\">bubble_chart</i> */} Thông tin người gửi</div>\r\n            <div className='col-md-12 Blocktracking'>\r\n              <div className=\"col-md-12 \">\r\n                {/*   <i className=\"fa fa-user iwidth\"></i> */}\r\n                <span className=\"colortext\">Tên khách hàng: </span>\r\n                <span className=\"sender-name noted\">\r\n                  {Detail.CustomerName}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 \">\r\n                {/*     <i className=\"fa fa-phone iwidth\"></i> */}\r\n                <span className=\"colortext\">Số ĐT: </span>\r\n                <span className=\"sender-phone noted\">\r\n                  {Detail.CustomerPhone}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 col-md-12 col-xs-12\">\r\n                {/*  <i className=\"fa fa-map-marker iwidth\"></i> */}\r\n                <span className=\"colortext\">Tỉnh đi: </span>\r\n                <span className=\"recipient-company noted\">\r\n                  {Detail.CitySendCode}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 col-xs-12\">\r\n                {/*  <i className=\"fa fa-map-marker iwidth\"></i> */}\r\n                <span className=\"colortext\"> Huyện đi: </span>\r\n                <span className=\"sender-address noted\">\r\n                  {Detail.DistrictName_From}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 col-xs-12\">\r\n                {/*  <i className=\"fa fa-map-marker iwidth\"></i> */}\r\n                <span className=\"colortext\"> Địa chỉ khách hàng: </span>\r\n                <span className=\"sender-address noted\">\r\n                  {Detail.CustomerAddress}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 col-xs-12\">\r\n                {/*   <i className=\"fa fa-user iwidth\"></i> */}\r\n                <span className=\"colortext\">Người gửi thực tế: </span>\r\n                <span className=\"sender-name noted\">\r\n                  {Detail.CustomerName_Reality}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 col-xs-12\">\r\n                {/*     <i className=\"fa fa-phone iwidth\"></i> */}\r\n                <span className=\"colortext\">\r\n                  {\" \"}\r\n                  SĐT người gửi thực tế:{\" \"}\r\n                </span>\r\n                <span className=\"sender-phone noted\">\r\n                  {Detail.CustomerPhone_Reality}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 col-xs-12\">\r\n                {/*  <i className=\"fa fa-map-marker iwidth\"></i> */}\r\n                <span className=\"colortext\"> Địa chỉ gửi thực tế: </span>\r\n                <span className=\"sender-address noted\">\r\n                  {Detail.CustomerAddress_Reality}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"col-md-6 mt30\">\r\n            <div className=\"col-md-12 borderbottom row\">\r\n              Thông tin người nhận\r\n            </div>\r\n            <div className=\"col-md-12 Blocktracking\">\r\n              <div className=\"col-md-12 col-xs-12\">\r\n                {/*   <i className=\"fa fa-user iwidth\"></i> */}\r\n                <span className=\"colortext\"> Tên người nhận: </span>\r\n                <span className=\"recipient-name noted\">\r\n                  {Detail.RecipientName}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 col-xs-12\">\r\n                {/*  <i className=\"fa fa-phone iwidth\"></i> */}\r\n                <span className=\"colortext\"> Số điện thoại: </span>\r\n                <span className=\"recipient-phone noted\">\r\n                  {Detail.RecipientPhone}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 col-xs-12\">\r\n                {/*  <i className=\"fa fa-flag iwidth\"></i> */}\r\n                <span className=\"colortext\"> Công ty: </span>\r\n                <span className=\"recipient-company noted\">\r\n                  {Detail.RecipientCompany}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 col-xs-12\">\r\n                {/*    <i className=\"fa fa-map-marker iwidth\"></i> */}\r\n                <span className=\"colortext\"> Tỉnh đến: </span>\r\n                <span className=\"recipient-company noted\">\r\n                  {Detail.CityRecipientCode}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 col-xs-12\">\r\n                {/*  <i className=\"fa fa-map-marker iwidth\"></i> */}\r\n                <span className=\"colortext\"> Huyện đến: </span>\r\n                <span className=\"recipient-company noted\">\r\n                  {Detail.District}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 col-xs-12\">\r\n                {/*     <i className=\"fa fa-map-marker iwidth\"></i> */}\r\n                <span className=\"colortext\"> Phường xã đến: </span>\r\n                <span className=\"recipient-company noted\">\r\n                  {Detail.Wards}\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-12 col-xs-12\">\r\n                {/*   <i className=\"fa fa-map-marker iwidth\"></i> */}\r\n                <span className=\"colortext\"> Địa chỉ: </span>\r\n                <span className=\"recipient-address noted\">\r\n                  {Detail.RecipientAddress}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt30 cardcus margin-top-20\">\r\n          <div className=\"col-md-12 borderbottom\">{/* <i className=\"material-icons\">content_paste</i> */} Thông tin đơn hàng</div>\r\n          <div className=\"col-md-12 tbdt margin-top-20\">\r\n            <table style={{ width: \"100%\" }} >\r\n              <tbody>\r\n                <tr className=\"tabledesign\">\r\n                  <td>\r\n                    <span className=\"colortext bold text-transform\" style={{ fontWeight: 'bold' }}> Tổng cước</span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"length bold\" style={{ fontWeight: 'bold' }}>\r\n                      {FormatMoney(Detail.Amount) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                  </td>\r\n                  <td>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"\">\r\n                  <td>\r\n                    <span className=\"colortext\"> Tiền thu hộ:</span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.COD) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"colortext\"> Cước trắng:</span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"length\">\r\n                      {FormatMoney(Detail.PriceMain) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n\r\n                </tr>\r\n                <tr className=\"linebottom\">\r\n                  <td>\r\n                    <span className=\"colortext\"> Cước phí thu hộ:</span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.CODPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"colortext\"> Tiền khai giá:</span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.Insured) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n\r\n                </tr>\r\n                <tr className=\"\">\r\n                  <td>\r\n                    <span className=\"colortext\"> Cước phí khai giá:</span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.InsuredPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"colortext\"> PPXD:</span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"number-item\">\r\n                      {FormatMoney(Detail.PPXDMoney) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n\r\n                </tr>\r\n                <tr className=\"linebottom\">\r\n                  <td>\r\n                    <span className=\"colortext\"> VAT:</span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"weight\">\r\n                      {FormatMoney(Detail.VATMoney) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"colortext\"> BP:</span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.BPPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n\r\n                </tr>\r\n                <tr className=\"\">\r\n                  <td>\r\n                    <span className=\"colortext\"> THBB:</span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.THBBPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"colortext\"> Phí phát tận tay: </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.PTTPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n\r\n                </tr>\r\n                <tr className=\"linebottom\">\r\n                  <td>\r\n                    <span className=\"colortext\"> Phí hàng quá khổ: </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.HQKPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"colortext\">\r\n                      {\" \"}\r\n                      Phát hàng siêu thị:{\" \"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.PSTPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n\r\n                </tr>\r\n                <tr className=\"\">\r\n                  <td>\r\n                    <span className=\"colortext\">\r\n                      {\" \"}\r\n                      Phí hàng đảo phú quốc:{\" \"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.PDPQPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"colortext\"> Tổng Hóa đơn: </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.PercentHD)}\r\n                    </span>\r\n                  </td>\r\n\r\n                </tr>\r\n                <tr className=\"linebottom\">\r\n                  <td>\r\n                    <span className=\"colortext\"> Phí hóa đơn: </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.HDPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"colortext\"> Tổng đồng kiểm: </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.PercentPDK)}\r\n                    </span>\r\n                  </td>\r\n\r\n                </tr>\r\n                <tr className=\"\">\r\n                  <td>\r\n                    <span className=\"colortext\">\r\n                      {\" \"}\r\n                      Phí N/P đồng kiểm:{\" \"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.NPDKPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"colortext\"> Phí lắp đặt: </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.LDPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n\r\n                </tr>\r\n                <tr className=\"linebottom\">\r\n                  <td>\r\n                    <span className=\"colortext\"> Phí gửi xe: </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.DrPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"colortext\"> Phụ cấp: </span>{\" \"}\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"length textalign\">\r\n                      {FormatMoney(Detail.Allowance) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n\r\n                </tr>\r\n                <tr className=\"\">\r\n                  <td>\r\n                    <span className=\"colortext\"> Phụ cấp NT: </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.OnSiteDeliveryMoney) +\r\n                        \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"colortext\"> Phụ cấp đóng gói: </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"noted\">\r\n                      {FormatMoney(Detail.PackPrice) + \" đ\"}\r\n                    </span>\r\n                  </td>\r\n                  <td colSpan=\"2\"></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt30 cardcus margin-top-20 \">\r\n          <div className=\"col-md-12 borderbottom\"> Thông tin sản phẩm</div>\r\n          <div className=\"col-md-12  margin-top-20 margin-bottom-20\">\r\n            <div className=\"table-responsive tbht\">\r\n              <table id=\"dataTable\" style={{ border: '1PX SOLID #eff1f3' }}>\r\n                <thead >\r\n                  <tr style={{ color: '#00884E' }}>\r\n                    <th style={{ paddingLeft: '5px', minWidth: '135px' }}> MÃ SẢN PHẨM</th>\r\n                    <th style={{ minWidth: '250px' }}>TÊN SẢN PHẨM</th>\r\n                    <th>SỐ LƯỢNG</th>\r\n                    <th>MÔ TẢ SẢN PHẨM</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {Products.map((item, index) => {\r\n                    return (\r\n                      <tr key={index} className={'line' + index}>\r\n                        <td>{item.ProductCode}</td>\r\n                        <td>{item.ProductName}</td>\r\n                        <td>{item.Quanlity}</td>\r\n                        <td>{item.ProductDescription}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={\"row mt30 cardcus margin-top-20\" + (Detail.Status !== 6 ? \" display-none\" : \"\")}>  {/*  */}\r\n          <div className=\"col-md-12 borderbottom\">\r\n            {/*  <i className=\"material-icons\">image_aspect_ratio</i> */} Hình ảnh báo phát\r\n          </div>\r\n          <div className=\"col-md-12 margin-top-10\">\r\n            {/* <i className=\"fa fa-user iwidth\"></i> */}\r\n            <span className=\"colortext\"> Tên người nhận thực tế: </span>\r\n            <span className=\"code\">{Detail.Recipient_reality}</span>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            {/*   <i className=\"fa fa-clock-o iwidth\"></i> */}\r\n            <span className=\"colortext\"> Ngày hoàn thành: </span>\r\n            <span className=\"code\">\r\n              {Detail.FinishDate === undefined ? \"\" : FormatDateJson(Detail.FinishDate)}\r\n            </span>\r\n          </div>\r\n          <div\r\n            className={\r\n              Detail.StatusName === 7\r\n                ? \"col-md-12\"\r\n                : \"col-md-12 display-none\"\r\n            }\r\n          >\r\n            {/* <i className=\"fa fa-pencil-square iwidth\"></i> */}\r\n            <span className=\"colortext\"> Lý do phát lại: </span>\r\n            <span className=\"code\">{Detail.ReasonName}</span>\r\n          </div>\r\n          <div\r\n            className=\"col-md-12\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <br /><b className=\"colortext\"> Hình ảnh phát hàng: </b><br />\r\n            {Detail.ImageDeliveryList !== undefined &&\r\n              Detail.ImageDeliveryList !== \"\" &&\r\n              Detail.ImageDeliveryList !== null\r\n              ? JSON.parse(Detail.ImageDeliveryList).map(\r\n                (img, index) => {\r\n                  return (\r\n                    <img\r\n                      src={img.splitdata}\r\n                      style={{ width: \"100%\", display: \"block\" }}\r\n                    />\r\n\r\n                  );\r\n                }\r\n              )\r\n              : null}\r\n          </div>\r\n          <div\r\n            className=\"col-md-12\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <br /><b className=\"colortext\"> Hình ảnh dịch vụ BP: </b><br />\r\n            {Detail.ImageBP !== undefined &&\r\n              Detail.ImageBP !== \"\" &&\r\n              Detail.ImageBP !== null\r\n              ? JSON.parse(Detail.ImageBP).map(\r\n                (img, index) => {\r\n                  return (\r\n                    <img\r\n                      src={img.splitdata}\r\n                      style={{ width: \"100%\", display: \"block\" }}\r\n                    />\r\n\r\n                  );\r\n                }\r\n              )\r\n              : null}\r\n          </div>\r\n          <div\r\n            className=\"col-md-12\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <br /><b className=\"colortext\"> Hình ảnh dịch vụ THBB: </b><br />\r\n            {Detail.ImageTHBB !== undefined &&\r\n              Detail.ImageTHBB !== \"\" &&\r\n              Detail.ImageTHBB !== null\r\n              ? JSON.parse(Detail.ImageBP).map(\r\n                (img, index) => {\r\n                  return (\r\n                    <img\r\n                      src={img.splitdata}\r\n                      style={{ width: \"100%\", display: \"block\" }}\r\n                    />\r\n\r\n                  );\r\n                }\r\n              )\r\n              : null}\r\n          </div>\r\n        </div>\r\n        <div className={\"row mt30 cardcus margin-top-20\" + (Detail.Status !== 6 ? \" display-none\" : \"\")}>  {/*  */}\r\n          <div className=\"col-md-12 borderbottom\">\r\n            {/*  <i className=\"material-icons\">image_aspect_ratio</i> */} Hình ảnh lắp đặt\r\n          </div>\r\n          <div\r\n            className=\"col-md-12 margin-top-20\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            {Detail.SetUpImage !== undefined &&\r\n              Detail.SetUpImage !== \"\" &&\r\n              Detail.SetUpImage !== null\r\n              ? JSON.parse(Detail.SetUpImage).map(\r\n                (img, index) => {\r\n                  return (\r\n                    <img\r\n                      src={img.splitdata}\r\n                      style={{ width: \"100%\", display: \"block\" }}\r\n                    />\r\n                  );\r\n                }\r\n              )\r\n              : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt30 cardcus margin-top-20 \">\r\n          <div className=\"col-md-12 borderbottom\">{/* <i className=\"material-icons\">lens_blur</i>  */}Hành trình vận đơn</div>\r\n          <div className=\"col-md-12  margin-top-20 margin-bottom-20\">\r\n            <div className=\"table-responsive tbht\">\r\n              <table id=\"dataTable\" style={{ border: '1PX SOLID #eff1f3' }}>\r\n                <thead >\r\n                  <tr style={{ color: '#00884E' }}>\r\n                    <th style={{ paddingLeft: '5px', minWidth: '135px' }}>  NGÀY GIỜ</th>\r\n                    <th style={{ minWidth: '250px' }}>BƯU CỤC XỬ LÝ</th>\r\n                    <th>TÌNH TRẠNG XỬ LÝ</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {History.map((item, index) => {\r\n                    return (\r\n                      <tr key={index} className={'line' + index}>\r\n                        <td>{FormatDateJson(item.DateTime)}</td>\r\n                        <td>{item.POName}</td>\r\n                        <td>{item.Note}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport const LadingDetail = React.memo(LadingDetailComp)","D:\\ErpNew\\Webcustomer\\src\\Common\\LoadingAlert.js",[],"D:\\ErpNew\\Webcustomer\\src\\Common\\SelectRecipient.js",["623","624","625","626","627","628","629","630","631","632","633","634"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DecodeString, GetCookie } from \"../Utils\";\r\nimport { mainAction } from \"../Redux/Actions\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../Services/Api\";\r\n\r\nconst SelectRecipientComp = React.forwardRef(({\r\n  onSelected = () => { },\r\n  onActive = 0,\r\n  onLoad = 0, //reload select box\r\n  defaultLabel = {}\r\n}, ref) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [data, setData] = useState([]);\r\n  const [valueS, setValueS] = useState(0);\r\n  const [_default, setDefault] = useState({\r\n    value: 0,\r\n    label: \"Chọn địa chỉ\",\r\n    obj: {\r\n      Name: \"\",\r\n      Phone: \"\",\r\n      CityId: 0,\r\n      City: \"Chọn tỉnh thành\",\r\n      DistrictId: 0,\r\n      District: \"Chọn quận huyện\",\r\n      WardId: 0,\r\n      Ward: \"Chọn phường xã\",\r\n      Street: \"\",\r\n      Address: \"\",\r\n      Company: \"\",\r\n      Lat:0,\r\n      Lng:0\r\n    }\r\n  });\r\n\r\n  const onSelecteItem = (item) => {\r\n    onSelected(item);\r\n    setValueS(item);\r\n  };\r\n\r\n  useEffect(() => {\r\n    onGetData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data.length === 0)\r\n      onGetData();\r\n    if (onActive !== 0) {\r\n      let _dataActive = data.find((p) => p.value === onActive);\r\n      setValueS(_dataActive);\r\n    }\r\n    else {\r\n      setValueS(_default);\r\n    }\r\n  }, [onActive]);\r\n\r\n  useEffect(() => {\r\n    if (onLoad === 1) {\r\n      onGetData();\r\n      onLoad = 0;\r\n    }\r\n  }, [onLoad]);\r\n\r\n  const onGetData = async () => {\r\n    const params = {\r\n      Json: '{\"CustomerId\":' + CustomerID + '}',\r\n      func: \"APIC_spCustomerRecipientLoad\",\r\n    };\r\n\r\n    // call redux saga\r\n    const list = await mainAction.API_spCallServer(params, dispatch);\r\n    let dataOptions = [], IsActive = 0;\r\n    dataOptions.push(_default);\r\n    if (onActive === 0) setValueS(_default);\r\n    list.forEach((element, index) => {\r\n      let option = {\r\n        value: element.Id,\r\n        label: element.Name + \" - \" + element.Phone + \" - \" + element.Address,\r\n        obj: element,\r\n      };\r\n      dataOptions.push(option);\r\n      if(element.Id===onActive)\r\n        IsActive=1;\r\n    });\r\n    setData(dataOptions);\r\n    if (IsActive === 1) {\r\n      let dataActive = dataOptions.find(a => a.value === onActive);\r\n      setValueS(dataActive);\r\n    } else setValueS(_default);\r\n  };\r\n\r\n  return <Select value={valueS} onChange={onSelecteItem} options={data} ref={ref} />;\r\n});\r\n\r\nexport const SelectRecipient = React.memo(SelectRecipientComp);\r\n","D:\\ErpNew\\Webcustomer\\src\\Common\\SelectDistrict.js",["635","636","637","638"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { mainAction } from \"../Redux/Actions\";\r\nconst SelectDistrictComp = React.forwardRef(({\r\n  onSelected = () => { },\r\n  ParentID = 0,\r\n  onActive = 0,\r\n  Disabled = false\r\n}, ref) => {\r\n  const [data, setData] = useState([]);\r\n  const [valueS, setValueS] = useState({});\r\n  const [_default, setDefault] = useState({ value: 0, label: \"Chọn quận huyện\" });\r\n  const onSelecteItem = (item) => {\r\n    onSelected(item);\r\n    setValueS(item);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const onGetLocation = async () => {\r\n    if (ParentID === 0) return;\r\n    const pr = {\r\n      ParentID: ParentID,\r\n      Type: 2,\r\n    };\r\n\r\n    const params = {\r\n      Json: JSON.stringify(pr),\r\n      func: \"CPN_spLocation_GET\",\r\n    };\r\n    // call redux saga\r\n    const list = await mainAction.API_spCallServer(params, dispatch);\r\n\r\n    let dataOptions = [], IsActive = 0;\r\n    dataOptions.push(_default);\r\n    list.forEach((element, index) => {\r\n      let option = { value: element.LocationId, label: element.Name, code:element.LocationCode };\r\n      dataOptions.push(option);\r\n    });\r\n    setData(dataOptions);\r\n    if (onActive !== 0) {\r\n      let dataActive = dataOptions.find(a => a.value === onActive);\r\n      setValueS(dataActive);\r\n    } else  setValueS(_default);\r\n  };\r\n\r\n  useEffect(() => {\r\n    onGetLocation();\r\n  }, [onActive,ParentID]);\r\n\r\n  return <Select value={valueS} onChange={onSelecteItem} options={data} ref={ref} isDisabled={Disabled} />;\r\n});\r\n\r\nexport const SelectDistrict = React.memo(SelectDistrictComp);\r\n","D:\\ErpNew\\Webcustomer\\src\\Common\\FormManagerAddress.js",["639","640","641","642","643","644","645","646","647","648","649"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport I18n from '../Language';\r\nimport { mainAction } from '../Redux/Actions';\r\nimport { SelectCity, SelectDistrict, SelectWard, SelectTypeAddress } from '.';\r\nimport { Alertwarning, Alertsuccess, Alerterror, GetLatLngGoogle, RemoveAccents, RemoveExtraSpace, FormatDateJson, RegExpAddress, GetCookie } from '../Utils';\r\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker } from \"react-google-maps\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport $ from \"jquery\";\r\n\r\nconst _FormManagerAddress = ({\r\n    Type = 'main', //Main or other to check calling from where\r\n    _ReturnMess = () => { },\r\n    CustomerRecipientId = null,\r\n    addressEditId = 0,\r\n    callReload = () => { },\r\n    onGetAddress = () => { }\r\n}) => {\r\n    //#region \r\n    const dispatch = useDispatch();\r\n    const [TonTimeDown, setTonTimeDown] = useState(\"30\")\r\n    const TonTimeDownRef = useRef()\r\n    const [ShowMap, setShowMap] = useState(false)\r\n    const [returnm, setreturnm] = useState(\"\")\r\n    const [ShowReset, setShowReset] = useState(false)\r\n    const [Title, setTitle] = useState(I18n.t('Location.ManagerAddress'));\r\n    const [Id, setId] = useState(0);\r\n    const [CityId, setCityId] = useState({ value: 0, label: I18n.t('System.Select') });\r\n    const CityIdRef = useRef();\r\n    const [DistrictId, setDistrictId] = useState({ value: 0, label: I18n.t('System.Select') });\r\n    const DistrictIdRef = useRef();\r\n    const [WardId, setWardId] = useState({ value: 0, label: I18n.t('System.Select') });\r\n    const WardIdRef = useRef();\r\n    const [NameAddress, setNameAddress] = useState('');\r\n    const NameAddressRef = useRef();\r\n    const [TypeAddress, setTypeAddress] = useState({ value: \"\", label: I18n.t('System.Select') });\r\n    const TypeAddressRef = useRef();\r\n    const [TimeDown, setTimeDown] = useState('10');\r\n    const TimeDownRef = useRef();\r\n    const [TimeSlotFrom, setTimeSlotFrom] = useState('06:00');\r\n    const TimeSlotFromRef = useRef();\r\n    const [TimeSlotTo, setTimeSlotTo] = useState('23:59');\r\n    const TimeSlotToRef = useRef();\r\n    const [Streets, setStreets] = useState('');\r\n    const StreetsRef = useRef();\r\n    const [CodeAddress, setCodeAddress] = useState('');\r\n    const CodeAddressRef = useRef();\r\n    const [FullAddress, setFullAddress] = useState('');\r\n    const [_FullAddress, set_FullAddress] = useState('');\r\n    const [FullCheck, setFullCheck] = useState(1);\r\n    const [disableBtn, setDisableBtn] = useState(false)\r\n    const [Code, setCode] = useState(\"\")\r\n    const [Lat, setLat] = useState(''); //10.809311,106.663967\r\n    const [Lng, setLng] = useState('');\r\n    const LatRef = useRef();\r\n    const LngRef = useRef();\r\n    const [ListDataaddress, setListDataaddress] = useState([]);\r\n    const [IsAcctive, setIsAcctive] = useState(0);\r\n    const [oldAddress, setOldAddress] = useState('');\r\n\r\n    //#endregion\r\n\r\n    useEffect(() => {\r\n        setFullAddress(\r\n            RemoveExtraSpace(\r\n                (Streets === \"\" ? \"\" : Streets + ',')\r\n                + (WardId.value === 0 ? \"\" : WardId.label + ',')\r\n                + (DistrictId.value === 0 ? \"\" : DistrictId.label + ',')\r\n                + (CityId.value === 0 ? \"\" : CityId.label)\r\n            )\r\n        )\r\n    }, [FullCheck]);\r\n\r\n    $('body').on(\"click\", function (event) {\r\n        setIsAcctive(0);\r\n    })\r\n\r\n    useEffect(() => {\r\n        CPN_spManagerAddress_Get()\r\n    }, [addressEditId]);\r\n    \r\n    const ClearForm = () => {\r\n        setreturnm(\"\")\r\n        setShowReset(false)\r\n        setTitle(I18n.t('Location.ManagerAddress'))\r\n        setId(0);\r\n        setDistrictId({ value: 0, label: I18n.t('System.Select') });\r\n        setWardId({ value: 0, label: I18n.t('System.Select') });\r\n        setCityId({ value: 0, label: I18n.t('System.Select') });\r\n        setNameAddress(\"\");\r\n        setStreets('');\r\n        setFullAddress(\"\");\r\n        set_FullAddress(\"\");\r\n        setLat(\"\");\r\n        setLng(\"\");\r\n        setCodeAddress(\"\");\r\n        setListDataaddress([]);\r\n    }\r\n\r\n    // Save \r\n    const CPN_spManagerAddress_Save = async (_lat, _lng) => {\r\n        try {\r\n            const params = {\r\n                Json: JSON.stringify({\r\n                    Id: Id,\r\n                    CodeAddress: 'K-' + CodeAddress,\r\n                    NameAddress: NameAddress,\r\n                    ProvinceId: CityId.value,\r\n                    ProvinceName: CityId.label,\r\n                    DistrictId: DistrictId.value,\r\n                    DistrictName: DistrictId.label,\r\n                    WardId: WardId.value,\r\n                    WardName: WardId.label,\r\n                    TypeAddress: \"Khác\",\r\n                    TimeDown: 10,\r\n                    TimeSlotFrom: \"06:00\",\r\n                    TimeSlotTo: \"23:59\",\r\n                    CreateId: 0,\r\n                    CreateName: \"Khách hàng tạo\",\r\n                    Streets: RemoveExtraSpace(Streets),\r\n                    FullAddress: FullAddress.trim(),\r\n                    Lat: _lat,\r\n                    Lng: _lng,\r\n                    TypeAddressCode: \"K\",\r\n                    TonTimeDown: 30,\r\n                    CustomerId: GetCookie(\"CustomerID\"),\r\n                    CustomerRecipientId: CustomerRecipientId\r\n                }),\r\n                func: \"CPN_spManagerAddress_Save\"\r\n            }\r\n\r\n            setCode('K-' + CodeAddress);\r\n            const result = await mainAction.API_spCallServer(params, dispatch);\r\n\r\n            if (result.Status === \"OK\") {\r\n                Alertsuccess(result.ReturnMess);\r\n                setDisableBtn(false)\r\n                setCodeAddress(\"\");\r\n                ClearForm()\r\n                // setShowMap(true)\r\n                // setLat(_lat)\r\n                // setLng(_lng)\r\n                _ReturnMess(result)\r\n\r\n                //tuan anh them \r\n                onGetAddress({ id: result.Id, name: FullAddress, lat: _lat, lng: _lng, oldAddress: _FullAddress, reserveAddress: oldAddress })\r\n\r\n            } else {\r\n                if (result.ReturnMess === \"Mã địa chỉ đã tồn tại !\" && Type !== 'main') {\r\n                    Alertwarning(\"Vui lòng ấn Reset sau đó ấn lưu lại !\");\r\n                    setShowReset(true)\r\n\r\n                } else {\r\n                    Alertwarning(result.ReturnMess);\r\n                }\r\n\r\n                setDisableBtn(false)\r\n                CodeAddressRef.current.focus();\r\n            }\r\n        } catch (error) {\r\n            Alerterror(\"Error !\")\r\n            setDisableBtn(false);\r\n            console.log(error, \"CPN_spManagerAddress_Save\")\r\n        }\r\n    }\r\n\r\n    //Check address exists\r\n    const CPN_spManagerAddress_Check = async () => {\r\n        if (CodeAddress === \"\") {\r\n            Alertwarning(\"Vui lòng nhập mã địa chỉ !\");\r\n            CodeAddressRef.current.focus();\r\n            return;\r\n        }\r\n        if (CityId.value === 0 || CityId.value === -1 || CityId.value === undefined) {\r\n            Alertwarning(\"Vui lòng chọn tỉnh thành !\");\r\n            CityIdRef.current.focus();\r\n            return;\r\n        }\r\n        if (DistrictId.value === 0 || DistrictId.value === -1 || DistrictId.value === undefined) {\r\n            Alertwarning(\"Vui lòng chọn quận/huyện !\");\r\n            DistrictIdRef.current.focus();\r\n            return;\r\n        }\r\n        if (WardId.value === 0 || WardId.value === -1 || WardId.value === undefined) {\r\n            Alertwarning(\"Vui lòng chọn phường/xã !\");\r\n            WardIdRef.current.focus();\r\n            return;\r\n        }\r\n        if (Streets === \"\") {\r\n            Alertwarning(\"Vui lòng nhập số nhà/tên đường !\");\r\n            StreetsRef.current.focus();\r\n            return;\r\n        }\r\n        if (RegExpAddress(FullAddress) === false) {\r\n            Alertwarning(\"Sai định dạng địa chỉ VD: Số nhà tên đường,phường xã,Quận huyện,Tỉnh thành !\");\r\n            StreetsRef.current.focus();\r\n            return;\r\n        }\r\n        if (NameAddress === \"\") {\r\n            Alertwarning(\"Vui lòng nhập đơn vị/tổ chức !\");\r\n            NameAddressRef.current.focus();\r\n            return;\r\n        }\r\n        try {\r\n            setDisableBtn(true)\r\n            if (_FullAddress === FullAddress) {\r\n                CPN_spManagerAddress_Save(Lat, Lng)\r\n\r\n                callReload = callReload(true)\r\n                addressEditId = 0\r\n                return\r\n\r\n            } else {\r\n                const params = {\r\n                    Json: JSON.stringify({ FullAddress: FullAddress, CustomerID: GetCookie(\"CustomerID\"), CustomerRecipientId: CustomerRecipientId }),\r\n                    func: \"CPN_spManagerAddress_Check\"\r\n                }\r\n\r\n                const result = await mainAction.API_spCallServer(params, dispatch);\r\n                debugger\r\n                if (result.Status === \"OK\") {\r\n                    if (Type === 'main') {\r\n\r\n                        CPN_spManagerAddress_Save(Lat, Lng)\r\n\r\n                        callReload = callReload(true)\r\n                        addressEditId = 0\r\n                    } else {\r\n\r\n                        setreturnm(\"\")\r\n                        const _GetLatLngGoogle = await GetLatLngGoogle(FullAddress);\r\n                        let provinceGoogle = RemoveExtraSpace(RemoveAccents(_GetLatLngGoogle[0].AddressReturn).toUpperCase())\r\n                        let province = RemoveExtraSpace(RemoveAccents(CityId.label.toUpperCase()))\r\n\r\n                        if (provinceGoogle.includes(province) === true) {\r\n                            CPN_spManagerAddress_Save(_GetLatLngGoogle[0].lat, _GetLatLngGoogle[0].lng)\r\n\r\n                            callReload = callReload(true)\r\n                            addressEditId = 0\r\n\r\n                        } else {\r\n                            setreturnm(\"Sai địa chỉ định vị ,sau khi định vị là : \" + _GetLatLngGoogle[0].AddressReturn + '. Vui lòng kiểm tra lại cột số nhà/tên đường !')\r\n                            setDisableBtn(false)\r\n                            StreetsRef.current.focus();\r\n                        }\r\n\r\n                        // window.confirm('Địa chỉ sau khi lấy định vị là : ' + _GetLatLngGoogle[0].AddressReturn + '. Vui lòng kiểm tra lại, nếu đúng OK tiến hành lưu, nếu sai,chọn HỦY và chỉnh sửa lại cột số nhà/tên đường !') ? CPN_spManagerAddress_Save(_GetLatLngGoogle[0].lat, _GetLatLngGoogle[0].lng) : setDisableBtn(false)\r\n                    }\r\n                } else {\r\n                    Alertwarning(result.ReturnMess)\r\n                    setDisableBtn(false)\r\n                }\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            Alerterror(\"Error !\")\r\n            setDisableBtn(false);\r\n            console.log(error, \"CPN_spManagerAddress_Check\")\r\n        }\r\n    }\r\n\r\n    const EnterCode = async (e, key) => {\r\n        if (e.code === \"Enter\" || key === 2) {\r\n\r\n            try {\r\n                if (e.target.value === \"\") {\r\n                    return\r\n                }\r\n                setDisableBtn(true)\r\n                const params = {\r\n                    Json: JSON.stringify({\r\n                        CodeAddress: e.target.value,\r\n                        CreateId: 0\r\n                    }),\r\n                    func: \"CPN_spManagerAddress_EditList\"\r\n                }\r\n                const result = await mainAction.API_spCallServer(params, dispatch);\r\n\r\n                if (result.Status === \"NO\") {\r\n                    Alertwarning(result.ReturnMess)\r\n                    setTitle(I18n.t('Location.ManagerAddress'))\r\n                    ClearForm()\r\n                    setDisableBtn(false);\r\n                    return\r\n                }\r\n                if (result.Status === \"OK\") {\r\n                    setTitle(I18n.t('Location.ManagerAddress'))\r\n                    // ClearForm()\r\n                    setDisableBtn(false);\r\n                    return\r\n                } else {\r\n\r\n                    setTitle(I18n.t(\"Delivery.Edit\") + \" \" + TypeAddress.value + '-' + e.target.value)\r\n                    setId(result[0].Id);\r\n                    const a = (result[0].CodeAddress.trim()).split(result[0].TypeAddressCode + '-')\r\n                    setCodeAddress(a[1]);\r\n                    //ward to district to city ewwww\r\n                    setWardId({ value: result[0].WardId, label: result[0].WardName });\r\n                    setDistrictId({ value: result[0].DistrictId, label: result[0].DistrictName });\r\n                    setCityId({ value: result[0].ProvinceId, label: result[0].ProvinceName });\r\n                    setNameAddress(result[0].NameAddress);\r\n                    setTypeAddress({ value: result[0].TypeAddressCode, label: result[0].TypeAddress });\r\n                    setTimeDown(result[0].TimeDown);\r\n                    setTonTimeDown(result[0].TonTimeDown);\r\n                    setTimeSlotFrom(result[0].TimeSlotFrom);\r\n                    setTimeSlotTo(result[0].TimeSlotTo);\r\n                    setStreets(result[0].Streets);\r\n                    setFullAddress(result[0].FullAddress);\r\n                    set_FullAddress(result[0].FullAddress);\r\n                    setLat(result[0].Lat);\r\n                    setLng(result[0].Lng);\r\n                    setDisableBtn(false);\r\n                    // setShowMap(false);\r\n                }\r\n\r\n            } catch (error) {\r\n                Alerterror(\"Error !\")\r\n                setDisableBtn(false);\r\n                console.log(error, \"CPN_spManagerAddress_EditList\")\r\n            }\r\n        }\r\n    }\r\n\r\n    //#region Load Address by Id || tuan anh them \r\n    const CPN_spManagerAddress_Get = async () => {\r\n\r\n        try {\r\n\r\n            setDisableBtn(true)\r\n            const params = {\r\n                Json: JSON.stringify({\r\n                    AddressId: addressEditId === 1000 ? 0 : addressEditId,\r\n                }),\r\n                func: \"CPN_spManagerAddress_Get\"\r\n            }\r\n            const result = await mainAction.API_spCallServer(params, dispatch);\r\n\r\n            if (result.length > 0) {\r\n                setTitle(I18n.t('Location.ManagerAddress'))\r\n                // ClearForm()\r\n                setDisableBtn(false);\r\n\r\n                // setTitle(I18n.t(\"Delivery.Edit\") + \" \" + TypeAddress.value + '-' + e.target.value)\r\n                setId(result[0].Id);\r\n                const a = (result[0].CodeAddress.trim()).split(result[0].TypeAddressCode + '-')\r\n                setCodeAddress(a[1]);\r\n                //ward to district to city ewwww\r\n                setWardId({ value: result[0].WardId, label: result[0].WardName });\r\n                setDistrictId({ value: result[0].DistrictId, label: result[0].DistrictName });\r\n                setCityId({ value: result[0].ProvinceId, label: result[0].ProvinceName });\r\n                setNameAddress(result[0].NameAddress);\r\n                setTypeAddress({ value: result[0].TypeAddressCode, label: result[0].TypeAddress });\r\n                setTimeDown(result[0].TimeDown);\r\n                setTonTimeDown(result[0].TonTimeDown);\r\n                setTimeSlotFrom(result[0].TimeSlotFrom);\r\n                setTimeSlotTo(result[0].TimeSlotTo);\r\n                setStreets(result[0].Streets);\r\n                setFullAddress(result[0].FullAddress);\r\n                set_FullAddress(result[0].FullAddress);\r\n                setOldAddress(result[0].FullAddress)\r\n                setLat(result[0].Lat);\r\n                setLng(result[0].Lng);\r\n                setDisableBtn(false);\r\n                // setShowMap(false);\r\n                return\r\n            }\r\n            setDisableBtn(false);\r\n\r\n        } catch (error) {\r\n            Alerterror(\"Error !\")\r\n            setDisableBtn(false);\r\n            console.log(error, \"CPN_spManagerAddress_Get\")\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //map\r\n    // const Map = () => {\r\n    //     return (\r\n    //         <GoogleMap\r\n    //             zoom={14}\r\n    //             scrollwheel={true}\r\n    //             center={{ lat: +Lat, lng: +Lng }}\r\n    //             options={{\r\n    //                 mapTypeControl: true,\r\n    //                 mapTypeControlOptions: {\r\n    //                     style: window.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\r\n    //                     position: window.google.maps.ControlPosition.TOP_RIGHT\r\n    //                 },\r\n    //             }}\r\n    //         >\r\n    //             <Marker\r\n    //                 position={{ lat: +Lat, lng: +Lng }}\r\n    //                 icon={{\r\n    //                     url: './assets/img/flag.png',\r\n    //                     scaledSize: new window.google.maps.Size(30, 30),\r\n    //                     anchor: { x: 20, y: 20 }\r\n    //                 }}\r\n    //             />\r\n    //         </GoogleMap>\r\n    //     );\r\n    // }\r\n    // const MapWithAMarker = withScriptjs(withGoogleMap(Map))\r\n\r\n    const RenderCode = (e) => {\r\n        if (Type === 'main') { return }\r\n        let a = DistrictId.code.split('-'), b = e.code, d = new Date();\r\n        let _d = FormatDateJson(d)\r\n        let re = _d.split(' ');\r\n        let f = re[1].replaceAll(':', '');\r\n        setCodeAddress((a[1] + b + f).toUpperCase())\r\n    }\r\n\r\n    const CPN_spManagerAddress_Like = async (data) => {\r\n        if (data.length < 4) { return }\r\n\r\n        const pr = {\r\n            DataLike: data,\r\n            CreateId: 0\r\n        }\r\n\r\n        const params = {\r\n            Json: JSON.stringify(pr),\r\n            func: \"CPN_spManagerAddress_Like\"\r\n        }\r\n\r\n        try {\r\n            const result = await mainAction.API_spCallServer(params, dispatch);\r\n            if (result.length > 0) {\r\n                setListDataaddress(result)\r\n            } else {\r\n                setListDataaddress([])\r\n            }\r\n        } catch (e) {\r\n            Alerterror(\"Lỗi dữ liệu tìm kiếm, Vui lòng liên hệ IT Netco!\");\r\n            console.log(e, \"CPN_spManagerAddress_Like\")\r\n        }\r\n    }\r\n\r\n    const chosenAddress = (result) => {\r\n        setTitle(I18n.t(\"Delivery.Edit\") + \" \" + result.CodeAddress)\r\n        setId(result.Id);\r\n        const a = (result.CodeAddress).split(result.TypeAddressCode + '-')\r\n        setCodeAddress(a[1]);\r\n        //ward to district to city ewwww\r\n        setWardId({ value: result.WardId, label: result.WardName });\r\n        setDistrictId({ value: result.DistrictId, label: result.DistrictName });\r\n        setCityId({ value: result.ProvinceId, label: result.ProvinceName });\r\n        setNameAddress(result.NameAddress);\r\n        setTypeAddress({ value: result.TypeAddressCode, label: result.TypeAddress });\r\n        setTimeDown(result.TimeDown);\r\n        setTonTimeDown(result.TonTimeDown);\r\n        setTimeSlotFrom(result.TimeSlotFrom);\r\n        setTimeSlotTo(result.TimeSlotTo);\r\n        setStreets(result.Streets);\r\n        setFullAddress(result.FullAddress);\r\n        set_FullAddress(result.FullAddress);\r\n        setLat(result.Lat);\r\n        setLng(result.Lng);\r\n        Alertsuccess(\"Đã chọn địa chỉ có sẵn \" + result.CodeAddress + \" !\")\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={ShowMap === true ? \"display-none\" : \"\"}>\r\n                <div class=\"card-header \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-6\">\r\n                            <h3 class=\"card-title\">Quản lý địa chỉ</h3>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-6 top-xs-8s\">\r\n                            <button\r\n                                disabled={disableBtn}\r\n                                type=\"button\"\r\n                                class=\"btn btn-sm btn-cancel pull-right margin-left-5\"\r\n                                onClick={ClearForm}\r\n                            >\r\n                                <i class=\"fas fa-times-circle pr-2\"></i>\r\n                                Hủy\r\n                            </button>\r\n                            <button\r\n                                disabled={disableBtn}\r\n                                type=\"button\"\r\n                                class=\"btn btn-sm btn-save pull-right\"\r\n                                onClick={CPN_spManagerAddress_Check}\r\n                            >\r\n                                <i class=\"far fa-save pr-2\"></i>\r\n                                Lưu\r\n                            </button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\"> Quản lý địa chỉ<span className=\"red\">(*)</span></label>\r\n                                <div class=\"input-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\">K-</span>\r\n                                    </div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        readOnly={Type !== 'main' ? true : false}\r\n                                        ref={CodeAddressRef}\r\n                                        value={CodeAddress}\r\n                                        onChange={e => {\r\n                                            setCodeAddress(RemoveExtraSpace(RemoveAccents(e.target.value.toUpperCase())))\r\n                                        }}\r\n                                        onKeyPress={(e) => {\r\n                                            EnterCode(e, 1);\r\n                                        }}\r\n                                    />\r\n                                    <div class={ShowReset === true ? \"input-group-prepend\" : \"display-none\"} >\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            style={{ borderTopRightRadius: \"0.25rem\", borderBottomRightRadius: \"0.25rem\" }}\r\n                                            class=\"btn btn-cancel pull-right btn-xs\"\r\n                                            onClick={e => RenderCode({ code: WardId.code })}\r\n                                        >\r\n                                            Reset\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\">Địa chỉ <sup className=\"red\">(*)</sup></label>\r\n                                <div class=\"input-group\">\r\n                                    <input type=\"text\" readOnly class=\"form-control\" value={FullAddress} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\">Tỉnh thành <span className=\"red\">(*)</span></label>\r\n                                <SelectCity\r\n                                    onSelected={e => {\r\n                                        setCityId(e)\r\n                                        setDistrictId({ value: 0, label: I18n.t('System.Select') })\r\n                                        setWardId({ value: 0, label: I18n.t('System.Select') })\r\n                                        setFullCheck(FullCheck + 1)\r\n                                    }}\r\n                                    ref={CityIdRef}\r\n                                    onActive={CityId.value}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\">Quận huyện <span className=\"red\">(*)</span></label>\r\n                                <SelectDistrict\r\n                                    ParentID={CityId.value}\r\n                                    ref={DistrictIdRef}\r\n                                    onActive={DistrictId.value}\r\n                                    onSelected={e => {\r\n                                        setDistrictId(e)\r\n                                        setFullCheck(FullCheck + 1)\r\n                                        setWardId({ value: 0, label: I18n.t('System.Select') })\r\n\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\">Phường xã<span className=\"red\">(*)</span></label>\r\n                                <SelectWard\r\n                                    ParentID={DistrictId.value}\r\n                                    ref={WardIdRef}\r\n                                    onActive={WardId.value}\r\n                                    onSelected={e => {\r\n                                        setWardId(e)\r\n                                        setFullCheck(FullCheck + 1)\r\n                                        RenderCode(e)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\">Số nhà / đường<span className=\"red\">(*)</span></label>\r\n                                <div class=\"input-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Tìm địa chỉ có sẵn ,VD: 39B trường sơn\"\r\n                                        class=\"form-control\"\r\n                                        ref={StreetsRef}\r\n                                        value={Streets}\r\n                                        onChange={e => {\r\n                                            setStreets(e.target.value)\r\n                                            setFullCheck(FullCheck + 1)\r\n                                            CPN_spManagerAddress_Like(e.target.value)\r\n                                            setIsAcctive(1)\r\n                                        }}\r\n                                        onPaste={(e) => {\r\n                                            e.preventDefault()\r\n                                            return false;\r\n                                        }}\r\n                                        onCopy={(e) => {\r\n                                            e.preventDefault()\r\n                                            return false;\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div id=\"div-sender-master\" class={IsAcctive === 0 ? \"display-none\" : \"\"}>\r\n                                    <div id=\"div-sender\" class=\"col-md-12 col-sm-12 col-xs-12 div-sender\">\r\n                                        {\r\n                                            ListDataaddress.length > 0 ?\r\n                                                (\r\n                                                    ListDataaddress.map((item, index) => {\r\n                                                        return (\r\n                                                            <div\r\n                                                                className=\"select-option-like\"\r\n                                                                title={item.FullAddress}\r\n                                                                key={index}\r\n                                                                value={item.Id}\r\n                                                                onClick={e => chosenAddress(item)}\r\n                                                            >\r\n                                                                {item.FullAddress}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                ) :\r\n                                                (\r\n                                                    <div className=\"select-option-like\" key={0}>{Streets}</div>\r\n                                                )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-sm-12 col-md-4\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\">Đơn vị/Tổ chức<sup className=\"red\">(*)</sup></label>\r\n                                <div class=\"input-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        ref={NameAddressRef}\r\n                                        value={NameAddress}\r\n                                        onChange={e => setNameAddress(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4 display-none\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\">  Thời gian lên/xuống hàng/1 tấn(Phút)<sup className=\"red\">(*)</sup></label>\r\n                                <div class=\"input-group\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        class=\"form-control\"\r\n                                        min=\"0\"\r\n                                        placeholder=\"Ví dụ : 6\"\r\n                                        ref={TonTimeDownRef}\r\n                                        value={TonTimeDown}\r\n                                        onChange={e => setTonTimeDown(RemoveExtraSpace(e.target.value))}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4 display-none\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\"> Thời gian tối thiểu lên/xuống hàng(Phút)<sup className=\"red\">(*)</sup></label>\r\n                                <div class=\"input-group\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        class=\"form-control\"\r\n                                        min=\"0\"\r\n                                        placeholder=\"Ví dụ : 6\"\r\n                                        ref={TimeDownRef}\r\n                                        value={TimeDown}\r\n                                        onChange={e => setTimeDown(RemoveExtraSpace(e.target.value))}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4 display-none\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\"> {I18n.t('Location.TimeSlotFrom')}<sup className=\"red\">(*)</sup></label>\r\n                                <div class=\"input-group\">\r\n                                    <input\r\n                                        type=\"time\"\r\n                                        class=\"form-control\"\r\n                                        placeholder=\"Ví dụ : 8:00\"\r\n                                        ref={TimeSlotFromRef}\r\n                                        value={TimeSlotFrom}\r\n                                        onChange={e => setTimeSlotFrom(RemoveExtraSpace(e.target.value))}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4 display-none\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\"> {I18n.t('Location.TimeSlotTo')}<sup className=\"red\">(*)</sup></label>\r\n                                <div class=\"input-group\">\r\n                                    <input\r\n                                        type=\"time\"\r\n                                        class=\"form-control\"\r\n                                        placeholder=\"Ví dụ : 9:00\"\r\n                                        ref={TimeSlotToRef}\r\n                                        value={TimeSlotTo}\r\n                                        onChange={e => setTimeSlotTo(RemoveExtraSpace(e.target.value))}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4 display-none\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\"> Lat<sup className=\"red\">(*)</sup></label>\r\n                                <div class=\"input-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        readOnly={Type === 'main' ? false : true}\r\n                                        ref={LatRef}\r\n                                        class=\"form-control\"\r\n                                        value={Lat}\r\n                                        onChange={e => setLat(RemoveExtraSpace(e.target.value))}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-4 display-none\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"label\"> Lng<sup className=\"red\">(*)</sup></label>\r\n                                <div class=\"input-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        readOnly={Type === 'main' ? false : true}\r\n                                        ref={LngRef}\r\n                                        class=\"form-control\"\r\n                                        value={Lng}\r\n                                        onChange={e => {\r\n                                            setLng(RemoveExtraSpace(e.target.value))\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-12\">\r\n                            <h5 className={returnm !== \"\" ? \"red\" : \"display-none\"}>{returnm}</h5>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className={ShowMap === false ? \"display-none\" : \"\"}>\r\n                <div class=\"card-header \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-6\">\r\n                            <h3 class=\"card-title\">Bản đồ : {Code}</h3>\r\n                        </div>\r\n                        <div class=\"col-sm-12 col-md-6 margin-top-5s\">\r\n                            <button\r\n                                disabled={disableBtn}\r\n                                type=\"button\"\r\n                                class=\"btn btn-sm btn-save pull-right margin-left-5\"\r\n                                value={Code}\r\n                                onClick={e => EnterCode(e, 2)}\r\n                            >\r\n                                <i class=\"far fa-edit\"></i>\r\n                                {I18n.t(\"Delivery.Edit\")}\r\n                            </button>\r\n                            <button\r\n                                disabled={disableBtn}\r\n                                type=\"button\"\r\n                                class=\"btn btn-sm btn-cancel pull-right\"\r\n                                onClick={e => {\r\n                                    // setShowMap(false)\r\n                                    setLat(\"\")\r\n                                    setLng(\"\")\r\n                                }}\r\n                            >\r\n                                <i class=\"fas fa-undo\"></i>\r\n                                {I18n.t('Delivery.Return')}\r\n                            </button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div class=\"card-body \">\r\n                                        <div class=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-12\">\r\n                                                <MapWithAMarker\r\n                                                    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBUBW5JbPqpurOUq2iV3Ys3rx59IktH1-s&v=3.exp&libraries=geometry,drawing,places\"\r\n                                                    loadingElement={<div style={{ height: `100%` }} />}\r\n                                                    containerElement={<div style={{ height: `600px` }} />}\r\n                                                    mapElement={<div style={{ height: `100%` }} />}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport const FormManagerAddress = React.memo(_FormManagerAddress)","D:\\ErpNew\\Webcustomer\\src\\Common\\SelectCity.js",["650","651","652"],"import React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst SelectCityComp = React.forwardRef(({\r\n  Disabled = false,\r\n  onSelected = () => { },\r\n  onActive = 0\r\n}, ref) => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [valueS, setValueS] = useState({});\r\n  const [_default, setDefault] = useState({ value: 0, label: \"Chọn tỉnh thành\" });\r\n\r\n  const onSelecteItem = (item) => {\r\n    onSelected(item);\r\n    setValueS(item);\r\n  };\r\n  const getListCityFromLocal = async () => {\r\n    const listState = [\r\n      { value: 0, label: \"Chọn tỉnh thành\" },\r\n      { value: 1, label: \"Hà Nội\" },\r\n      { value: 32, label: \"Đà Nẵng\" },\r\n      { value: 50, label: \"Hồ Chí Minh\" },\r\n      { value: 47, label: \"Bình Dương\" },\r\n      { value: 59, label: \"Cần Thơ\" },\r\n      { value: 2, label: \"Hà Giang\" },\r\n      { value: 3, label: \"Cao Bằng\" },\r\n      { value: 4, label: \"Bắc Kạn\" },\r\n      { value: 5, label: \"Tuyên Quang\" },\r\n      { value: 6, label: \"Lào Cai\" },\r\n      { value: 7, label: \"Điện Biên\" },\r\n      { value: 8, label: \"Lai Châu\" },\r\n      { value: 9, label: \"Sơn La\" },\r\n      { value: 10, label: \"Yên Bái\" },\r\n      { value: 11, label: \"Hòa Bình\" },\r\n      { value: 12, label: \"Thái Nguyên\" },\r\n      { value: 13, label: \"Lạng Sơn\" },\r\n      { value: 14, label: \"Quảng Ninh\" },\r\n      { value: 15, label: \"Bắc Giang\" },\r\n      { value: 16, label: \"Phú Thọ\" },\r\n      { value: 17, label: \"Vĩnh Phúc\" },\r\n      { value: 18, label: \"Bắc Ninh\" },\r\n      { value: 19, label: \"Hải Dương\" },\r\n      { value: 20, label: \"Hải Phòng\" },\r\n      { value: 21, label: \"Hưng Yên\" },\r\n      { value: 22, label: \"Thái Bình\" },\r\n      { value: 23, label: \"Hà Nam\" },\r\n      { value: 24, label: \"Nam Định\" },\r\n      { value: 25, label: \"Ninh Bình\" },\r\n      { value: 26, label: \"Thanh Hóa\" },\r\n      { value: 27, label: \"Nghệ An\" },\r\n      { value: 28, label: \"Hà Tĩnh\" },\r\n      { value: 29, label: \"Quảng Bình\" },\r\n      { value: 30, label: \"Quảng Trị\" },\r\n      { value: 31, label: \"Huế\" },\r\n      { value: 33, label: \"Quảng Nam\" },\r\n      { value: 34, label: \"Quảng Ngãi\" },\r\n      { value: 35, label: \"Bình Định\" },\r\n      { value: 36, label: \"Phú Yên\" },\r\n      { value: 37, label: \"Khánh Hòa\" },\r\n      { value: 38, label: \"Ninh Thuận\" },\r\n      { value: 39, label: \"Bình Thuận\" },\r\n      { value: 40, label: \"Kon Tum\" },\r\n      { value: 41, label: \"Gia Lai\" },\r\n      { value: 42, label: \"Đắk Lắk\" },\r\n      { value: 43, label: \"Đắk Nông\" },\r\n      { value: 44, label: \"Lâm Đồng\" },\r\n      { value: 45, label: \"Bình Phước\" },\r\n      { value: 46, label: \"Tây Ninh\" },\r\n      { value: 48, label: \"Đồng Nai\" },\r\n      { value: 49, label: \"Vũng Tàu\" },\r\n      { value: 51, label: \"Long An\" },\r\n      { value: 52, label: \"Tiền Giang\" },\r\n      { value: 53, label: \"Bến Tre\" },\r\n      { value: 54, label: \"Trà Vinh\" },\r\n      { value: 55, label: \"Vĩnh Long\" },\r\n      { value: 56, label: \"Đồng Tháp\" },\r\n      { value: 57, label: \"An Giang\" },\r\n      { value: 58, label: \"Kiên Giang\" },\r\n      { value: 60, label: \"Hậu Giang\" },\r\n      { value: 61, label: \"Sóc Trăng\" },\r\n      { value: 62, label: \"Bạc Liêu\" },\r\n      { value: 63, label: \"Cà Mau\" },\r\n    ];\r\n    setData(listState);\r\n    if (onActive !== 0) {\r\n      let dataActive = listState.find(a => a.value === onActive);\r\n      setValueS(dataActive);\r\n    }\r\n    else {\r\n      setValueS(_default);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListCityFromLocal();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (onActive !== 0) {\r\n      let _dataActive = data.find((p) => p.value === onActive);\r\n      setValueS(_dataActive);\r\n    }\r\n    else {\r\n      setValueS(_default);\r\n    }\r\n  }, [onActive]);\r\n\r\n  return (\r\n    <Select\r\n      isDisabled={Disabled}\r\n      value={valueS}\r\n      onChange={onSelecteItem}\r\n      options={data}\r\n      ref={ref}\r\n    />\r\n  );\r\n});\r\n\r\nexport const SelectCity = React.memo(SelectCityComp);\r\n","D:\\ErpNew\\Webcustomer\\src\\Redux\\Reducers\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Sagas\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Services\\Api.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Reducers\\MainAction.js",["653"],"import { mainTypes } from '../Actions'\r\nconst initialState = {\r\n    IsLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        \r\n        case mainTypes.LOADING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                IsLoading: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\ErpNew\\Webcustomer\\src\\Redux\\Reducers\\Category\\Location.js",["654"],"import { LocationType } from '../../Actions/Category'\r\nconst initialState = {\r\n    profile: null,\r\n    listCity: [],\r\n    cityID: 0,\r\n    districtID: 0,\r\n    wardID:0,\r\n    listDistrict: [],\r\n    listData: [],\r\n    listCityEror:''\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        \r\n        case LocationType.GET_CITY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listCity: action.payload\r\n            }\r\n        case LocationType.GET_DISTRICT_FROM_CITY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listDistrict: action.payload\r\n        }\r\n        case LocationType.UPDATE_CITY_ID_SUCCESS:\r\n            return {\r\n                ...state,\r\n                cityID: action.payload\r\n            }\r\n        case LocationType.UPDATE_DISTRICT_ID_SUCCESS:\r\n            return {\r\n                ...state,\r\n                districtID: action.payload\r\n            }\r\n        case LocationType.UPDATE_WARD_ID_SUCCESS:\r\n            return {\r\n                ...state,\r\n                wardID: action.payload\r\n            }\r\n        case LocationType.GET_LOCATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                listData: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","D:\\ErpNew\\Webcustomer\\src\\Redux\\Sagas\\MainAction.js",["655","656","657","658","659","660","661","662","663"],"import { put, takeEvery, take, cancel, delay, takeLatest } from 'redux-saga/effects';\r\nimport { mainTypes } from \"../Actions\";\r\nimport { APIKey, API_END_POINT, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { api, API_END_POINT_APP } from '../../Services';\r\nimport { EN, VN, LANE } from '../../Enum';\r\nimport { getData } from '../../Utils/Storage';\r\nimport I18n from '../../Language'\r\nimport { param } from 'jquery';\r\n\r\nexport function* LOADING(action) {\r\n    try {\r\n        delay(300);\r\n        const IsLoading = action && action.params.IsLoading;\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: IsLoading });\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\nexport function* API_spCallServer(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        //params received\r\n        const params = action && action.params\r\n        params.API_key = APIKey;\r\n        params.TokenDevices = TOKEN_DEVICE;\r\n        /// catch api die\r\n        yield delay(300);\r\n        //Check select data redis\r\n        switch (params.func) {\r\n            case \"CPN_spLocationCheckCustomer\":\r\n                params.func = \"CPN_spLocationCheckCustomer\"\r\n                break;\r\n\r\n            case \"CPN_spLading_PriceMain\":\r\n                params.func = \"CPN_spLading_PriceMain\"\r\n                break;\r\n\r\n            case \"CPN_spLadingGetAnotherServiceMoney\":\r\n                params.func = \"CPN_spLadingGetAnotherServiceMoney\"\r\n                break;\r\n\r\n            case \"CPN_spLading_Save\":\r\n                params.func = \"CPN_spLading_Save_V3\"\r\n                break;\r\n\r\n            case \"CPN_spLading_CreateCode\":\r\n                params.func = \"CPN_spLading_CreateCode_V3\"\r\n                break;\r\n\r\n            case \"CPN_spLading_Upload_Excel\":\r\n                params.func = \"CPN_spLading_Upload_Excel_V3\"\r\n                break;\r\n\r\n            case \"CPN_spLocation_GET\":\r\n                params.func = \"CPN_spLocation_GET\"\r\n                break;\r\n\r\n            case \"WH_spWareHouse_Area_List_V1\":\r\n                params.func = \"WH_spWareHouse_Area_List_V1\"\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        //End check select data redis\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/API_spCallServer/\", params)\r\n        // check call api success\r\n\r\n        if (respone && respone.status === 200) {\r\n            respone.data === \"\" ? action.resolve([]) : action.resolve(JSON.parse(respone.data))\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        else {\r\n            // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n    }\r\n}\r\nexport function* API_spCallServerNoSQL(action) {\r\n    try {\r\n        const params = action && action.params\r\n        params.API_key = APIKey;\r\n        params.TokenDevices = TOKEN_DEVICE;\r\n        /// catch api die\r\n        yield delay(300);\r\n        //Check select data redis\r\n        switch (params.func) {\r\n            case \"CPN_spPayment_COD_Customer_SendMail\":\r\n                params.func = \"CPN_spPayment_COD_Customer_SendMail\"\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        //End check select data redis\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT + \"/ApiMain/\" + params.func, params)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            respone.data === \"\" ? action.resolve([]) : action.resolve(JSON.parse(respone.data))\r\n        }\r\n        else {\r\n            // api call fail\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n\r\n        }\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n    }\r\n    catch (e) {\r\n        ///something wrong\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n\r\n    }\r\n}\r\nexport function* changeLanguage(action) {\r\n    try {\r\n        const language = action.params.language;\r\n        const Type = action.params.Type;\r\n        //let newLanguage = language == VN ? EN : VN;\r\n        delay(300);\r\n        yield put({ type: mainTypes.CHANGE_LANGUAGE_SUCCESS, payload: language })\r\n        I18n.locale = language\r\n        action.resolve(language)\r\n    }\r\n    catch (e) {\r\n        action.reject(e)\r\n    }\r\n}\r\n\r\nexport function* checkLanguage(action) {\r\n    try {\r\n        const language = yield getData(LANE)\r\n        const newLanguage = language !== null && language !== '' && JSON.parse(language) === 'en' ? JSON.parse(language) : 'vn'\r\n        yield put({ type: mainTypes.CHECK_LANGUAGE_SUCCESS, payload: newLanguage })\r\n        I18n.locale = newLanguage\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n\r\nexport function* EncryptString(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/EncryptString\", params)\r\n        console.log('call sagas api', respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data)\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n\r\n    }\r\n}\r\n\r\nexport function* DecryptString(action) {\r\n    try {\r\n        //show loading\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: true });\r\n\r\n        //params received\r\n        const params = action && action.params\r\n        /// catch api die\r\n        yield delay(300);\r\n        // call api\r\n        let respone = yield api.post(API_END_POINT_APP + \"/DecryptString\", params)\r\n        console.log('call sagas api', respone)\r\n        // check call api success\r\n        if (respone && respone.status == 200) {\r\n            action.resolve(respone.data)\r\n        }\r\n        else {\r\n            action.reject(respone)\r\n            yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        }\r\n    }\r\n    catch (e) {\r\n        yield put({ type: mainTypes.LOADING_SUCCESS, payload: false });\r\n        action.reject(e)\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default function* watchMainActionSagas() {\r\n    ///Watcher watch Sagas\r\n\r\n    yield takeEvery(mainTypes.LOADING, LOADING);\r\n    yield takeLatest(mainTypes.CHANGE_LANGUAGE, changeLanguage);\r\n    yield takeLatest(mainTypes.CHECK_LANGUAGE, checkLanguage);\r\n    yield takeEvery(mainTypes.EncryptString, EncryptString);\r\n    yield takeEvery(mainTypes.DecryptString, DecryptString);\r\n    yield takeEvery(mainTypes.API_spCallServer, API_spCallServer);\r\n    yield takeEvery(mainTypes.API_spCallServerNoSQL, API_spCallServerNoSQL);\r\n}","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Language\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Component\\Categorys\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Component\\Template\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Component\\System\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\Storage.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\MainTypes.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\ScrollTop.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\EncodeString.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\DecodeString.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\ExportExcel.js",["664"],"import React from 'react'\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport const ExportExcel = (Data,fileName) => {\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws = XLSX.utils.json_to_sheet(Data);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n}","D:\\ErpNew\\Webcustomer\\src\\Utils\\ValidEmail.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\ValidPhone.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\ValidNumber.js",["665","666","667"],"export const  ValidNumber = (number) => {\r\n    debugger\r\n    if(number!==\"\"){\r\n        let RegNumber = new RegExp(\"^(?=.*[a-z])|(?=.*[A-Z])|(?=.*[!@#\\$%\\^&\\*])\");\r\n        if (RegNumber.test(number))\r\n            return \"form-error\";\r\n        else\r\n            return \"\";\r\n    }\r\n    else\r\n        return '';\r\n}","D:\\ErpNew\\Webcustomer\\src\\Utils\\Notification.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\ValidPassword.js",["668","669","670"],"export const  ValidPassword = (password) => {\r\n    const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\n    const mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\r\n    if(strongRegex.test(password))\r\n        return \"\";\r\n    else if(mediumRegex.test(password))\r\n        return \"form-warning\";\r\n    else\r\n        return \"form-error\";\r\n}","D:\\ErpNew\\Webcustomer\\src\\Utils\\FormatMoney.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\PaginationTable2.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\FormatNumber.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\MainAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\PaginationTable.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\RemoveExtraSpace.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\GetLatLngGoogle.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\RemoveAccents.js",["671"],"export const RemoveAccents = (str) => {\r\n    if (str != undefined) {\r\n        var AccentsMap = [\r\n            \"aàảãáạăằẳẵắặâầẩẫấậ\",\r\n            \"AÀẢÃÁẠĂẰẲẴẮẶÂẦẨẪẤẬ\",\r\n            \"dđ\", \"DĐ\",\r\n            \"eèẻẽéẹêềểễếệ\",\r\n            \"EÈẺẼÉẸÊỀỂỄẾỆ\",\r\n            \"iìỉĩíị\",\r\n            \"IÌỈĨÍỊ\",\r\n            \"oòỏõóọôồổỗốộơờởỡớợ\",\r\n            \"OÒỎÕÓỌÔỒỔỖỐỘƠỜỞỠỚỢ\",\r\n            \"uùủũúụưừửữứự\",\r\n            \"UÙỦŨÚỤƯỪỬỮỨỰ\",\r\n            \"yỳỷỹýỵ\",\r\n            \"YỲỶỸÝỴ\"\r\n        ];\r\n        for (var i = 0; i < AccentsMap.length; i++) {\r\n            var re = new RegExp('[' + AccentsMap[i].substr(1) + ']', 'g');\r\n            var char = AccentsMap[i][0];\r\n            str = str.replace(re, char);\r\n        }\r\n        return str;\r\n    }\r\n    else\r\n        return '';\r\n}","D:\\ErpNew\\Webcustomer\\src\\Utils\\GetCookieGroup.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\GetCookie.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\FormatDate.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\FormatDateJson.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\GetModule.js",["672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706"],"let modules = [{ \"MenuId\": 1250, \"ActionName\": \"\\/\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1251, \"ActionName\": \"\\/register\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1252, \"ActionName\": \"\\/home\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1253, \"ActionName\": \"\\/lo-trinh-giao-hang\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1254, \"ActionName\": \"\\/forgot\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1255, \"ActionName\": \"\\/reset\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1256, \"ActionName\": \"\\/thong-tin-ca-nhan\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1257, \"ActionName\": \"\\/doi-mat-khau\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1258, \"ActionName\": \"\\/dia-chi-nhan-thuong-xuyen\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1259, \"ActionName\": \"\\/dia-chi-gui-thuong-xuyen\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1260, \"ActionName\": \"\\/xac-thuc-tai-khoan\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1261, \"ActionName\": \"\\/mang-luoi-buu-cuc\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1262, \"ActionName\": \"\\/cong-no-tam-tinh\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1263, \"ActionName\": \"\\/thoi-gian-toan-trinh-phat-hang-dich-vu\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1264, \"ActionName\": \"\\/ho-tro-don-hang\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1265, \"ActionName\": \"\\/bao-cao-nhap-kho\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1266, \"ActionName\": \"\\/bao-cao-xuat-kho\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1267, \"ActionName\": \"\\/bao-cao-chuyen-kho\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1268, \"ActionName\": \"\\/bao-cao-ton-kho\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1269, \"ActionName\": \"\\/bao-cao-ton-kho-ncc\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1270, \"ActionName\": \"\\/bao-cao-ton-kho-npt\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1271, \"ActionName\": \"\\/bao-cao-tong-quan\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1272, \"ActionName\": \"\\/bao-cao-dealine-thanh-toan\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1273, \"ActionName\": \"\\/bao-cao-kpi-giao-hang-cod\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1274, \"ActionName\": \"\\/bao-cao-ton-no\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1275, \"ActionName\": \"\\/bang-ke-thanh-toan\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1276, \"ActionName\": \"\\/bang-ke-thanh-toan-cod\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1277, \"ActionName\": \"\\/danh-sach-ho-tro-don-hang\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1278, \"ActionName\": \"\\/tao-nhanh-van-don\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1279, \"ActionName\": \"\\/tim-kiem-van-don\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1280, \"ActionName\": \"\\/tra-cuu-van-don\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1281, \"ActionName\": \"\\/upload-excel-van-don\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1282, \"ActionName\": \"\\/in-bill-tu-excel\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1283, \"ActionName\": \"\\/uoc-tinh-cuoc-phi\" },\r\n    { \"ModuleName\": \"WEBC\", \"MenuId\": 1284, \"ActionName\": \"\\/print-bill\" }\r\n    ];\r\nexport const GetModule = (url) => {\r\n    return modules.find(p=>p.ActionName===url);\r\n};","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\TestChart.js",["707"],"import { CanvasChart } from '../../Common';\r\n\r\nexport const TestChart = () => {\r\n  let data = [{\r\n    type: \"column\",\r\n    name: \"Proven Oil Reserves (bn)\",\r\n    legendText: \"Đang phát\",\r\n    showInLegend: true,\r\n    dataPoints: [\r\n      { label: \"Saudi\", y: 266.21 },\r\n      { label: \"Venezuela\", y: 302.25 },\r\n      { label: \"Iran\", y: 157.20 },\r\n      { label: \"Iraq\", y: 148.77 },\r\n      { label: \"Kuwait\", y: 101.50 },\r\n      { label: \"UAE\", y: 97.8 }\r\n    ]\r\n  },\r\n  {\r\n    type: \"column\",\r\n    name: \"Oil Production (million/day)\",\r\n    legendText: \"Phát thành công\",\r\n    axisYType: \"secondary\",\r\n    showInLegend: true,\r\n    dataPoints: [\r\n      { label: \"Saudi\", y: 10.46 },\r\n      { label: \"Venezuela\", y: 2.27 },\r\n      { label: \"Iran\", y: 3.99 },\r\n      { label: \"Iraq\", y: 4.45 },\r\n      { label: \"Kuwait\", y: 2.92 },\r\n      { label: \"UAE\", y: 3.1 }\r\n    ]\r\n  }]\r\n  {/* <div className=\"col-md-6\">\r\n    <ChartTemp type=\"bar\" data={dataChart} />\r\n  </div>\r\n  <div className=\"col-md-6\">\r\n    <ChartTemp type=\"line\" data={dataChart} />\r\n  </div>\r\n  <div className=\"col-md-6\">\r\n    <ChartTemp type=\"bubble\" data={dataChart} />\r\n  </div>\r\n  <div className=\"col-md-6\">\r\n    <ChartTemp type=\"area\" data={dataChart} />\r\n  </div>\r\n  <div className=\"col-md-6\">\r\n    <Barcode value=\"a123456789\" {...config} />\r\n  </div> */}\r\n\r\n  return (\r\n    <CanvasChart data={data} />\r\n  )\r\n}","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\PaymentCODCustomerComponent.js",["708","709","710","711","712","713","714","715","716","717","718"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Alerterror,\r\n  Alertwarning,\r\n  FormatMoney,\r\n  FormatNumber,\r\n  GetCookie,\r\n  FormatDateJson,\r\n  GetCookieGroup\r\n} from \"../../Utils\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\n\r\nexport const PaymentCODCustomerComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const history = useHistory();\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ShowList, setShowList] = useState(\"display-none\");\r\n\r\n  const [DataDetail, setdataDetail] = useState([]);\r\n  const [DataExcelDetail, setDataExcelDetail] = useState([]);\r\n  const [ShowDetail, setShowDetail] = useState(\"display-none\");\r\n  const [CodeBK, setCodeBK] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n  }, []);\r\n\r\n  const [NoData, setNoData] = useState(\"display-none\");\r\n\r\n\r\n  const changeFromDate = (item) => {\r\n    if (item !== null) {\r\n      setFromDate(item);\r\n      if (Math.abs(ToDate - item) / (1000 * 60 * 60 * 24) > 30)\r\n        setFromDate(\r\n          new Date(item.getFullYear(), item.getMonth() + 1, item.getDate())\r\n        );\r\n    }\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    if (item !== null) {\r\n      let a = ToDate - item;\r\n      if (Math.abs(ToDate - item) / (1000 * 60 * 60 * 24) > 30)\r\n        setToDate(\r\n          new Date(item.getFullYear(), item.getMonth() - 1, item.getDate())\r\n        );\r\n      setToDate(item);\r\n    }\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    setDisable(false);\r\n    if (FromDate === \"\") {\r\n      Alerterror(\"Chọn từ ngày\");\r\n      return false;\r\n    } else if (ToDate === \"\") {\r\n      Alerterror(\"Chọn đến ngày\");\r\n      return false;\r\n    }\r\n    let params = {\r\n      IdCustomer: CustomerID,//,10266\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      Fromdate: FromDate.toISOString(),\r\n      Todate: ToDate.toISOString(),\r\n      Status: -1\r\n    };\r\n    let pr = {\r\n      Json: JSON.stringify(params),\r\n      func: \"CPN_spPayment_COD_Customer_Report\",\r\n      API_key: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n    };\r\n    const data = await mainAction.API_spCallServer(pr, dispatch);\r\n    setReportData(data);\r\n    if (data.length === 0) setNoData(\"\");\r\n    else setNoData(\"display-none\");\r\n    setDisable(true);\r\n    //PaginationTable();\r\n    setShowList(\"\");\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const Excell = () => {\r\n    const newData = ReportData.map(element => {\r\n      return {\r\n        'Trạng thái': element.Status,\r\n        'KH xác nhận': FormatDateJson(element.ConfirmTime, 'd/k/y'),\r\n        'KT xác nhận': FormatDateJson(element.AcceptTime, 'd/k/y'),\r\n        'Mã BK': element.Code,\r\n        'Mã KH': element.CustomerCode,\r\n        'Tên KH': element.CustomerName,\r\n        'Tổng bill': element.Totalbill,\r\n        'Tổng COD (vnđ)': element.Totalmoney,\r\n        'Lý do cấn trừ': element.NoteClearing,\r\n        'Tổng D.thu (vnđ)': element.TotalAmount,\r\n        'Tổng đối soát (vnđ)': element.TotalCODReality,\r\n        'Lý do trả': element.NoteReturn,\r\n        'Người tạo': element.CreateName,\r\n        'Ngày tạo': FormatDateJson(element.CreateDate, 'd/k/y'),\r\n        'Người sửa': element.OfficerName,\r\n        'Ngày sửa': FormatDateJson(element.EditTime, 'd/k/y')\r\n      }\r\n    })\r\n    ExportExcel(newData, \"Bảng kê thanh toán COD\");\r\n  };\r\n  const DownloadExxcel = async (Id) => {\r\n    debugger\r\n    const paramsmail1 = {\r\n      Json: JSON.stringify({\r\n        Id: Id,\r\n        Key: \"Cập nhật\",\r\n        UserId: 0,\r\n        KeyCheck: 1\r\n      }),\r\n      func: \"CPN_spPayment_COD_Customer_SendMail\"\r\n    }\r\n\r\n    try {\r\n      const resultex = await mainAction.API_spCallServerNoSQL(paramsmail1, dispatch);\r\n      if (resultex.resultCode === 0) {\r\n        window.location.href = \"https://api-v4-erp.vps.vn\" + resultex.Message\r\n      }\r\n      else {\r\n        Alerterror(resultex.Message);\r\n      }\r\n    }\r\n\r\n    catch (e) {\r\n      Alerterror(\"Lỗi dữ liệu!\");\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (row) => <span>{row.index + 1}</span>,\r\n      width: 50,\r\n    },\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      accessor: 'Id',\r\n      filterable: false,\r\n      sortable: false,\r\n      fixed: \"left\",\r\n      width: 90,\r\n      Cell: (row) => (\r\n        <>\r\n          <i class=\"fa fa-eye green  button cursor\" onClick={e => CPN_spPayment_COD_CustomerDetail_Report(row.value)} title=\"Chi tiết\"></i>\r\n          <i class=\"fa fa-download orange button cursor\" onClick={e => DownloadExxcel(row.value)}></i>\r\n        </>\r\n      ),\r\n      // maxWidth: 50,\r\n      textAlign: \"center\"\r\n    },\r\n    {\r\n      Header: 'File',\r\n      width: 200,\r\n      accessor: \"LinkDocuments\",\r\n      Cell: (row) => (\r\n        <div>\r\n          {row.original.LinkDocuments !== undefined && row.original.LinkDocuments !== \"\" && row.original.LinkDocuments !== null\r\n            ? (row.original.LinkDocuments.split(\";\")).map((img, index) => {\r\n              return (\r\n                <a class=\"pr-2\" style={{ marginLeft: '10px' }} target=\"_blank\" href={row.original.Links + img}>{(img.split(\"/\"))[5]}</a>\r\n              );\r\n            })\r\n            : null}{\" \"}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Trạng thái\",\r\n      accessor: 'Status',\r\n      width: 130,\r\n      Cell: (row) => (\r\n        <label className=\"btn btn-xs labelradius10px\" style={{ backgroundColor: row.original.Color, borderColor: row.original.Color, boxShadow: \"none\", color: \"#fff\" }}>{row.value}</label>\r\n      )\r\n    },\r\n    {\r\n      Header: \"KH xác nhận/trả\",\r\n      width: 180,\r\n      accessor: \"ConfirmTime\",\r\n      Cell: (obj) => obj.value === undefined ? <label className=\"btn labelradius10px btn-danger btn-xs\">{FormatDateJson(obj.value)}</label> :\r\n        <label className=\"btn labelradius10px btn-success btn-xs\">{FormatDateJson(obj.value)}</label>\r\n    },\r\n    {\r\n      Header: \"KT x.nhận chi\",\r\n      width: 180,\r\n      accessor: \"AcceptTime\",\r\n      Cell: (obj) => obj.value === undefined ? <label className=\"btn labelradius10px btn-danger btn-xs\">{FormatDateJson(obj.value)}</label> :\r\n        <label className=\"btn labelradius10px btn-success btn-xs\">{FormatDateJson(obj.value)}</label>\r\n    },\r\n    {\r\n      Header: \"Mã BK\",\r\n      width: 200,\r\n      accessor: \"Code\"\r\n    }, {\r\n      Header: \"Mã KH\",\r\n      width: 200,\r\n      accessor: \"CustomerCode\"\r\n    },\r\n    {\r\n      Header: \"Tên KH\",\r\n      width: 200,\r\n      accessor: \"CustomerName\"\r\n    },\r\n    {\r\n      Header: \"Tổng bill\",\r\n      width: 200,\r\n      accessor: \"Totalbill\"\r\n    },\r\n    {\r\n      Header: \"Tổng COD (vnđ)\",\r\n      width: 200,\r\n      accessor: \"Totalmoney\",\r\n      Cell: (obj) => FormatMoney(obj.value),\r\n      Footer: (\r\n        <span className=\"red\"> \"Tổng tiền\" : {\r\n          FormatMoney(ReportData.reduce((a, v) => a = a + v.Totalmoney, 0))\r\n        }</span>\r\n      )\r\n    },\r\n    {\r\n      Header: \"Lý do cấn trừ\",\r\n      width: 200,\r\n      accessor: \"NoteClearing\"\r\n    },\r\n    {\r\n      Header: \"Tiền cấn trừ (vnđ)\",\r\n      width: 200,\r\n      accessor: \"MoneyClearing\",\r\n      Cell: (obj) => FormatMoney(obj.value),\r\n      Footer: (\r\n        <span className=\"red\"> Tổng tiền: {\r\n          FormatMoney(ReportData.reduce((a, v) => a = a + v.MoneyClearing, 0))\r\n        }</span>\r\n      )\r\n    },\r\n    {\r\n      Header: \"Đã cấn trừ (vnđ)\",\r\n      width: 200,\r\n      accessor: \"CODCurrently\",\r\n      Cell: (obj) => FormatMoney(obj.value),\r\n      Footer: (\r\n        <span className=\"red\"> Tổng tiền : {\r\n          FormatMoney(ReportData.reduce((a, v) => a = a + v.CODCurrently, 0))\r\n        }</span>\r\n      )\r\n    },\r\n    {\r\n      Header: \"Tổng doanh thu (vnđ)\",\r\n      width: 200,\r\n      accessor: \"TotalAmount\",\r\n      Cell: (obj) => FormatMoney(obj.value),\r\n      Footer: (\r\n        <span className=\"red\"> Tổng tiền : {\r\n          FormatMoney(ReportData.reduce((a, v) => a = a + v.TotalAmount, 0))\r\n        }</span>\r\n      )\r\n    },\r\n    {\r\n      Header: \"Tổng đối soát (vnđ)\",\r\n      width: 200,\r\n      accessor: \"TotalCODReality\",\r\n      Cell: (obj) => FormatMoney(obj.value),\r\n      Footer: (\r\n        <span className=\"red\"> Tổng tiền : {\r\n          FormatMoney(ReportData.reduce((a, v) => a = a + v.TotalCODReality, 0))\r\n        }</span>\r\n      )\r\n    },\r\n    {\r\n      Header: \"Lý do trả\",\r\n      width: 200,\r\n      accessor: \"NoteReturn\"\r\n    },\r\n    {\r\n      Header: \"Người tạo\",\r\n      width: 200,\r\n      accessor: \"CreateName\"\r\n    },\r\n    {\r\n      Header: \"Ngày tạo\",\r\n      width: 200,\r\n      accessor: \"CreateDate\",\r\n      Cell: (obj) => FormatDateJson(obj.value)\r\n    }, {\r\n      Header: \"Người sửa\",\r\n      width: 200,\r\n      accessor: \"OfficerName\"\r\n    },\r\n    {\r\n      Header: \"Ngày sửa\",\r\n      width: 200,\r\n      accessor: \"EditTime\",\r\n      Cell: (obj) => FormatDateJson(obj.value)\r\n    }\r\n  ];\r\n\r\n  const columnsDetail = [\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (row) => <span>{row.index + 1}</span>,\r\n      width: 50,\r\n    },\r\n    {\r\n      Header: \"Trạng thái\",\r\n      accessor: 'Status',\r\n      Cell: (row) => (\r\n        <label className=\"btn labelradius10px btn-danger btn-xs\">{row.value}</label>\r\n      )\r\n    },\r\n    {\r\n      Header: \"Trạng thái Deadline\",\r\n      accessor: 'IsDeadline',\r\n      Cell: (row) => (\r\n        <label className=\"btn labelradius10px btn-xs\" style={{ backgroundColor: row.original.Color, borderColor: row.original.Color, boxShadow: \"none\", color: \"#fff\" }}>{row.value}</label>\r\n      )\r\n    },\r\n    {\r\n      Header: \"Hình thức trả COD\",\r\n      accessor: \"TypeCODName\",\r\n    },\r\n    {\r\n      Header: \"Deadline\",\r\n      accessor: \"Deadline\",\r\n      width: 140,\r\n      Cell: (obj) => <label className=\"btn labelradius10px btn-success btn-xs\">{FormatDateJson(obj.value)}</label>\r\n    },\r\n    {\r\n      Header: \"Ngày tạo\",\r\n      accessor: \"CreateDate\",\r\n      width: 140,\r\n      Cell: (obj) => <label className=\"btn labelradius10px btn-success btn-xs\">{FormatDateJson(obj.value)}</label>\r\n    },\r\n    {\r\n      Header: \"Ngày xác nhận\",\r\n      accessor: \"ConfirmTime\",\r\n      width: 140,\r\n      Cell: (obj) => <label className=\"btn labelradius10px btn-success btn-xs\">{FormatDateJson(obj.value)}</label>\r\n    },\r\n    {\r\n      Header: \"Mã bill\",\r\n      accessor: \"LadingCode\"\r\n    },\r\n    {\r\n      Header: \"Mã phiếu thu\",\r\n      accessor: 'PaySlipCode',\r\n\r\n      Cell: (obj) => obj.value === undefined ? <label className=\"btn labelradius10px btn-danger btn-xs\">{obj.value}</label> :\r\n        <label className=\"btn labelradius10px btn-success btn-xs\">{obj.value}</label>\r\n    },\r\n    {\r\n      Header: \"Tiền COD (vnđ)\",\r\n      accessor: \"CODMoney\",\r\n      Cell: (obj) => FormatMoney(obj.value),\r\n      Footer: (\r\n        <span className=\"red\"> Tổng tiền : {\r\n          FormatMoney(DataDetail.reduce((a, v) => a = a + v.CODMoney, 0))\r\n        }</span>\r\n      )\r\n    },\r\n    {\r\n      Header: \"Tiền đối soát (vnđ)\",\r\n      accessor: \"CODReality\",\r\n      Cell: (obj) => FormatMoney(obj.value),\r\n      Footer: (\r\n        <span className=\"red\"> Tổng tiền : {\r\n          FormatMoney(DataDetail.reduce((a, v) => a = a + v.CODReality, 0))\r\n        }</span>\r\n      )\r\n    },\r\n    {\r\n      Header: \"Doanh thu (vnđ)\",\r\n      accessor: \"Amount\",\r\n      Cell: (obj) => FormatMoney(obj.value),\r\n      Footer: (\r\n        <span className=\"red\"> Tổng tiền : {\r\n          FormatMoney(DataDetail.reduce((a, v) => a = a + v.Amount, 0))\r\n        }</span>\r\n      )\r\n    },\r\n    {\r\n      Header: \"Mã KH\",\r\n      accessor: \"CustomerCode\"\r\n    },\r\n    {\r\n      Header: \"Tên KH\",\r\n      accessor: \"CustomerName\"\r\n    }\r\n\r\n  ];\r\n\r\n  const CPN_spPayment_COD_CustomerDetail_Report = async (id) => {\r\n    try {\r\n      setDisable(true)\r\n      const params = {\r\n        Json: JSON.stringify({\r\n          Id: id,\r\n          UserId: 128\r\n        }),\r\n        func: \"CPN_spPayment_COD_CustomerDetail_Report\"\r\n      }\r\n      const result = await mainAction.API_spCallServer(params, dispatch);\r\n      if (result.length > 0) {\r\n        setdataDetail(result)\r\n        setDisable(false)\r\n        const newData = result.map(element => {\r\n          return {\r\n            'Trạng thái': element.Status,\r\n            'Ngày xác nhận': FormatDateJson(element.ConfirmTime, 'd/k/y'),\r\n            'Mã BK': element.Code,\r\n            'Mã bill': element.LadingCode,\r\n            'Mã phiếu thu': element.PaySlipCode,\r\n            'Mã KH': element.CustomerCode,\r\n            'Tên KH': element.CustomerName,\r\n            'Tiền COD (vnđ)': element.CODMoney,\r\n            'D.thu (vnđ)': element.Amount,\r\n            'Đối soát (vnđ)': element.CODReality\r\n          }\r\n        })\r\n        setDataExcelDetail(newData);\r\n        setCodeBK(result[0].Code);\r\n        setShowDetail(\"\");\r\n        setShowList(\"display-none\");\r\n      } else {\r\n        setShowDetail(\"display-none\");\r\n        Alertwarning(\"Không có dữ liệu !\");\r\n        setDisable(false);\r\n        setDataExcelDetail([]);\r\n        setdataDetail([]);\r\n      }\r\n    } catch (error) {\r\n      Alerterror(\"Lỗi, vui lòng liên hệ IT !\");\r\n      setdataDetail([]);\r\n      setDataExcelDetail([]);\r\n      setDisable(false);\r\n      setShowDetail(\"display-none\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12 HomeTitle\">Bảng kê thanh toán COD</div>\r\n          <form className=\"form-horizontal col-md-12\">\r\n            <div className=\"row\">\r\n              <div className='col-md-3'></div>\r\n              <div className=\"col-md-3\">\r\n                <label>Từ ngày</label>\r\n                <div className=\"form-group mt0\">\r\n                  <DateTimePicker\r\n                    onChange={changeFromDate}\r\n                    value={FromDate}\r\n                    className=\"form-control borradius3\"\r\n                    format=\"dd-MM-yyyy\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <label>Đến ngày</label>\r\n                <div className=\"form-group mt0\">\r\n                  <DateTimePicker\r\n                    onChange={changeToDate}\r\n                    value={ToDate}\r\n                    className=\"form-control borradius3\"\r\n                    format=\"dd-MM-yyyy\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='col-md-3'></div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"col-md-12 text-center margin-top-10\">\r\n          <button\r\n            disabled={!disable}\r\n            onClick={ViewReport}\r\n            type=\"button\"\r\n            className=\"btn btn-sm text-transform btn-save\"\r\n          >\r\n            <i className=\"material-icons\">search</i> Xem báo cáo\r\n          </button>\r\n          <button\r\n            disabled={!disable}\r\n            onClick={() => {\r\n              Excell();\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-sm text-transform btn-refeshno margin-left-10\"\r\n          >\r\n            <img src=\"../assets/img/iconexcel.png\" className='iconex' /> Xuất Excel\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={ShowList + \" col-row cardcus margin-top-20\"}>\r\n        <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n            <h3>Danh sách bảng kê thanh toán COD</h3>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n          <DataTable data={ReportData} columns={columns} />\r\n          </div>\r\n            \r\n        </div>\r\n        \r\n      </div>\r\n      <div className={ShowDetail + \" col-row cardcus margin-top-20\"}>\r\n        <div class=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h3>Chi tiết bảng kê thanh toán COD</h3>\r\n          </div>\r\n          <div className=\"col-md-6 text-right\">\r\n            <button disabled={!disable} type=\"button\" className=\"btn btn-sm btn-excel pull-right margin-left-5\"\r\n              onClick={e => ExportExcel(DataExcelDetail, \"Danh sách chi tiết COD khách hàng\")}\r\n            >\r\n              <i class=\"fa fa-download\"></i> Xuất excel\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-sm btn-success pull-right margin-left-5\" onClick={() => {\r\n              setShowDetail(\"display-none\")\r\n              setShowList(\"\")\r\n            }}>\r\n              <i class=\"fa fa-undo\"></i>\r\n              Trở về\r\n            </button>\r\n          </div>\r\n          <div className=\"clearfix\"></div>\r\n          <div className=\"col-md-12\">\r\n            <DataTable data={DataDetail} columns={columnsDetail} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\LadingOutPrint.js",["719","720","721","722","723","724","725","726","727","728","729","730","731"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport {\r\n    FormatMoney,\r\n    FormatNumber,\r\n    FormatDateJson,\r\n    GetCookie,\r\n} from \"../../Utils\";\r\nimport Barcode from \"react-barcode\";\r\n\r\nexport const LadingOutPrint = (SearchCode) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n    const [LadingCode, setLadingCode] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const pr = new URLSearchParams(location.search);\r\n        if (pr.get(\"code\") !== null) {\r\n            APIC_spLadingGetDataPrint(pr.get(\"code\"));\r\n        }\r\n    }, []);\r\n\r\n    const [pageprint, setpageprint] = useState([0, 1]);\r\n    const [HtmlPrint, setHtmlPrint] = useState(null);\r\n    const [item, setItemPrint] = useState({});\r\n\r\n\r\n    const GetPrintMask = (form, PayType, COD) => {\r\n        if (form === \"A5\") {\r\n            if (PayType === 1 && COD > 0)\r\n                return (\r\n                    <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.4, marginTop: \"35vh\", marginLeft: \"20vw\", fontSize: \"120px\", fontWeight: 600, transform: \"rotate(70deg)\", fontFamily: \"Arial\" }}>COD-TTĐN</div>\r\n                )\r\n            else if (PayType !== 1 && COD > 0)\r\n                return (\r\n                    <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.4, marginTop: \"35vh\", marginLeft: \"30vw\", fontSize: \"120px\", fontWeight: 600, transform: \"rotate(60deg)\", fontFamily: \"Arial\" }}>COD</div>\r\n                )\r\n            else if (PayType === 1 && COD === 0)\r\n                return (\r\n                    <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.4, marginTop: \"35vh\", marginLeft: \"30vw\", fontSize: \"120px\", fontWeight: 600, transform: \"rotate(60deg)\", fontFamily: \"Arial\" }}>TTĐN</div>\r\n                )\r\n            else return (<></>)\r\n        }\r\n        else if (form === \"A6\") {\r\n            if (PayType === 1 && COD > 0)\r\n                return (\r\n                    <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.25, marginTop: \"32vh\", fontSize: \"80px\", fontWeight: 600, transform: \"rotate(-40deg)\", fontFamily: \"Arial\" }}>COD-TTĐN</div>\r\n                )\r\n            else if (PayType !== 1 && COD > 0)\r\n                return (\r\n                    <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.25, marginTop: \"26vh\", marginLeft: \"15vw\", fontSize: \"103px\", fontWeight: 600, transform: \"rotate(-38deg)\", fontFamily: \"Arial\" }}>COD</div>\r\n                )\r\n            else if (PayType === 1 && COD === 0)\r\n                return (\r\n                    <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.25, marginTop: \"28vh\", marginLeft: \"10vw\", fontSize: \"100px\", fontWeight: 600, transform: \"rotate(-40deg)\", fontFamily: \"Arial\" }}>TTĐN</div>\r\n                )\r\n            else return (<></>)\r\n        }\r\n    }\r\n\r\n    const APIC_spLadingGetDataPrint = async (code) => {\r\n        try {\r\n            //Lấy thông tin vận đơn\r\n            let pr = {\r\n                Json: \"{\\\"Code\\\":\\\"\" + code + \"\\\"}\",\r\n                func: \"APIC_spLading_Find\",\r\n                API_key: APIKey,\r\n                TokenDevices: TOKEN_DEVICE,\r\n            };\r\n            const data = await mainAction.API_spCallServer(pr, dispatch);\r\n            setItemPrint(data.Detail[0]);\r\n            //#region Khởi tạo form in\r\n            /* let html = $(\"#barcodeTarget\").html();\r\n            html += `<script type=\"text/javascript\">window.focus();setTimeout(function(){window.print();window.close();},1000);</script>`;\r\n            var myWindow = window.open(\"\", \"_blank\");\r\n            myWindow.document.write(\r\n                '<html><head></head><body style=\"margin:0\">' + html + \"</body></html>\"\r\n            ); */\r\n            //#endregion Khởi tạo form in\r\n        } catch (err) {\r\n            console.log(\"Eror\", err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div id=\"printarea\" style={{\r\n                display: \"block\", backgroundColor: \"#fff\", fontSize: \"14px\",\r\n                lineHeight: \"15px\",\r\n                fontFamily: \"TimeNewRoman\",\r\n                color: \"#000\",\r\n                pageBreakBefore: \"emptystring\",\r\n                fontWeight: 400\r\n            }}>\r\n                <div className=\"bill\" style={{ width: \"710px\", height: \"1045px\", border: \"2px solid #000\" }} >\r\n                    {GetPrintMask(\"A5\", item.PaymentType, item.COD)}\r\n                    <table style={{ width: \"100%\", fontWeight: \"600\", borderBottom: \"2px solid #ddd\", textAlign: \"center\" }}>\r\n                        <tr>\r\n                            <td style={{ width: \"180px\", verticalAlign: \"top\" }}>\r\n                                <img src=\"https://customer.netco.com.vn/assets/img/logonetco.jpg\" style={{ width: \"180px\", height: \"70px\" }} />\r\n                            </td>\r\n                            <td>\r\n                                <div style={{ width: \"100%\", position: \"relative\", display: \"inline-block\", height: \"40px\", marginBottom: \"5px\" }}>\r\n                                    <div><Barcode value={item.Code} height=\"35\" /></div>\r\n                                </div>\r\n                                <br />\r\n                                <p>BIÊN BẢN BÀN GIAO<br />(DELIVERY RECEIPTS)</p>\r\n                            </td>\r\n                            <td style={{ width: \"160px\", verticalAlign: \"top\", marginRight: \"1px\" }} >\r\n                                <img src=\"https://customer.netco.com.vn/assets/img/iso9001.jpg\" style={{ width: \"160px\", height: \"70px\" }} />\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\" }} cellspacing=\"0\" cellpadding=\"5\" >\r\n                        <tr>\r\n                            <td rowspan=\"2\" style={{ borderRight: \"1px solid #ddd\", width: \"20px\" }}>\r\n                                <div style={{ marginLeft: \"--20px\", writingMode: \"tb-rl\" }}><b>INFORMATION</b></div>\r\n                            </td>\r\n                            <td style={{ borderBottom: \"2px solid #ddd\", width: \"340px\", borderRight: \"1px solid #ddd\", }} >\r\n                                <b style={{ display: \"inline-block\", width: \"240px\" }}>Ngày gửi hàng <i>(Date)</i></b>: {FormatDateJson(item.CreateDate, 1)}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"240px\" }}>Số kiện <i>(Package)</i></b>: {FormatMoney(item.Number)}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"240px\" }}>Nội dung hàng hóa <i>(Document,Goods)</i></b>: {item.Description !== undefined ? item.Description : \"\"}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"240px\" }}>Dịch vụ bưu chính <i>((Postal services)</i></b>: <span>{item.ServiceName}</span>\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"240px\" }}>Dịch vụ cộng thêm <i>(Extra services)</i></b>: \r\n                                {item.ServiceGTGTName !== undefined ? item.ServiceGTGTName : \"\"}\r\n                                <br />\r\n                            </td>\r\n                            <td colspan=\"\" style={{ borderBottom: \"2px solid #ddd\" }}>\r\n                                <lbl style={{ display: \"inline-block\", width: \"210px\" }}>{(item.Mass === 0 || item.Mass === undefined) ? \"Trọng lượng \" : \"Khối lượng \"} <i>{(item.Mass === 0 || item.Mass === undefined) ? \"(Weight): \" : \"(Mass): \"}</i></lbl>:\r\n                                <b>{(item.Mass === 0 || item.Mass === undefined) ? FormatNumber(item.Weight) : item.Mass} {(item.Mass === 0 || item.Mass === undefined) ? \" (gram)\" : \" (CBM)\"}</b>\r\n                                <br />\r\n                                <lbl style={{ display: \"inline-block\", width: \"210px\" }}>HT thanh toán <i>(Payment)</i></lbl>: <b>{item.PaymentString !== undefined ? item.PaymentString : \"Khác\"}</b>\r\n                                <br />\r\n                                <lbl style={{ display: \"inline-block\", width: \"210px\" }} >COD</lbl>: <b>{FormatMoney(item.COD)} đ</b>\r\n                                <br />\r\n                                <lbl style={{ display: \"inline-block\", width: \"210px\" }}>Số tiền phải thu <i>(Total receivables)</i></lbl>:\r\n                                <b>{FormatMoney(item.PaymentType == 1 ? (item.COD + item.Amount) : item.COD)} đ</b>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"4\" style={{ position: \"relative\" }}>\r\n                                <b>THÔNG TIN HÀNG HÓA <i>(PARCEL INFORMATION)</i></b> : <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Mã sản phẩm 1<i>(Product Code 1)</i></b>: {item.ProductCode ?? \"\"}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Tên sản phẩm 1 <i>((Product Name 1)</i></b>: {item.ProductName ?? \"\"}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Seri sản phẩm 1<i>(Product Seri 1)</i></b>: <span>{item.ProductDes ?? \"\"}</span>\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Tổng SP <i>(Total product)</i></b>: {item.TotalProduct ?? \"\"}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Danh sách SP <i>(List of product)</i></b>: {item.ListProductCode ?? \"\"}\r\n                                <br />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"4\">\r\n                                <u><b>* LƯU Ý GIAO (DELIVERY NOTE): </b></u><span>{item.Noted !== undefined ? item.Noted : \"\"}</span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\", }} cellspacing=\"0\" cellpadding=\"5\" >\r\n                        <tr>\r\n                            <td style={{ borderRight: \"1px solid #ddd\", width: \"20px\" }}>\r\n                                <div style={{ marginLeft: \"--20px\", writingMode: \"tb-rl\", }} ><b>DO</b></div>\r\n                            </td>\r\n                            <td style={{ textAlign: \"center\" }}>\r\n                                <div><Barcode value={item.PartnerCode} height=\"35\" /></div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\", }} cellspacing=\"0\" cellpadding=\"5\" >\r\n                        <tr>\r\n                            <td style={{ borderRight: \"1px solid #ddd\", width: \"20px\" }}>\r\n                                <div style={{ marginLeft: \"--20px\", writingMode: \"tb-rl\", }}><b>SENDER</b> </div>\r\n                            </td>\r\n                            <td style={{ position: \"relative\" }}>\r\n                                <b>THÔNG TIN NGƯỜI GỬI (SENDER INFORMATION)</b>: <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Mã khách hàng <i>(Customer code)</i></b>: {item.CustomerCode}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Người gửi <i>(Sender's name)</i></b>: {item.CustomerNamePrint}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Điện thoại <i>(Phone)</i></b>: <span>{item.CustomerPhonePrint}\r\n                                </span>\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Địa chỉ <i>(Address)</i></b>: {item.CustomerAddressPrint}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Tỉnh/TP <i>(Province/City)</i></b>: {item.CitySendCode}\r\n                                <br />\r\n                                <span style={{ padding: \"2px 10px\", lineHeight: \"30px\", fontWeight: \"bold\", fontSize: \"45px\", borderTop: \"2px solid #000\", borderBottom: \"2px solid #000\", borderLeft: \"2px solid #000\", top: \"-2px\", right: 0, position: \"absolute\", }}>{item.POCodeFrom}</span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\", }} cellspacing=\"0\" cellpadding=\"5\">\r\n                        <tr>\r\n                            <td style={{ borderRight: \"1px solid #ddd\", width: \"20px\" }}>\r\n                                <div style={{ marginLeft: \"--20px\", writingMode: \"tb-rl\", }}><b>RECEIVER</b></div>\r\n                            </td>\r\n                            <td style={{ position: \"relative\" }}>\r\n                                <b>THÔNG TIN NGƯỜI NHẬN (RECEIVER'S INFORMATION)</b>:\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Người nhận <i>(Recipient’s name)</i></b>: {item.RecipientName}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Điện thoại <i>(Phone)</i></b>: {item.RecipientPhonePrint}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Công ty nhận <i>(Recipient’s company)</i></b>: <span>{item.RecipientCompany !== undefined ? item.RecipientCompany : \"\"}</span>\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Số nhà, đường <i>(No., Street)</i></b>: {item.Street !== undefined ? item.Street : item.RecipientAddress}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Phường/Xã <i>(Ward/Commune)</i></b>: {item.Wards}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"250px\" }}>- Quận/Huyện <i>(District)</i></b>: {item.District}\r\n                                <br />\r\n                                <b style={{ display: \"inline-block\", width: \"255px\" }}>- Tỉnh/TP <i>(Province/City)</i></b>: {item.CityRecipientCode}\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\", textAlign: \"center\", fontWeight: \"bold\", fontSize: \"45px\", }} cellspacing=\"0\" cellpadding=\"5\">\r\n                        <tr><td style={{ lineHeight: \"30px\" }}>{item.LocationTo}</td></tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\" }} cellspacing=\"0\" cellpadding=\"5\" >\r\n                        <tr>\r\n                            <td colspan=\"2\">\r\n                                Bên nhận hàng xác nhận Bên giao hàng đã giao cho Bên nhận hàng đúng, đủ nội dung như trên/\r\n                                <br />\r\n                                The consigneee confirms that the Delivery company has delivered to the consignee the correct and sufficient content as above.\r\n                                <br />\r\n                                Bên bản được lập thành 02 bản, mỗi bên giữ 01 bản có giá trị như nhau/\r\n                                <br />\r\n                                The Delivery record are made into 02 copies, each party keeps 01 copy with the same value.\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style={{ textAlign: \"center\", width: \"50%\" }}>\r\n                                <br />\r\n                                <b>BÊN GIAO HÀNG</b> <br />\r\n                                <i>(Delivery Company)</i>\r\n                            </td>\r\n                            <td style={{ textAlign: \"center\", width: \"50%\" }}>\r\n                                Ngày (Date) ..... / ..... / 20.....\r\n                                <br />\r\n                                <b>BÊN NHẬN HÀNG</b>\r\n                                <br />\r\n                                <i>(Consignee)</i>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\VerificationComponent.js",["732","733","734","735"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Alertsuccess, Alerterror, GetCookie, EncodeString, GetCookieGroup } from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nexport const VerificationComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [Phone, setPhone] = useState(GetCookie(\"Phone\"));\r\n  const [SMSOTP, bindSMSOTP, setSMSOTP] = useInput(\"\");\r\n  const SMSOTPRef = useRef();\r\n\r\n  const [disable, setDisable] = useState(false); // disable button\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    if (GetCookieGroup(\"IsChooseCustomer\") === \"Fail\")\r\n      window.location.href = \"/home\";\r\n  }, []);\r\n\r\n  const APIC_SendSMSOTP = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      CustomerId: CustomerID,\r\n    };\r\n    const data = await mainAction.API_spCallServerNoSQL(params, dispatch);\r\n    if (data.message === \"Success\") Alertsuccess(data.localMessage);\r\n    else Alerterror(data.localMessage);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const APIC_spCustomerVerification = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      CustomerId: CustomerID,\r\n      SMSOTP: SMSOTP,\r\n    };\r\n    if (SMSOTP === \"\") {\r\n      Alerterror(\"Nhập mã xác thực !\");\r\n      return;\r\n    } else {\r\n      const pr = {\r\n        json: JSON.stringify(params),\r\n        func: \"APIC_spCustomerVerification_V1\",\r\n      };\r\n      debugger\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      debugger\r\n      if (data.resultCode === 0) {\r\n        Alertsuccess(\"Xác thực thành công\");\r\n        let _customer = GetCookie(\"All\");\r\n        _customer.Vertification = 1;\r\n\r\n        let ensc = EncodeString(JSON.stringify(_customer));\r\n        localStorage.setItem(\"login\", ensc);\r\n\r\n        history.push(\"/tao-nhanh-van-don\");\r\n      } else {\r\n        Alerterror(data.localMessage);\r\n      }\r\n    }\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row Forminfor\">\r\n          <div className=\"col-md-12 HomeTitle margin-top-20\">Xác thực tài khoản</div>\r\n          <div className=\"col-md-12 mt10\">\r\n            <form method=\"#\" action=\"#\">\r\n              <div className=\"row margin-top-10\">\r\n                <label className=\"col-sm-12 font-weight500\">Số điện thoại <span className=\"red\">(*)</span></label>\r\n                <div className=\"col-sm-12\">\r\n                  <div class=\"input-group\">\r\n                    <input type=\"phone\" className=\"form-control\" value={Phone} disable=\"true\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n                    <div class=\"input-group-append\">\r\n                      <button id=\"inputGroup-sizing-sm\" type=\"button\" className=\"btn btn-warning btn-sm input-group-button\" disabled={disable} onClick={APIC_SendSMSOTP} style={{ height: \"35px\", marginTop: \"0\" }}>\r\n                        Gửi mã xác thực\r\n                        <div className=\"ripple-container\"></div>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row margin-top-10\">\r\n                <label className=\"col-sm-12 font-weight500\" style={{ marginTop: \"-10px\" }}>Nhập mã xác thực <span className=\"red\">(*)</span></label>\r\n                <div className=\"col-sm-12\">\r\n                  <input className=\"form-control\" type=\"password\" ref={SMSOTPRef} value={SMSOTP} {...bindSMSOTP} />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group text-center\">\r\n                <button type=\"button\" className=\"btn btn-danger btn-sm\" disabled={disable} onClick={APIC_spCustomerVerification}>\r\n                  Xác nhận<div className=\"ripple-container\"></div>\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\RegisterComponent.js",["736","737","738","739","740","741","742"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  ValidPhone,\r\n  ValidEmail,\r\n  ValidPassword,\r\n} from \"../../Utils\";\r\nimport { SelectCity, SelectDistrict, SelectWard } from \"../../Common\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { Img } from \"react-image\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { APIKey, TOKEN_DEVICE, GOOGLE_LOGIN_CLIENTID, FACEBOOK_LOGIN_APPID } from \"../../Services/Api\";\r\n\r\nexport const RegisterComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n\r\n  const [CityMeno, setCityMeno] = useState(0);\r\n  const [DistrictMeno, setDistrictMeno] = useState(0);\r\n  const [WardMeno, setWardMeno] = useState(0);\r\n\r\n  const [Password, bindPassword, setPassword] = useInput(\"\");\r\n  const [PasswordConfirm, bindPasswordConfirm, setPasswordConfirm] = useInput(\r\n    \"\"\r\n  );\r\n  const [CustomerName, bindCustomerName, setCustomerName] = useInput(\"\");\r\n  const [Phone, bindPhone, setPhone] = useInput(\"\");\r\n  const [Email, bindEmail, setEmail] = useInput(\"\");\r\n  const [Address, bindAddress, setAddress] = useInput(\"\");\r\n  const [GoogleId, setGoogleId] = useState(\"\");\r\n  const [FacebookId, setFacebookId] = useState(\"\");\r\n\r\n  const [phoneReg, setPhoneReg] = useState(\"\");\r\n  const [emailReg, setEmailReg] = useState(\"\");\r\n  const [passwordReg, setPasswordReg] = useState(\"\");\r\n  const [passwordConfirmReg, setPasswordConfirmReg] = useState(\"\");\r\n  const [ErrorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const PasswordRef = useRef();\r\n  const PasswordConfirmRef = useRef();\r\n  const CustomerNameRef = useRef();\r\n  const PhoneRef = useRef();\r\n  const EmailRef = useRef();\r\n  const AddressRef = useRef();\r\n  const SocialIdRef = useRef();\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    let strSocial = localStorage.getItem(\"registerSocial\");\r\n    if (strSocial !== undefined && strSocial !== \"\" && strSocial !== null) {\r\n      let objs = JSON.parse(strSocial);\r\n      setCustomerName(objs.Name);\r\n      setEmail(objs.Email);\r\n      setGoogleId(objs.GoogleId);\r\n      setFacebookId(objs.FacebookId);\r\n      localStorage.setItem(\"registerSocial\", \"\")\r\n    }\r\n  }, []);\r\n\r\n  /* get and set parameter from form and sub common */\r\n\r\n  /* Chose item from select common */\r\n  const onChooseProvince = (item) => {\r\n    setCityMeno(item.value);\r\n    setDistrictMeno(0);\r\n    setWardMeno(0);\r\n  };\r\n\r\n  const onChooseDistrict = (item) => {\r\n    setDistrictMeno(item.value);\r\n    setWardMeno(0);\r\n  };\r\n\r\n  const onChooseWard = (item) => {\r\n    setWardMeno(item.value);\r\n  };\r\n\r\n  const [ErrName, setErrName] = useState(\"\");\r\n  const [ErrAddress, setErrAddress] = useState(\"\");\r\n  const [ErrCity, setErrCity] = useState(\"\");\r\n  const [ErrDistrict, setErrDistrict] = useState(\"\");\r\n  const [ErrWard, setErrWard] = useState(\"\");\r\n  const [PassEncoding, setPassEncoding] = useState();\r\n\r\n  const [PassHide, setPassHide] = useState(\"password\");\r\n  const [PassEye, setPassEye] = useState(\"\");\r\n  const [PassConfirmHide, setPassConfirmHide] = useState(\"password\");\r\n  const [PassConfirmEye, setPassConfirmEye] = useState(\"\");\r\n\r\n  const APIC_GetEncoding = async (str) => {\r\n    debugger\r\n    let data = await CustomerAction.APIC_GetEncoding({ json: str }, dispatch);\r\n    debugger\r\n    setPassEncoding(JSON.parse(data).data);\r\n  }\r\n\r\n  const onClickRegister = async () => {\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerName: CustomerName,\r\n      Phone: Phone,\r\n      Email: Email,\r\n      Address: Address,\r\n      Username: Phone,\r\n      Password: PassEncoding,\r\n      City: CityMeno,\r\n      District: DistrictMeno,\r\n      Ward: WardMeno,\r\n      GoogleId: GoogleId,\r\n      FacebookId: FacebookId,\r\n      SocialLoginObj: \"\"\r\n    };\r\n    debugger\r\n    if (CustomerName === \"\") {\r\n      Alerterror(\"Vui lòng nhập Họ tên\");\r\n      setErrName(\"form-error\");\r\n      return;\r\n    } else setErrName(\"\");\r\n\r\n    if (Phone === \"\") {\r\n      Alerterror(\"Vui lòng nhập số điện thoại\");\r\n      setPhoneReg(\"form-error\");\r\n      return;\r\n    } else setPhoneReg(\"\");\r\n\r\n    if (ValidPhone(Phone) === \"form-error\") {\r\n      Alerterror(\"Số điện thoại không đúng định dạng\");\r\n      setPhoneReg(\"form-error\");\r\n      return;\r\n    } else setPhoneReg(\"\");\r\n\r\n    if (Email === \"\") {\r\n      setEmailReg(\"form-error\");\r\n      Alerterror(\"Vui lòng nhập email\");\r\n      return;\r\n    } else setEmailReg(\"\");\r\n\r\n    if (ValidEmail(Email) !== \"\") {\r\n      setEmailReg(\"form-error\");\r\n      Alerterror(\"Email không đúng định dạng\");\r\n      return;\r\n    } else setEmailReg(\"\");\r\n\r\n    if (Password === \"\") {\r\n      setPasswordReg(\"form-error\");\r\n      Alerterror(\"Nhập mật khẩu\");\r\n      return;\r\n    } else setPasswordReg(\"\");\r\n\r\n    if (ValidPassword(Password) !== \"\") {\r\n      setPasswordReg(\"form-error\");\r\n      Alerterror(\"Mật khẩu không an toàn\");\r\n      return;\r\n    } else setPasswordReg(\"\");\r\n\r\n    if (PasswordConfirm === \"\") {\r\n      Alerterror(\"Nhập mật khẩu xác nhận\");\r\n      setPasswordConfirmReg(\"form-error\");\r\n      return;\r\n    } else setPasswordConfirmReg(\"\");\r\n\r\n    if (RegPasswordConfirm(PasswordConfirm) !== \"\") {\r\n      Alerterror(\"Mật khẩu xác nhận không đúng\");\r\n      setPasswordConfirmReg(\"form-error\");\r\n      return;\r\n    } else setPasswordConfirmReg(\"\");\r\n\r\n    if (Address === \"\") {\r\n      Alerterror(\"Vui lòng nhập Địa chỉ\");\r\n      setErrAddress(\"form-error\");\r\n      return;\r\n    } else setErrAddress(\"\");\r\n\r\n    if (CityMeno === 0 || CityMeno === undefined) {\r\n      Alerterror(\"Vui lòng chọn Tỉnh thành\");\r\n      setErrCity(\"form-error\");\r\n      return;\r\n    } else setErrCity(\"\");\r\n\r\n    if (DistrictMeno === 0 || DistrictMeno === undefined) {\r\n      Alerterror(\"Vui lòng chọn Quận huyện\");\r\n      setErrDistrict(\"form-error\");\r\n      return;\r\n    } else setErrDistrict(\"\");\r\n\r\n    if (WardMeno === 0 || WardMeno === undefined) {\r\n      Alerterror(\"Vui lòng chọn Phường xã\");\r\n      setErrWard(\"form-error\");\r\n      return;\r\n    } else setErrWard(\"\");\r\n\r\n    try {\r\n      setDisable(false);\r\n      const pr = {\r\n        API_key: APIKey,\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spCustomerRegister_Save\",\r\n      };\r\n      debugger\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      debugger\r\n      if (data[0].resultCode === 0) {\r\n        Alertsuccess(data[0].localMessage);\r\n        history.push(\"/\");\r\n      } else {\r\n        Alerterror(data[0].localMessage);\r\n      }\r\n      mainAction.LOADING({ IsLoading: false }, dispatch);\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng NETCO\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n  };\r\n\r\n  const RegEmail = (e) => {\r\n    setEmail(e);\r\n    if (e !== \"\") {\r\n      let result = ValidEmail(e);\r\n      setEmailReg(result);\r\n      if (result === \"form-error\")\r\n        setErrorMessage(\"Email không đúng định dạng\");\r\n      else setErrorMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const RegPhone = (e) => {\r\n    debugger;\r\n    setPhone(e);\r\n    if (e !== \"\") {\r\n      let result = ValidPhone(e);\r\n      setPhoneReg(result);\r\n      if (result === \"form-error\")\r\n        setErrorMessage(\"Số điện thoại không đúng định dạng\");\r\n      else setErrorMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const RegPassword = (e) => {\r\n    setPassword(e);\r\n    if (e !== \"\") {\r\n      let result = ValidPassword(e);\r\n      setPasswordReg(result);\r\n      if (result === \"form-error\") {\r\n        setErrorMessage(\r\n          \"Mật khẩu phải có ít nhất 8 kí tự (bao gồm chữ hoa, chữ thường, chữ số, ký tự đặc biệt)\"\r\n        );\r\n        return \"form-error\";\r\n      } else {\r\n        setErrorMessage(\"\");\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const RegPasswordConfirm = (e) => {\r\n    setPasswordConfirm(e);\r\n    if (e !== Password) {\r\n      setPasswordConfirmReg(\"form-error\");\r\n      setErrorMessage(\"Mật khẩu nhập lại không khớp\");\r\n      return \"form-error\";\r\n    } else {\r\n      setPasswordConfirmReg(\"\");\r\n      setErrorMessage(\"\");\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const responseFacebook = (response) => {\r\n    debugger\r\n    console.log(response);\r\n  }\r\n\r\n  const responseGoogle = async (response) => {\r\n    let obj = new Object();\r\n    obj.Email = response.profileObj.email;\r\n    obj.Name = response.profileObj.familyName + response.profileObj.givenName;\r\n    obj.googleId = response.profileObj.googleId;\r\n    obj.imageUrl = response.profileObj.imageUrl;\r\n    const params = {\r\n      API_key: APIKey,\r\n      Json: '{\"SocialID\":\"' + response.profileObj.googleId + '\",\"SocialType\":\"Google\", \"SocialLoginObj\": \"' + JSON.stringify(response) + '\"}',\r\n      func: \"APIC_spCustomerSocialLoginV2\",\r\n    };\r\n    const list = await mainAction.API_spCallServer(params, dispatch);\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-login\">\r\n      <div className=\"container container-login\">\r\n        <div className=\"row\" >\r\n          <div className=\"col-md-6  hide-sm register\">\r\n            <div className='row' style={{ height: '100%', background: '#101010', opacity: '0.5' }}>\r\n              <div >\r\n                <span className='title'>REGISTER NOW</span>\r\n                <div className='content'>\r\n                  Đăng ký tài khoản để dễ dàng tạo và theo dõi đơn hàng của quý khách!\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"col-md-12\">\r\n              <Img\r\n                src=\"../../assets/img/LogoNetco.png\"\r\n                width=\"200\"\r\n                className=\"margin-left-5\"\r\n\r\n              />\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n              <h3 className=\"bold\">\r\n                ĐĂNG KÝ TÀI KHOẢN\r\n              </h3>\r\n              <div className=\"form-group\">\r\n                Bạn đã có tài khoản rồi?\r\n                <Link style={{ color: '#2264D1' }} className='bold' to=\"/login\"> Đăng nhập ngay</Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 width60 margin-top-10\">\r\n              <label className='color-grey'>\r\n                Họ tên <span className=\"red\">(*)</span>\r\n              </label>\r\n              <div className=\"form-group mt0\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={\"form-control borradius3 \" + ErrName}\r\n                  ref={CustomerNameRef}\r\n                  value={CustomerName}\r\n                  {...bindCustomerName}\r\n                  placeholder='Nhập họ tên của bạn'\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 width60 margin-top-5s\">\r\n              <label className='color-grey'>\r\n                Số điện thoại <span className=\"red\">(*)</span>\r\n              </label>\r\n              <div className=\"form-group mt0\">\r\n                <input\r\n                  type=\"number\"\r\n                  className={\"form-control borradius3 \" + phoneReg}\r\n                  ref={PhoneRef}\r\n                  value={Phone}\r\n                  {...bindPhone}\r\n                  onChange={(e) => RegPhone(e.target.value)}\r\n                  placeholder='Nhập số điện thoại của bạn'\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 width60 margin-top-5s\">\r\n              <label className='color-grey'>\r\n                Email <span className=\"red\">(*)</span>\r\n              </label>\r\n              <div className=\"form-group mt0\">\r\n                <input\r\n                  type=\"email\"\r\n                  className={\"form-control borradius3 \" + emailReg}\r\n                  ref={EmailRef}\r\n                  value={Email}\r\n                  {...bindEmail}\r\n                  onChange={(e) => RegEmail(e.target.value)}\r\n                  placeholder='Nhập số Email của bạn'\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 width60 margin-top-5s\">\r\n              <label className='color-grey'>\r\n                Mật khẩu <span className=\"red\">(*)</span>\r\n              </label>\r\n              <div className=\"form-group mt0\">\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type={PassHide}\r\n                    className={\"form-control borradius3 \" + passwordReg}\r\n                    ref={PasswordRef}\r\n                    value={Password}\r\n                    {...bindPassword}\r\n                    onChange={(e) => { RegPassword(e.target.value); APIC_GetEncoding(e.target.value); }}\r\n                    placeholder='Nhập mật khẩu'\r\n                  />\r\n                  <div className=\"input-group-append\"><span className={\"fa fa-fw fa-eye input-group-text \" + PassEye} onClick={(e) => { setPassHide(PassEye === \"\" ? \"text\" : \"password\"); setPassEye(PassEye === \"\" ? \"fa-eye-slash\" : \"\"); }} ></span></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 width60 margin-top-5s\">\r\n              <label className='color-grey'>\r\n                Xác nhận mật khẩu <span className=\"red\">(*)</span>\r\n              </label>\r\n              <div className=\"form-group mt0\">\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type={PassConfirmHide}\r\n                    className={\"form-control borradius3 \" + passwordConfirmReg}\r\n                    ref={PasswordConfirmRef}\r\n                    value={PasswordConfirm}\r\n                    {...bindPasswordConfirm}\r\n                    onChange={(e) => RegPasswordConfirm(e.target.value)}\r\n                    placeholder='Nhập lại mật khẩu'\r\n                  />\r\n                  <div className=\"input-group-append\"><span className={\"fa fa-fw fa-eye input-group-text \" + PassConfirmEye} onClick={(e) => { setPassConfirmHide(PassConfirmEye === \"\" ? \"text\" : \"password\"); setPassConfirmEye(PassConfirmEye === \"\" ? \"fa-eye-slash\" : \"\"); }} ></span></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 text-center error-message width60 margin-top-5s\">\r\n              {ErrorMessage}\r\n            </div>\r\n            <div className=\"col-md-12 width60 margin-top-10s\">\r\n              <div className=\"form-group\">\r\n                <label className='color-grey'>\r\n                  Tỉnh thành <span className=\"red\">(*)</span>\r\n                </label>\r\n                <SelectCity\r\n                  className={\"form-control \" + ErrCity}\r\n                  onActive={CityMeno}\r\n                  onSelected={(item) => {\r\n                    onChooseProvince(item);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 width60 margin-top-10s\">\r\n              <div className=\"form-group\">\r\n                <label className='color-grey'>\r\n                  Quận huyện <span className=\"red\">(*)</span>\r\n                </label>\r\n                <SelectDistrict\r\n                  className={\"form-control \" + ErrDistrict}\r\n                  onActive={DistrictMeno}\r\n                  ParentID={CityMeno}\r\n                  onSelected={(item) => {\r\n                    onChooseDistrict(item);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 width60 margin-top-10s\">\r\n              <div className=\"form-group\">\r\n                <label className='color-grey'>\r\n                  Phường xã <span className=\"red\">(*)</span>\r\n                </label>\r\n                <SelectWard\r\n                  onActive={WardMeno}\r\n                  ParentID={DistrictMeno}\r\n                  onSelected={(item) => {\r\n                    onChooseWard(item);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 width60 margin-top-5s\">\r\n              <label className='color-grey'>\r\n                Địa chỉ <span className=\"red\">(*)</span>\r\n              </label>\r\n              <div className=\"form-group mt0\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={\"form-control borradius3 \" + ErrAddress}\r\n                  ref={AddressRef}\r\n                  value={Address}\r\n                  {...bindAddress}\r\n                  placeholder='Nhập địa chỉ của bạn'\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-12 text-center width60\">\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn text-transform btn-sm btn-save width100\"\r\n                  onClick={onClickRegister}\r\n                >\r\n                  Đăng ký ngay<div className=\"ripple-container\"></div>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 width60\" style={{ fontSize: '12px' }}>\r\n              <span>Khi nhấn đăng ký, quý khác đã đồng ý với Điều khoản sử dụng dịch vụ của NETCO post. Nếu quý khách không đăng ký được tài khoản, vui lòng liên hệ hotline <span className='red'>1900 6463</span> để được hỗ trợ.</span>\r\n            </div>\r\n            <div className=\"gg display-none\">\r\n              <FacebookLogin\r\n                appId={FACEBOOK_LOGIN_APPID}\r\n                autoLoad={false}\r\n                fields=\"name,email,picture\"\r\n                scope=\"public_profile\"\r\n                callback={responseFacebook}\r\n                icon=\"fa-facebook\"\r\n                cssClass=\"btn btn-success btnFacebook\"\r\n              />\r\n              <GoogleLogin\r\n                clientId={GOOGLE_LOGIN_CLIENTID}\r\n                buttonText=\"Sign In with Google\"\r\n                onSuccess={responseGoogle}\r\n                icon=\"fa-google\"\r\n                cssClass=\"btn btn-success btnFacebook\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\ResetPasswordComponent.js",["743","744","745","746","747","748","749","750"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Alertsuccess, Alerterror, PaginationTable, Alertwarning } from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { Img } from \"react-image\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { APIKey } from \"../../Services/Api\";\r\nimport { Alert } from \"reactstrap\";\r\n\r\nexport const ResetPasswordComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Password, bindPassword, setPassword] = useInput(\"\");\r\n  const PasswordRef = useRef();\r\n\r\n  const [PasswordConfirm, bindPasswordConfirm, setPasswordConfirm] = useInput(\"\");\r\n  const PasswordConfirmRef = useRef();\r\n\r\n  const [CustomerID, setCustomerID] = useState(0);\r\n  const [PassOld, setPassOld] = useState(\"\");\r\n\r\n  const [Message, setMessage] = useState(\"\");\r\n  const [KeyChangePass, setKeyChangePass] = useState(\"\");\r\n  const [disable, setDisable] = useState(false); // disable button\r\n\r\n  const [PassHide, setPassHide] = useState(\"password\");\r\n  const [PassEye, setPassEye] = useState(\"\");\r\n  const [PassConfirmHide, setPassConfirmHide] = useState(\"password\");\r\n  const [PassConfirmEye, setPassConfirmEye] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    APIC_CustomerCheckResetPass();\r\n  }, []);\r\n\r\n  const APIC_CustomerCheckResetPass = async () => {\r\n    setDisable(true);\r\n\r\n    let sPageURL = window.location.href;\r\n    let _key = sPageURL.split(\"key=\");\r\n    setKeyChangePass(_key[1]);\r\n\r\n    let pr = {\r\n      Json: _key[1],\r\n    };\r\n    const keyDesc = await mainAction.DecryptString(pr, dispatch);\r\n    if (keyDesc !== '') {\r\n      var arr = keyDesc.split(\";\");\r\n      let params = {\r\n        Json: \"{\\\"CustomerID\\\":\\\"\" + arr[0] + \"\\\"}\",\r\n        func: \"APIC_spCustomer_GetById\"\r\n      };\r\n      const data = await mainAction.API_spCallServer(\r\n        params,\r\n        dispatch\r\n      );\r\n      if (data[0].CustomerCode == arr[1] && data[0].Password == arr[2]) {\r\n        setCustomerID(arr[0]);\r\n        setPassOld(arr[2]);\r\n        setDisable(false);\r\n        setMessage(\"Yêu cầu đổi mật khẩu hợp lệ. Có thể tiến hành đổi mật khẩu mới\");\r\n      }\r\n      else {\r\n        setMessage(\"Yêu cầu đổi mật khẩu đã hết hạn\");\r\n      }\r\n    }\r\n    else {\r\n      setMessage(\"Lỗi\");\r\n    }\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const APIC_spCustomerResetPass = async () => {\r\n    setDisable(true);\r\n    if (Password !== PasswordConfirm) {\r\n      Alertwarning(\"Mật khẩu mới và mật khẩu xác nhận không trùng nhau. Vui lòng kiểm tra lại\");\r\n      setDisable(false);\r\n      return;\r\n    }\r\n    //Mã hóa mk mới\r\n    let prEnc = {\r\n      Json: Password,\r\n    };\r\n    const keyEnc = await mainAction.EncryptString(prEnc, dispatch);\r\n\r\n    //Đổi mk\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      Key: KeyChangePass,\r\n      CustomerID: CustomerID,\r\n      Password: keyEnc,\r\n      PasswordOld: PassOld,\r\n    };\r\n    if (KeyChangePass !== '' && CustomerID!==0) {\r\n      let pr = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spCustomerResetPass_V2\"\r\n      };\r\n      const data = await mainAction.API_spCallServer(\r\n        pr,\r\n        dispatch\r\n      );\r\n      debugger\r\n      if (data != null) {\r\n        Alertsuccess(\"Đổi mật khẩu thành công!\");\r\n        localStorage.setItem(\"login\", \"\");\r\n        window.location.href = \"/login\";\r\n      }\r\n      else {\r\n        Alerterror(\"Đổi mật khẩu không thành công\");\r\n        setDisable(false);\r\n      }\r\n    }\r\n    else {\r\n      Alerterror(\"Yêu cầu đổi mật khẩu không hợp lệ\");\r\n      setDisable(false);\r\n    }\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-login\">\r\n      <div className=\"container container-login\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <Link to=\"/\">\r\n              <Img\r\n                src=\"../../assets/img/LogoNetco.png\"\r\n                width=\"200\"\r\n                className=\"margin-left-5\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h3 className=\"bold text-center\">\r\n              YÊU CẦU THAY ĐỔI <span className=\"red\">MẬT KHẨU</span>\r\n            </h3>\r\n          </div>\r\n          <div className=\"col-md-3\"></div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <form method=\"#\" action=\"#\">\r\n              <div className=\"row\">\r\n                <label className=\"col-sm-4 col-form-label\">Mật khẩu mới <span className=\"red\">(*)</span></label>\r\n                <div className=\"col-sm-8\">\r\n                  <div className=\"input-group\">\r\n                    <input type={PassHide} className=\"form-control\"\r\n                      ref={PasswordRef}\r\n                      value={Password}\r\n                      {...bindPassword}\r\n                      disabled={disable}\r\n                    />\r\n                    <div className=\"input-group-append\"><span className={\"fa fa-fw fa-eye input-group-text \" + PassEye} onClick={(e) => { setPassHide(PassEye === \"\" ? \"text\" : \"password\"); setPassEye(PassEye === \"\" ? \"fa-eye-slash\" : \"\"); }} ></span></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <label className=\"col-sm-4 col-form-label\">\r\n                  Nhập lại mật khẩu <span className=\"red\">(*)</span>\r\n                </label>\r\n                <div className=\"col-sm-8\">\r\n                  <div className=\"input-group\">\r\n                    <input className=\"form-control\" type={PassConfirmHide}\r\n                      ref={PasswordConfirmRef}\r\n                      value={PasswordConfirm}\r\n                      {...bindPasswordConfirm}\r\n                      disabled={disable}\r\n                    />\r\n                    <div className=\"input-group-append\"><span className={\"fa fa-fw fa-eye input-group-text \" + PassConfirmEye} onClick={(e) => { setPassConfirmHide(PassConfirmEye === \"\" ? \"text\" : \"password\"); setPassConfirmEye(PassConfirmEye === \"\" ? \"fa-eye-slash\" : \"\"); }} ></span></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group text-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-fill login-button\"\r\n                  disabled={disable}\r\n                  onClick={APIC_spCustomerResetPass}\r\n                >\r\n                  đổi mật khẩu<div className=\"ripple-container\"></div>\r\n                </button>\r\n              </div>\r\n              <div className=\"form-group text-center\">\r\n                {Message + \" \"}\r\n                <Link className=\"green italic\" to=\"/forgot\">\r\n                  Gửi lại yêu cầu đổi mật khẩu\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\ProfiveComponent.js",["751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport {\r\n  SelectCity,\r\n  SelectDistrict,\r\n  SelectWard,\r\n  Avarta,\r\n} from \"../../Common\";\r\nimport { Alertsuccess, Alerterror, DecodeString, GetCookie, GetCookieGroup } from \"../../Utils\";\r\n\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { APIKey, TOKEN_DEVICE, GOOGLE_LOGIN_CLIENTID, FACEBOOK_LOGIN_APPID } from \"../../Services/Api\";\r\n\r\n/* Load CSS */\r\n\r\nexport const ProfiveComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n  const [Customer, setCustomer] = useState(GetCookie(\"All\"));\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [CustomerName, bindCustomerName, setCustomerName] = useInput(GetCookie(\"CustomerName\"));\r\n  const CustomerNameRef = useRef();\r\n\r\n  const [Phone, bindPhone, setPhone] = useInput(GetCookie(\"Phone\"));\r\n  const PhoneRef = useRef();\r\n\r\n  const [Email, bindEmail, setEmail] = useInput(GetCookie(\"Email\"));\r\n  const EmailRef = useRef();\r\n\r\n  const [Company, bindCompany, setCompany] = useInput(GetCookie(\"Company\"));\r\n  const CompanyRef = useRef();\r\n\r\n  const [Address, bindAddress, setAddress] = useInput(GetCookie(\"Address\"));\r\n  const AddressRef = useRef();\r\n\r\n  const [BankNumber, bindBankNumber, setBankNumber] = useInput(GetCookie(\"BankNumber\"));\r\n  const BankNumberRef = useRef();\r\n\r\n  const [BankNumberName, bindBankNumberName, setBankNumberName] = useInput(GetCookie(\"BankNumberName\"));\r\n  const BankNumberNameRef = useRef();\r\n\r\n  const [BankName, bindBankName, setBankName] = useInput(GetCookie(\"BankName\"));\r\n  const BankNameRef = useRef();\r\n\r\n  const [BankBranch, bindBankBranch, setBankBranch] = useInput(GetCookie(\"BankBranch\"));\r\n  const BankBranchRef = useRef();\r\n\r\n  const [City, setCity] = useState(0);\r\n\r\n  const [District, setDistrict] = useState(GetCookie(\"District\"));\r\n\r\n  const [Ward, setWard] = useState(GetCookie(\"Ward\"));\r\n\r\n  const [Avatar, setAvatar] = useState(GetCookie(\"LinkAvatar\"));\r\n  const [FileUpload, setFileUpload] = useState({});\r\n\r\n  useEffect(() => {\r\n    debugger\r\n    var a = GetCookie(\"CustomerCompany\")\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    if (GetCookieGroup(\"IsChooseCustomer\") === \"Fail\")\r\n      window.location.href = \"/home\";\r\n    setCity(GetCookie(\"City\"));\r\n  }, []);\r\n\r\n  const onChooseProvince = (item) => {\r\n    //setCityMeno(item);\r\n    setCity(item.value);\r\n  };\r\n\r\n  const onChooseDistrict = (item) => {\r\n    //setDistrictMeno(item);\r\n    setDistrict(item.value);\r\n  };\r\n\r\n  const onSelectWard = (item) => {\r\n    //setWardMeno(item);\r\n    setWard(item.value);\r\n  };\r\n  /* clear data on form when insert success */\r\n\r\n  const APIC_spCustomerUpdateInfo = async () => {\r\n    //ScrollTop();\r\n    setDisable(false);\r\n    if (CustomerName === \"\") {\r\n      Alerterror(\"Vui lòng nhập họ tên\");\r\n      return;\r\n    }\r\n    else if (Phone === \"\") {\r\n      Alerterror(\"Vui lòng nhập SDT\");\r\n      return;\r\n    } else if (Email === \"\") {\r\n      Alerterror(\"Vui lòng nhập Email\");\r\n      return;\r\n    } else if (Address === \"\") {\r\n      /*  else if (ValidEmail(Email) !== \"\") {\r\n        Alerterror(\"Email không đúng định dạng\");\r\n        return;\r\n      }  */\r\n      Alerterror(\"Vui lòng nhập Địa chỉ\");\r\n      return;\r\n    } else if (City === 0) {\r\n      Alerterror(\"Vui lòng chọn Tỉnh thành\");\r\n      return;\r\n    } else if (District === 0) {\r\n      Alerterror(\"Vui lòng chọn Quận huyện\");\r\n      return;\r\n    } else if (Ward === 0) {\r\n      Alerterror(\"Vui lòng chọn Phường xã\");\r\n      return;\r\n    } else {\r\n      let params = {\r\n        AppAPIKey: APIKey,\r\n        TokenDevices: TOKEN_DEVICE,\r\n        CustomerID: CustomerID,\r\n        CustomerName: CustomerName,\r\n        CompanyName: Company,\r\n        UserName: \"\",\r\n        Password: \"\",\r\n        Phone: Phone,\r\n        Email: Email,\r\n        Address: Address,\r\n        City: City,\r\n        District: District,\r\n        Ward: Ward,\r\n        BankNumber: BankNumber == null ? \"\" : BankNumber,\r\n        BankNumberName: BankNumberName == null ? \"\" : BankNumberName,\r\n        BankName: BankName == null ? \"\" : BankName,\r\n        BankBranch: BankBranch == null ? \"\" : BankBranch\r\n      };\r\n      const pr = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spCustomerUpdateInfo_V1\",\r\n      };\r\n      // call redux saga\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      if (data.resultCode === 0)\r\n        Alertsuccess(data.localMessage);\r\n      else\r\n        Alerterror(data.localMessage);\r\n      //Cập nhật lại cookie\r\n      Customer.CustomerName = CustomerName;\r\n      Customer.Address = Address;\r\n      Customer.City = City;\r\n      Customer.District = District;\r\n      Customer.Ward = Ward;\r\n      Customer.BankNumber = BankNumber;\r\n      Customer.BankNumberName = BankNumberName;\r\n      Customer.BankName = BankName;\r\n      Customer.setBankBranch = BankBranch;\r\n      Customer.Company = Company;\r\n      localStorage.setItem(\"Customer_LoginData\", JSON.stringify(Customer));\r\n    }\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const [OldAvatar, setOldAvatar] = useState(\"/assets/img/noimage.jpg\");\r\n  const [ShowChooseAvatar, setShowChooseAvatar] = useState(\"\");\r\n  const [ShowSaveAvatar, setShowSaveAvatar] = useState(\"display-none\");\r\n\r\n  const onCancelChangeAvatar = (event) => {\r\n    setShowChooseAvatar(\"\");\r\n    setShowSaveAvatar(\"display-none\");\r\n    setAvatar(OldAvatar);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    setFileUpload(event.target.files[0]);\r\n    setShowChooseAvatar(\"display-none\");\r\n    setShowSaveAvatar(\"\");\r\n    setOldAvatar(Avatar);\r\n    setAvatar(URL.createObjectURL(event.target.files[0]));\r\n  };\r\n\r\n  // On file upload (click the upload button)\r\n  const onFileUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"CustomerID\", CustomerID);\r\n    formData.append(\"AppAPIKey\", APIKey);\r\n    formData.append(\"TokenDevice\", \"website\");\r\n    formData.append(\"Avatar\", \"\");\r\n    formData.append(\"myFile\", FileUpload, FileUpload.name);\r\n\r\n    const data = await CustomerAction.APIC_spCustomerChangeAvatar(\r\n      formData,\r\n      dispatch\r\n    );\r\n    debugger\r\n    if (data.resultCode === 0) {\r\n      setAvatar(\"https://erp.vps.vn\" + data.localMessage);\r\n      setShowChooseAvatar(\"\");\r\n      setShowSaveAvatar(\"display-none\");\r\n    }\r\n    let objCustomer = Customer;\r\n    objCustomer.Avatar = \"https://erp.vps.vn\" + data.localMessage;\r\n    localStorage.setItem(\"Customer_LoginData\", JSON.stringify(objCustomer));\r\n    setCustomer(objCustomer);\r\n    Alertsuccess(\"Cập nhật ảnh đại diện thành công !\");\r\n  };\r\n\r\n  const responseFacebook = (response) => {\r\n    console.log(response);\r\n  }\r\n\r\n  const responseGoogle = async (response) => {\r\n    let pr = {\r\n      CustomerId: Customer.CustomerID,\r\n      GoogleId: response.profileObj.googleId,\r\n      SocialLoginObj: response.profileObj\r\n    }\r\n    const params = {\r\n      API_key: APIKey,\r\n      Json: JSON.stringify(pr),\r\n      func: \"APIC_spCustomerSocialLoginV2\",\r\n    };\r\n    const list = await mainAction.API_spCallServer(params, dispatch);\r\n    if (list.length > 0) {\r\n      let _customer = list[0];\r\n      let objCustomer = {\r\n        CustomerID: _customer.CustomerID,\r\n        CustomerCode: _customer.CustomerCode,\r\n        CustomerName: _customer.CustomerName,\r\n        Phone: _customer.Phone,\r\n        Email: _customer.Email,\r\n        Address: _customer.Address,\r\n        Company: _customer.CustomerCompany,\r\n        City: _customer.City,\r\n        District: _customer.District,\r\n        Ward: _customer.Ward,\r\n        CityName: _customer.CityName,\r\n        DistrictName: _customer.DistrictName,\r\n        WardName: _customer.WardName,\r\n        Verification: _customer.Verification,\r\n        CustomerGroupId: _customer.CustomerGroupId,\r\n        PostOfficeId: _customer.PostOfficeId,\r\n        Officer_ServiceId: _customer.Officer_ServiceId,\r\n        GroupId: _customer.CustomerGroupId,\r\n        LinkAvatar: _customer.LinkAvatar,\r\n        TypeCustomer: _customer.Type,\r\n        GoogleId: _customer.GoogleId,\r\n        FacebookId: _customer.FacebookId\r\n      };\r\n      localStorage.setItem(\"Customer_LoginData\", JSON.stringify(objCustomer));\r\n      setCustomer(objCustomer);\r\n      Alertsuccess(\"Liên kết tài khoản với Google thành công !\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"row FormProfl\">\r\n        <div className=\"col-md-12 row HomeTitle  cardcus\">Thông tin tài khoản</div>\r\n        <div className=\"col-md-4   margin-top-20\">\r\n          <div className=\"row cardcus\">\r\n            <div className=\"col-md-12 text-center\">\r\n              <img src={Avatar} className=\"avatarCustomer\" />\r\n            </div>\r\n            <div\r\n              className={\r\n                ShowChooseAvatar + \" col-md-12 text-center\"\r\n              }\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                className=\"fileUpload\"\r\n                onChange={onFileChange}\r\n                accept=\"image/*\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn text-transform btn-refesh btn-sm\"\r\n                disabled={disable}\r\n              >\r\n                <i className=\"material-icons\">camera_alt</i> Đổi ảnh đại diện\r\n              </button>\r\n            </div>\r\n            <div\r\n              className={ShowSaveAvatar + \" col-md-12 text-center\"}\r\n            >\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger btn-sm width150\"\r\n                disabled={disable}\r\n                onClick={onFileUpload}\r\n              >\r\n                <i className=\"material-icons\">save</i> cập nhật\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-default btn-sm width150\"\r\n                disabled={disable}\r\n                onClick={onCancelChangeAvatar}\r\n              >\r\n                <i className=\"material-icons\">undo</i> Hủy\r\n              </button>\r\n            </div>\r\n            <div className=\"col-md-12 text-center margin-top-20\">\r\n              {/* <FacebookLogin\r\n                  appId={FACEBOOK_LOGIN_APPID}\r\n                  textButton=\"Kết nối với Facebook\"\r\n                  autoLoad={false}\r\n                  fields=\"name,email,picture\"\r\n                  callback={responseFacebook}\r\n                  icon=\"fa-facebook\"\r\n                  cssClass=\"btn btn-info btnFacebook\"\r\n                />\r\n                <br /> */}\r\n              {GetCookie(\"GoogleId\") === null ? (\r\n                <GoogleLogin\r\n                  clientId={GOOGLE_LOGIN_CLIENTID}\r\n                  buttonText=\"Kết nối tài khoản với Google\"\r\n                  onSuccess={responseGoogle}\r\n                  icon=\"fa-google\"\r\n                  cssClass=\"btn btn-success btnGoogle\"\r\n                />\r\n              ) : (<></>)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-8 margin-top-20\">\r\n          <div className='cardcus'>\r\n            <div className='title'>\r\n              Thông tin cá nhân{\" \"}\r\n            </div>\r\n            <div className=\"row margin-top-20\">\r\n              <div className=\"col-md-6 mt5\">\r\n                <div className=\"form-group\">\r\n                  <label>Họ tên <span className=\"red\">(*)</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control borradius3\"\r\n                    ref={CustomerNameRef}\r\n                    value={CustomerName}\r\n                    {...bindCustomerName}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 mt5\">\r\n                <div className=\"form-group borradius3\">\r\n                  <label>Số điện thoại <span className=\"red\">(*)</span></label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    ref={PhoneRef}\r\n                    value={Phone}\r\n                    {...bindPhone}\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group borradius3\">\r\n                  <label>Email <span className=\"red\">(*)</span></label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control borradius3\"\r\n                    ref={EmailRef}\r\n                    value={Email}\r\n                    {...bindEmail}\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group \">\r\n                  <label>Công ty</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control borradius3\"\r\n                    ref={CompanyRef}\r\n                    value={Company}\r\n                    {...bindCompany}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Địa chỉ <span className=\"red\">(*)</span></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control borradius3\"\r\n                    ref={AddressRef}\r\n                    value={Address}\r\n                    {...bindAddress}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>STK ngân hàng</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control borradius3\"\r\n                    ref={BankNumberRef}\r\n                    value={BankNumber}\r\n                    {...bindBankNumber}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Tên TK ngân hàng</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control borradius3\"\r\n                    ref={BankNumberNameRef}\r\n                    value={BankNumberName}\r\n                    {...bindBankNumberName}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Tên ngân hàng</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control borradius3\"\r\n                    ref={BankNameRef}\r\n                    value={BankName}\r\n                    {...bindBankName}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Tên chi nhánh</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control borradius3\"\r\n                    ref={BankBranchRef}\r\n                    value={BankBranch}\r\n                    {...bindBankBranch}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group mt0\">\r\n                  <label className=\"bmd-label-static\">Tỉnh thành <span className=\"red\">(*)</span></label>\r\n                  <SelectCity\r\n                    onActive={City}\r\n                    onSelected={(item) => {\r\n                      onChooseProvince(item);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group mt0\">\r\n                  <label className=\"bmd-label-static\">Quận/huyện <span className=\"red\">(*)</span></label>\r\n                  <SelectDistrict\r\n                    onActive={District}\r\n                    ParentID={City}\r\n                    onSelected={(item) => {\r\n                      onChooseDistrict(item);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group mt0\">\r\n                  <label className=\"bmd-label-static\">Phường/xã <span className=\"red\">(*)</span></label>\r\n                  <SelectWard\r\n                    onActive={Ward}\r\n                    ParentID={District}\r\n                    onSelected={(item) => {\r\n                      onSelectWard(item);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 text-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn text-transform btn-sm btn-save\"\r\n                  disabled={disable}\r\n                  onClick={APIC_spCustomerUpdateInfo}\r\n                >\r\n                  <i className=\"material-icons\">cached</i> Cập nhật thông tin\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\LoginComponent.js",["771","772","773","774","775","776","777","778","779","780"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Alerterror, EncodeString } from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { Img } from \"react-image\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { APIKey, GOOGLE_LOGIN_CLIENTID, FACEBOOK_LOGIN_APPID } from \"../../Services/Api\";\r\n\r\nexport const LoginComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Username, bindUserName, setUsername] = useInput(\"\");\r\n  const UsernameRef = useRef();\r\n\r\n  const [Password, bindPassword, setPassword] = useInput(\"\");\r\n  const PasswordRef = useRef();\r\n\r\n  const [LoginMessage, setLoginMessage] = useState(\"\");\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n\r\n  const [UserActive, setUserActive] = useState(\"\");\r\n  const [PassActive, setPassActive] = useState(\"\");\r\n\r\n  const [PassHide, setPassHide] = useState(\"password\");\r\n  const [PassEye, setPassEye] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"login\", \"\");\r\n    let currentDate = new Date();\r\n    if (currentDate.getHours() < 12)\r\n      setLoginMessage(\"Chào buổi sáng. Chúc bạn ngày mới tràn đầy năng lượng\");\r\n    else if (currentDate.getHours() > 12 && currentDate.getHours() < 18)\r\n      setLoginMessage(\"Buổi chiều của bạn thế nào ?\");\r\n    else setLoginMessage(\"Hôm nay có gì mới ?\");\r\n  }, []);\r\n\r\n  const onClickLogin = async () => {\r\n    setDisable(true);\r\n    setUserActive(\"\");\r\n    setPassActive(\"\");\r\n    if (Username === \"\") {\r\n      Alerterror(\"Thông tin đăng nhập không được để trống\");\r\n      setUserActive(\"form-error\");\r\n      setDisable(false);\r\n      return;\r\n    } else if (Password === \"\") {\r\n      Alerterror(\"Mật khẩu không được để trống\");\r\n      setUserActive(\"\");\r\n      setPassActive(\"form-error\");\r\n      setDisable(false);\r\n      return;\r\n    } else {\r\n      let prj = {\r\n        json:Password\r\n      }\r\n      const pwd = await mainAction.EncryptString(\r\n        prj,\r\n        dispatch\r\n      );\r\n      let pr = {\r\n        Json: \"{\\\"UserName\\\":\\\"\" + Username + \"\\\",\\\"Password\\\":\\\"\" + pwd + \"\\\"}\",\r\n        func: \"APIC_spCustomerCheckLogin_Json\",\r\n      };\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      if (data.length>0) {\r\n        let ensc = EncodeString(JSON.stringify(data[0]));\r\n        localStorage.setItem(\"login\", ensc);\r\n        window.location.href = \"/home\";\r\n      } else {\r\n        Alerterror(\"Tài khoản hoặc mật khẩu không đúng\");\r\n      }\r\n    }\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const responseFacebook = async (response) => {\r\n    debugger\r\n    console.log(response);\r\n    if (response.status !== \"unknown\") {\r\n      let pr = {\r\n        SocialID: response.authResponse.userID,\r\n        SocialType: \"Facebook\",\r\n        SocialLoginObj: response\r\n      }\r\n      const params = {\r\n        API_key: APIKey,\r\n        Json: JSON.stringify(pr),\r\n        func: \"APIC_spCustomerSocialLoginV2\",\r\n      };\r\n      const list = await mainAction.API_spCallServer(params, dispatch);\r\n      if (list.length > 0) {\r\n        let ensc = EncodeString(JSON.stringify(list[0]));\r\n        localStorage.setItem(\"login\", ensc);\r\n        window.location.href = \"/home\";\r\n      }\r\n      else {\r\n        if (window.confirm(\"Không có tài khoản nào liên kết với tài khoản facebook của bạn. Đến trang đăng ký\")) {\r\n          let obj = new Object();\r\n          obj.Name = response.profileObj.name;\r\n          obj.Email = response.profileObj.email;\r\n          obj.GoogleId = response.profileObj.googleId;\r\n          obj.FacebookId = \"\";\r\n          obj.profileObj = response.profileObj;\r\n          localStorage.setItem(\"registerSocial\", JSON.stringify(obj));\r\n          window.location.href = \"/register\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const responseGoogle = async (response) => {\r\n    const params = {\r\n      API_key: APIKey,\r\n      Json: JSON.stringify({\r\n        GoogleId: response.profileObj.googleId,\r\n        SocialLoginObj: response.profileObj\r\n      }),\r\n      func: \"APIC_spCustomerSocialLoginV2\",\r\n    };\r\n\r\n    const list = await mainAction.API_spCallServer(params, dispatch);\r\n\r\n    if (list.length > 0) {\r\n      let ensc = EncodeString(JSON.stringify(list[0]));\r\n      localStorage.setItem(\"login\", ensc);\r\n      window.location.href = \"/home\";\r\n    }\r\n    else {\r\n      if (window.confirm(\"Không có tài khoản nào liên kết với tài khoản google của bạn. Đến trang đăng ký\")) {\r\n        debugger\r\n        let obj = new Object();\r\n        obj.Name = response.profileObj.name;\r\n        obj.Email = response.profileObj.email;\r\n        obj.GoogleId = response.profileObj.googleId;\r\n        obj.FacebookId = \"\";\r\n        obj.profileObj = response.profileObj;\r\n        localStorage.setItem(\"registerSocial\", JSON.stringify(obj));\r\n        window.location.href = \"/register\";\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-login\">\r\n      <div className=\"container container-login\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-center mb10\">\r\n            <Img src=\"../../assets/img/LogoNetco.png\" className=\"margin-left-5\" width=\"200\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 hide-sm\">\r\n            <h3 className=\"bold\">\r\n              <span className=\"red\">NETCO</span> CÓ GÌ HOT ?\r\n            </h3>\r\n            <div className=\"row margin-top-10\">\r\n              <div className=\"col-md-12 margin-top-10\">\r\n                <h4 className=\"bold\"> <Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" /> Vận chuyển an toàn </h4>\r\n                <div className=\"italic sm\"> Hàng hóa của khách hàng được bảo đảm an toàn tới tay người nhận </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"> <Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" /> Hỗ trợ tư vấn linh hoạt </h4>\r\n                <div className=\"italic sm\"> Khách hàng luôn được chăm sóc chu đáo - nhiệt tình ở mọi thời điểm </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"> <Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" />{\" \"} Thanh toán dễ dàng </h4>\r\n                <div className=\"italic sm\"> Phương thức thanh toán linh hoạt, tiện lợi mà vẫn giữ được sự an toàn </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"> <Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" /> Vận chuyển đúng giờ </h4>\r\n                <div className=\"italic sm\"> Luôn luôn đúng giờ là một ưu điểm tuyệt vời mà NETCO có được </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"><Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" /> Nhân viên nhiệt tình</h4>\r\n                <div className=\"italic sm\"> Nhân viên giao hàng nhiệt tình, luôn lắng nghe mọi ý kiến từ khách hàng </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h3 className=\"bold mb10\"> ĐĂNG NHẬP </h3>\r\n            <div className=\"form-group mb30\">\r\n              Bạn chưa có tài khoản?\r\n              <Link style={{color:'#2264D1'}} className='bold' to=\"/register\"> Đăng ký ngay</Link>\r\n            </div>\r\n            <div className=\"form-group width60\">\r\n              <label for=\"exampleEmail\">Email/số điện thoại </label>\r\n              <input type=\"text\" class={\"form-control borradius3 \" + UserActive} \r\n              id=\"exampleEmail\" ref={UsernameRef}\r\n               value={Username} {...bindUserName}\r\n               placeholder='Nhập Email hoặc số điện thoại'\r\n                />\r\n            </div>\r\n            <div className=\"form-group margin-top-20 width60\" >\r\n              <label for=\"examplePass\">Mật khẩu</label>\r\n              <div className=\"input-group\">\r\n                <input type={PassHide} class={\"form-control borradius3 \" + PassActive} id=\"examplePass\" \r\n                 placeholder='Nhập mật khẩu'\r\n                ref={PasswordRef} value={Password} {...bindPassword} />\r\n                <div className=\"input-group-append\"><span className={\"fa fa-fw fa-eye input-group-text \" + PassEye} onClick={(e) => { setPassHide(PassEye === \"\" ? \"text\" : \"password\"); setPassEye(PassEye === \"\" ? \"fa-eye-slash\" : \"\"); }} ></span></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group width60\" style={{color:'grey',marginTop:'-5px'}}>\r\n              <Link className=\"pull-right\" style={{color: '#3e3838'}} to=\"/forgot\">Quên mật khẩu ?</Link>\r\n            </div>\r\n            <div className=\"form-group text-center margin-top-20 width60\">\r\n              <button type=\"button\" style={{width:'100%'}} className=\"margin-top-20 btn text-transform btn-sm btn-save\" onClick={onClickLogin}>\r\n                Đăng nhập<div className=\"ripple-container\"></div>\r\n              </button>\r\n            </div>\r\n           \r\n            <div className=\"gg\">\r\n              {/* <FacebookLogin\r\n                  appId={FACEBOOK_LOGIN_APPID}\r\n                  autoLoad={false}\r\n                  fields=\"name,email,picture\"\r\n                  callback={responseFacebook}\r\n                  icon=\"fa-facebook\"\r\n                  cssClass=\"btn btn-info btnFacebook\"\r\n                  textButton=\"Login with Facebook\"\r\n                /> */}\r\n              <GoogleLogin\r\n                clientId={GOOGLE_LOGIN_CLIENTID}\r\n                buttonText=\"Đăng nhập nhanh với Google\"\r\n                onSuccess={responseGoogle}\r\n                icon=\"fa-google\"\r\n                cssClass=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"italic margin-top-15  mb30\">{LoginMessage}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\LoginV1Component.js",["781","782","783","784","785","786","787","788","789","790","791","792"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Alerterror, EncodeString } from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { Img } from \"react-image\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { APIKey, GOOGLE_LOGIN_CLIENTID, FACEBOOK_LOGIN_APPID } from \"../../Services/Api\";\r\n\r\nexport const LoginV1Component = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Username, bindUserName, setUsername] = useInput(\"\");\r\n  const UsernameRef = useRef();\r\n\r\n  const [Password, bindPassword, setPassword] = useInput(\"\");\r\n  const PasswordRef = useRef();\r\n\r\n  const [LoginMessage, setLoginMessage] = useState(\"\");\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n\r\n  const [UserActive, setUserActive] = useState(\"\");\r\n  const [PassActive, setPassActive] = useState(\"\");\r\n\r\n  const [PassHide, setPassHide] = useState(\"password\");\r\n  const [PassEye, setPassEye] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    debugger\r\n    localStorage.setItem(\"login\", \"\");\r\n    let currentDate = new Date();\r\n    if (currentDate.getHours() < 12)\r\n      setLoginMessage(\"Chào buổi sáng. Chúc bạn ngày mới tràn đầy năng lượng\");\r\n    else if (currentDate.getHours() > 12 && currentDate.getHours() < 18)\r\n      setLoginMessage(\"Buổi chiều của bạn thế nào ?\");\r\n    else setLoginMessage(\"Hôm nay có gì mới ?\");\r\n  }, []);\r\n\r\n  const onClickLogin = async () => {\r\n    setDisable(true);\r\n    setUserActive(\"\");\r\n    setPassActive(\"\");\r\n    if (Username === \"\") {\r\n      Alerterror(\"Thông tin đăng nhập không được để trống\");\r\n      setUserActive(\"form-error\");\r\n      setDisable(false);\r\n      return;\r\n    } else if (Password === \"\") {\r\n      Alerterror(\"Mật khẩu không được để trống\");\r\n      setUserActive(\"\");\r\n      setPassActive(\"form-error\");\r\n      setDisable(false);\r\n      return;\r\n    } else {\r\n      let prj = {\r\n        json: Password\r\n      }\r\n      const pwd = await mainAction.EncryptString(\r\n        prj,\r\n        dispatch\r\n      );\r\n      let pr = {\r\n        Json: \"{\\\"UserName\\\":\\\"\" + Username + \"\\\",\\\"Password\\\":\\\"\" + pwd + \"\\\"}\",\r\n        func: \"APIC_spCustomerCheckLoginGroup\",\r\n      };\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      let group = new Object();\r\n      if (data.CustomerGroup.length > 0) {\r\n        group.GroupId = data.CustomerGroup[0].Id;\r\n        group.IsChooseCustomer = \"Fail\";\r\n        group.Customers = data.Customers;\r\n        group.GroupName = data.CustomerGroup[0].CustomerGroupName;\r\n        let listC = \";\";\r\n        data.Customers.map(item => {\r\n          listC +=item.CustomerID+\";\";\r\n        })\r\n        group.CustomerIds = listC;\r\n\r\n        let enscG = EncodeString(JSON.stringify(group));\r\n        localStorage.setItem(\"GroupInfo\", enscG);\r\n\r\n        let enscC = EncodeString(JSON.stringify(data.Customers[0]));\r\n        localStorage.setItem(\"login\", enscC);\r\n        window.location.href = \"/home\";\r\n      } else if (data.Customers.length === 1) {\r\n        group.GroupId = 0;\r\n        group.IsChooseCustomer = \"True\";\r\n        group.Customers = [];\r\n\r\n        let enscG = EncodeString(JSON.stringify(group));\r\n        localStorage.setItem(\"GroupInfo\", enscG);\r\n\r\n        let enscC = EncodeString(JSON.stringify(data.Customers[0]));\r\n        localStorage.setItem(\"login\", enscC);\r\n        window.location.href = \"/home\";\r\n      }\r\n      else {\r\n        Alerterror(\"Tài khoản hoặc mật khẩu không đúng\");\r\n      }\r\n    }\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const responseFacebook = async (response) => {\r\n    debugger\r\n    console.log(response);\r\n    if (response.status !== \"unknown\") {\r\n      let pr = {\r\n        SocialID: response.authResponse.userID,\r\n        SocialType: \"Facebook\",\r\n        SocialLoginObj: response\r\n      }\r\n      const params = {\r\n        API_key: APIKey,\r\n        Json: JSON.stringify(pr),\r\n        func: \"APIC_spCustomerSocialLoginV2\",\r\n      };\r\n      const list = await mainAction.API_spCallServer(params, dispatch);\r\n      if (list.length > 0) {\r\n        let ensc = EncodeString(JSON.stringify(list[0]));\r\n        localStorage.setItem(\"login\", ensc);\r\n        window.location.href = \"/home\";\r\n      }\r\n      else {\r\n        if (window.confirm(\"Không có tài khoản nào liên kết với tài khoản facebook của bạn. Đến trang đăng ký\")) {\r\n          let obj = new Object();\r\n          obj.Name = response.profileObj.name;\r\n          obj.Email = response.profileObj.email;\r\n          obj.GoogleId = response.profileObj.googleId;\r\n          obj.FacebookId = \"\";\r\n          obj.profileObj = response.profileObj;\r\n          localStorage.setItem(\"registerSocial\", JSON.stringify(obj));\r\n          window.location.href = \"/register\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const responseGoogle = async (response) => {\r\n    const params = {\r\n      API_key: APIKey,\r\n      Json: JSON.stringify({\r\n        GoogleId: response.profileObj.googleId,\r\n        SocialLoginObj: response.profileObj\r\n      }),\r\n      func: \"APIC_spCustomerSocialLoginV2\",\r\n    };\r\n\r\n    const list = await mainAction.API_spCallServer(params, dispatch);\r\n\r\n    if (list.length > 0) {\r\n      let ensc = EncodeString(JSON.stringify(list[0]));\r\n      localStorage.setItem(\"login\", ensc);\r\n      window.location.href = \"/home\";\r\n    }\r\n    else {\r\n      if (window.confirm(\"Không có tài khoản nào liên kết với tài khoản google của bạn. Đến trang đăng ký\")) {\r\n        debugger\r\n        let obj = new Object();\r\n        obj.Name = response.profileObj.name;\r\n        obj.Email = response.profileObj.email;\r\n        obj.GoogleId = response.profileObj.googleId;\r\n        obj.FacebookId = \"\";\r\n        obj.profileObj = response.profileObj;\r\n        localStorage.setItem(\"registerSocial\", JSON.stringify(obj));\r\n        window.location.href = \"/register\";\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-login\">\r\n      <div className=\"container container-login\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 text-center mb10\">\r\n            <Img src=\"../../assets/img/LogoNetco.png\" className=\"margin-left-5\" width=\"200\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 hide-sm\">\r\n            <h3 className=\"bold\">\r\n              <span className=\"red\">NETCO</span> CÓ GÌ HOT ?\r\n            </h3>\r\n            <div className=\"row margin-top-10\">\r\n              <div className=\"col-md-12 margin-top-10\">\r\n                <h4 className=\"bold\"> <Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" /> Vận chuyển an toàn </h4>\r\n                <div className=\"italic sm\"> Hàng hóa của khách hàng được bảo đảm an toàn tới tay người nhận </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"> <Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" /> Hỗ trợ tư vấn linh hoạt </h4>\r\n                <div className=\"italic sm\"> Khách hàng luôn được chăm sóc chu đáo - nhiệt tình ở mọi thời điểm </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"> <Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" />{\" \"} Thanh toán dễ dàng </h4>\r\n                <div className=\"italic sm\"> Phương thức thanh toán linh hoạt, tiện lợi mà vẫn giữ được sự an toàn </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"> <Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" /> Vận chuyển đúng giờ </h4>\r\n                <div className=\"italic sm\"> Luôn luôn đúng giờ là một ưu điểm tuyệt vời mà NETCO có được </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h4 className=\"bold\"><Img src=\"/assets/img/tick.png\" className=\"logocustom\" width=\"20\" /> Nhân viên nhiệt tình</h4>\r\n                <div className=\"italic sm\"> Nhân viên giao hàng nhiệt tình, luôn lắng nghe mọi ý kiến từ khách hàng </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h3 className=\"bold mb10\"> ĐĂNG NHẬP </h3>\r\n            <div className=\"form-group mb30\">\r\n              Bạn chưa có tài khoản?\r\n              <Link style={{ color: '#2264D1' }} className='bold' to=\"/register\"> Đăng ký ngay</Link>\r\n            </div>\r\n            <div className=\"form-group width60\">\r\n              <label for=\"exampleEmail\">Email/số điện thoại </label>\r\n              <input type=\"text\" class={\"form-control borradius3 \" + UserActive}\r\n                id=\"exampleEmail\" ref={UsernameRef}\r\n                value={Username} {...bindUserName}\r\n                placeholder='Nhập Email hoặc số điện thoại'\r\n              />\r\n            </div>\r\n            <div className=\"form-group margin-top-20 width60\" >\r\n              <label for=\"examplePass\">Mật khẩu</label>\r\n              <div className=\"input-group\">\r\n                <input type={PassHide} class={\"form-control borradius3 \" + PassActive} id=\"examplePass\"\r\n                  placeholder='Nhập mật khẩu'\r\n                  ref={PasswordRef} value={Password} {...bindPassword} />\r\n                <div className=\"input-group-append\"><span className={\"fa fa-fw fa-eye input-group-text \" + PassEye} onClick={(e) => { setPassHide(PassEye === \"\" ? \"text\" : \"password\"); setPassEye(PassEye === \"\" ? \"fa-eye-slash\" : \"\"); }} ></span></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group width60\" style={{ color: 'grey', marginTop: '-5px' }}>\r\n              <Link className=\"pull-right\" style={{ color: '#3e3838' }} to=\"/forgot\">Quên mật khẩu ?</Link>\r\n            </div>\r\n            <div className=\"form-group text-center margin-top-20 width60\">\r\n              <button type=\"button\" style={{ width: '100%' }} className=\"margin-top-20 btn text-transform btn-sm btn-save\" onClick={onClickLogin}>\r\n                Đăng nhập<div className=\"ripple-container\"></div>\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"gg\">\r\n              {/* <FacebookLogin\r\n                  appId={FACEBOOK_LOGIN_APPID}\r\n                  autoLoad={false}\r\n                  fields=\"name,email,picture\"\r\n                  callback={responseFacebook}\r\n                  icon=\"fa-facebook\"\r\n                  cssClass=\"btn btn-info btnFacebook\"\r\n                  textButton=\"Login with Facebook\"\r\n                /> */}\r\n              <GoogleLogin\r\n                clientId={GOOGLE_LOGIN_CLIENTID}\r\n                buttonText=\"Đăng nhập nhanh với Google\"\r\n                onSuccess={responseGoogle}\r\n                icon=\"fa-google\"\r\n                cssClass=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"italic margin-top-15  mb30\">{LoginMessage}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Services\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\index.js",[],["793","794"],"D:\\ErpNew\\Webcustomer\\src\\Enum\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Main\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\CustomerSenderAddressTypeAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Main\\CustomerAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\LadingTemporaryTypeAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Main\\CustomerTypeAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\LadingTemporaryAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\TimelineTransportTypeAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\TimelineTransportAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\CustomerSenderAddressAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\TestTypeAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\System\\TestAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Hooks\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\RouteVehicleComponent.js",["795","796","797","798","799","800","801"],"import React, { useMemo } from \"react\";\r\nimport { withGoogleMap, withScriptjs } from \"react-google-maps\";\r\n\r\nimport { GoogleMapComponent } from \".\";\r\nimport { GOOGLE_MAP_API_KEY } from \"../../Services\";\r\n\r\nexport const RouteVehicleComponent = () => {\r\n\r\n    const MapWithAMarker = useMemo(() => withScriptjs(withGoogleMap(GoogleMapComponent)), []);\r\n\r\n    return (\r\n        <div className=\"content mapareas\">\r\n            <div className=\"container-fluid\">\r\n                <p className=\"text-center\" style={{fontSize:\"12px\"}}>\r\n                <span class=\"mr-5\"><img height=\"20\" src=\"https://raw.githubusercontent.com/Concept211/Google-Maps-Markers/master/images/marker_blue.png\" /> Vị trí đơn hàng</span>\r\n                    <span class=\"mr-5\" style={{whiteSpace:\"nowrap\"}}><img height=\"20\" src=\"https://raw.githubusercontent.com/Concept211/Google-Maps-Markers/master/images/marker_grey.png\" /> Điểm xe đã đi qua</span>\r\n                    <span class=\"mr-5\" style={{whiteSpace:\"nowrap\"}}><img height=\"20\" src=\"https://raw.githubusercontent.com/Concept211/Google-Maps-Markers/master/images/marker_green.png\" /> Điểm xe sắp đi tới</span>\r\n                    <span class=\"mr-5\" style={{whiteSpace:\"nowrap\"}}><img height=\"20\" src=\"https://raw.githubusercontent.com/Concept211/Google-Maps-Markers/master/images/marker_red.png\" /> Địa điểm giao/lấy hàng của bạn</span>\r\n                    <span class=\"mr-5\" style={{whiteSpace:\"nowrap\"}}><img height=\"20\" src=\"https://raw.githubusercontent.com/Concept211/Google-Maps-Markers/master/images/marker_orange.png\" /> Đã hoàn tất giao/lấy hàng của bạn</span>\r\n                    <span class=\"mr-5\" style={{whiteSpace:\"nowrap\"}}><img height=\"20\" src=\"/assets/img/Vehicle/on180.png\" /> Xe đang di chuyển</span>\r\n                    <span class=\"mr-5\" style={{whiteSpace:\"nowrap\"}}><img height=\"20\" src=\"/assets/img/Vehicle/off180.png\" /> Xe tạm dừng di chuyển</span>\r\n                </p>\r\n                <MapWithAMarker\r\n                    googleMapURL={\"https://maps.googleapis.com/maps/api/js?key=\" + GOOGLE_MAP_API_KEY + \"&v=3.exp&libraries=geometry,drawing,places\"}\r\n                    loadingElement={<div style={{ height: \"calc(100vh - 150px)\" }} />}\r\n                    containerElement={<div style={{ height: \"calc(100vh - 150px)\" }} />}\r\n                    mapElement={<div style={{ height: \"calc(100vh - 150px)\" }} />}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\ForgotPasswordComponent.js",["802"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Alertsuccess, Alerterror } from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { Img } from \"react-image\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { APIKey } from \"../../Services/Api\";\r\n\r\nexport const ForgotPasswordComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [Email, bindEmail, setEmail] = useInput(\"\");\r\n  const EmailRef = useRef();\r\n\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  /* run after render */\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  const APIC_CustomerSendEmailForgot = async () => {\r\n    setDisable(false);\r\n    let pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n    if (Email === \"\") {\r\n      Alerterror(\"Vui lòng nhập Email\");\r\n      return;\r\n    } else if (!pattern.test(Email)) {\r\n      Alerterror(\"Email không đúng định dạng\");\r\n      return;\r\n    }\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      Email: Email,\r\n    };\r\n    const data = await CustomerAction.APIC_CustomerSendEmailForgot(params, dispatch);\r\n    if (data.resultCode === 0) {\r\n      setDisable(true);\r\n      Alertsuccess(data.localMessage);\r\n    }\r\n    else\r\n      Alerterror(data.localMessage);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const HandleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      APIC_CustomerSendEmailForgot();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-login\">\r\n      <div className=\"container container-login\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <Img\r\n              src=\"../../assets/img/LogoNetco.png\"\r\n              className=\"margin-left-5\"\r\n              width=\"200\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h3 className=\"bold text-center\">\r\n              YÊU CẦU THAY ĐỔI MẬT KHẨU\r\n            </h3>\r\n          </div>\r\n          <div className=\"col-md-3\"></div>\r\n        </div>\r\n        <div className=\"row text-center\">\r\n          <div className=\"col-md-12 width60\">\r\n            <label className=\"\">\r\n              Email <span className=\"red\">(*)</span>\r\n            </label>\r\n            <div className=\"col-md-12 text-center\">\r\n              <div className=\"\"><input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                ref={EmailRef}\r\n                value={Email}\r\n                {...bindEmail}\r\n                disabled={disable}\r\n                onKeyDown={(e) => HandleKeyDown(e)}\r\n              /></div>\r\n            </div>\r\n            <div className=\"form-group text-center\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn text-transform btn-sm btn-save\"\r\n                disabled={disable}\r\n                onClick={APIC_CustomerSendEmailForgot}\r\n              >\r\n                Gửi yêu cầu<div className=\"ripple-container\"></div>\r\n              </button>\r\n            </div>\r\n            <div className=\"form-group text-center bold\">\r\n              Đến trang{\" \"}\r\n              <Link className=\"red\" to=\"/login\">\r\n                Đăng nhập\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\CustomerPaymentDealineComponent.js",["803","804","805","806","807","808"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Alerterror,\r\n  FormatDateJson,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\nimport { DataTable } from \"../../Common\";\r\nimport { ExportExcel } from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\n\r\nexport const CustomerPaymentDealineComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [dataA, setdataA] = useState([]);\r\n  const [dataB, setdataB] = useState([]);\r\n  const [dataC, setdataC] = useState([]);\r\n  const [Code, setCode] = useState(\"\");\r\n  const [Monthyear, setMonthyear] = useState(FormatDateJson(new Date(), 2));\r\n  const [TabActive, setTabActive] = useState(1);\r\n  const [ShowTable, setShowTable] = useState(\"display-none\");\r\n  /* run after render */\r\n  useEffect(() => {\r\n    if (CustomerID === null) {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n  const Excell = (key) => {\r\n    if (key === 1) {\r\n      ExportExcel(dataA, \"Hóa đơn quá hạn thanh toán\");\r\n    } else if (key === 2) {\r\n      ExportExcel(dataB, \"Hóa đơn đến hạn thanh toán\");\r\n    } else {\r\n      ExportExcel(dataC, \"Hóa đơn chưa đến hạn trong tháng\");\r\n    }\r\n  };\r\n  const APIC_spCustomerPaymentDealine_Report = async () => {\r\n    setDisable(false);\r\n    let _month = Monthyear.split('-')[1], _year = Monthyear.split('-')[0];\r\n    let params = {\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      InvoiceCode: Code,\r\n      Month: _month,\r\n      Year: _year\r\n    };\r\n\r\n    try {\r\n      const pr = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spCustomerPaymentDealine_Report_V1\",\r\n      };\r\n      // call redux saga\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      setdataA(data.DataA);\r\n      setdataB(data.DataB);\r\n      setdataC(data.DataC);\r\n      setDisable(true);\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      setDisable(true);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Tên khách hàng\",\r\n      accessor: \"CustomerName\",\r\n    },\r\n    {\r\n      Header: \"Email\",\r\n      accessor: \"Email\",\r\n    },\r\n    {\r\n      Header: \"Chi nhánh\",\r\n      accessor: \"POName\",\r\n    },\r\n    {\r\n      Header: \"Tháng công nợ\",\r\n      accessor: \"Day_Collected\",\r\n    },\r\n    {\r\n      Header: \"Số hóa đơn\",\r\n      accessor: \"InvoiceCode\",\r\n    },\r\n\r\n    {\r\n      Header: \"Hạn thanh toán\",\r\n      accessor: \"Dealine\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12 HomeTitle\"> Báo cáo thời hạn thanh toán</div>\r\n          <div className=\"col-md-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\"></div>\r\n              <div className=\"col-md-3\">\r\n                <label>Chọn tháng</label>\r\n                <div className=\"form-group mt0\">\r\n                  <input type=\"month\" format=\"MM/yyyy\" className=\"form-control borradius3\"\r\n                    onChange={(e) => setMonthyear(e.target.value)}\r\n                    value={Monthyear} defaultValue={Monthyear} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <label>Mã hóa đơn</label>\r\n                <div className=\"form-group mt0\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control borradius3\"\r\n                    minLength=\"0\"\r\n                    maxLength=\"500\"\r\n                    placeholder='Nhập mã hóa đơn'\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"clearfix\"></div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"col-md-12 text-center margin-top-10\">\r\n          <button\r\n            disabled={!disable}\r\n            onClick={() => {\r\n              APIC_spCustomerPaymentDealine_Report();\r\n              setShowTable(\"\");\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-sm text-transform btn-save\"\r\n          >\r\n            <i className=\"material-icons\">search</i> Xem báo cáo\r\n          </button>\r\n        </div>\r\n        <div className={\"col-md-12 text-center cardcus margin-top-20 \" + ShowTable}>\r\n          <ul className=\"nav nav-pills nav-pills-success\" style={{ display: \"inline-flex\" }}>\r\n            <li className=\"nav-item whiteSpace\" onClick={(e) => setTabActive(1)}>\r\n              <a className=\"nav-link active show\" data-toggle=\"tab\" href=\"#link1\">\r\n                Hóa đơn quá hạn thanh toán ({dataA.length})\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item whiteSpace\" onClick={(e) => setTabActive(2)}>\r\n              <a className=\"nav-link\" data-toggle=\"tab\" href=\"#link2\">\r\n                Hóa đơn đến hạn thanh toán ({dataB.length})\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item whiteSpace\" onClick={(e) => setTabActive(3)}>\r\n              <a className=\"nav-link\" data-toggle=\"tab\" href=\"#link3\">\r\n                Hóa đơn chưa đến hạn thanh toán ({dataC.length})\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className={\"tab-content col-md-12 cardcus margin-top-20 \" + ShowTable} id=\"nav-tabContent\">\r\n          <div className={\"tab-pane fade\" + (TabActive === 1 ? \" show active\" : \"\")} id=\"link1\">\r\n            <div className=\"text-right margin-bottom-10\">\r\n              <button type=\"button\" className=\"btn btn-sm text-transform btn-refesh\" onClick={() => { Excell(1); }} >\r\n                <img src=\"../assets/img/iconexcel.png\" className='iconex' /> Xuất Excel\r\n              </button>\r\n            </div>\r\n            <DataTable data={dataA} columns={columns} />\r\n          </div>\r\n          <div className={\"tab-pane fade\" + (TabActive === 2 ? \" show active\" : \"\")} id=\"link2\">\r\n            <div className=\"text-right\">\r\n              <button type=\"button\" className=\"btn btn-sm btn-success\" onClick={() => { Excell(2); }} >\r\n                <img src=\"../assets/img/iconexcel.png\" className='iconex' /> Xuất Excel\r\n              </button>\r\n            </div>\r\n            <DataTable data={dataB} columns={columns} />\r\n          </div>\r\n          <div className={\"tab-pane fade\" + (TabActive === 3 ? \" show active\" : \"\")} id=\"link3\">\r\n            <div className=\"text-right\">\r\n              <button type=\"button\" className=\"btn btn-sm btn-success\" onClick={() => { Excell(3); }} >\r\n                <img src=\"../assets/img/iconexcel.png\" className='iconex' /> Xuất Excel\r\n              </button>\r\n            </div>\r\n            <DataTable data={dataC} columns={columns} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\PaymentReportComponent.js",["809","810","811","812","813","814","815","816","817","818","819","820","821"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  FormatMoney,\r\n  FormatNumber,\r\n  FormatDateJson,\r\n  GetCookie,\r\n  GetCookieGroup\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\n\r\nexport const PaymentReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const history = useHistory();\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const [SelectMonth, setSelectMonth] = useState(FormatDateJson(new Date(), 2));\r\n\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ShowList, setShowList] = useState(\"display-none\");\r\n\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n  }, []);\r\n\r\n  const [NoData, setNoData] = useState(\"display-none\");\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    setDisable(false);\r\n    if (SelectMonth === null) {\r\n      Alerterror(\"Chọn tháng\");\r\n      return false;\r\n    }\r\n    let time = SelectMonth.split('-');\r\n    let params = {\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      Month: parseInt(time[1]),\r\n      Year: parseInt(time[0])\r\n    };\r\n    debugger\r\n    let pr = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spPaymentReportJson\",\r\n      API_key: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n    };\r\n    const data = await mainAction.API_spCallServer(pr, dispatch);\r\n    setReportData(data);\r\n    if (data.length === 0) setNoData(\"\");\r\n    else setNoData(\"display-none\");\r\n    setDisable(true);\r\n    //PaginationTable();\r\n    setShowList(\"\");\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Mã bảng kê\",\r\n      accessor: \"Code\",\r\n    },\r\n    {\r\n      Header: \"Từ ngày\",\r\n      accessor: \"Start_date\",\r\n    },\r\n    {\r\n      Header: \"Đến ngày\",\r\n      accessor: \"End_date\",\r\n    },\r\n    {\r\n      Header: \"Trạng thái\",\r\n      accessor: \"StatusName\",\r\n    },\r\n    {\r\n      Header: \"Ngày tạo\",\r\n      accessor: \"CreateDate\",\r\n    },\r\n    {\r\n      Header: \"Người tạo\",\r\n      accessor: \"CreateByName\",\r\n    },\r\n    {\r\n      Header: \"Ngày chốt\",\r\n      accessor: \"ConfirmDate\",\r\n    },\r\n    {\r\n      Header: \"Người chốt\",\r\n      accessor: \"ConfirmName\",\r\n    },\r\n    {\r\n      Header: \"NV công nợ\",\r\n      accessor: \"OfficerName\",\r\n    },\r\n    {\r\n      Header: \"Tổng vận đơn\",\r\n      accessor: \"NumberLading\",\r\n      Cell: (obj) => (<span>{FormatNumber(obj.value)}</span>)\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"TotalMoney\",\r\n      Cell: (obj) => (<span>{FormatMoney(obj.value)} đ</span>)\r\n    },\r\n    {\r\n      Header: \"Tổng tiền giảm\",\r\n      accessor: \"TotalDiscount\",\r\n      Cell: (obj) => (<span>{FormatMoney(obj.value)} đ</span>)\r\n    },\r\n    {\r\n      Header: \"Tiền phải thu\",\r\n      Cell: ({ row }) => (<span>{FormatMoney(row.TotalMoney - row.TotalDiscount)} đ</span>)\r\n    },\r\n  ];\r\n\r\n  const Excell = () => {\r\n    let dataExcel = ReportData.map((item, index) => {\r\n      return {\r\n        \"Mã bảng kê\" : item.Code,\r\n      \"Từ ngày\" : item.Start_date,\r\n      \"Đến ngày\" : item.End_date,\r\n      \"Trạng thái\" : item.StatusName,\r\n      \"Ngày tạo\" : item.CreateDate,\r\n      \"Người tạo\" : item.CreateByName,\r\n      \"Ngày chốt\" : item.ConfirmDate,\r\n      \"Người chốt\" : item.ConfirmName,\r\n      \"Nhân viên công nợ\" : item.OfficerName,\r\n      \"Tổng số vận đơn\" : FormatNumber(item.NumberLading),\r\n      \"Tổng tiền\" : FormatMoney(item.TotalMoney),\r\n      \"Tổng tiền giảm\" : FormatMoney(item.TotalDiscount),\r\n      \"Tiền phải thu\" : FormatMoney(item.TotalMoney - item.TotalDiscount),\r\n      };\r\n    });\r\n    ExportExcel(dataExcel, \"Bảng kê thanh toán\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12 HomeTitle\">Bảng kê thanh toán</div>\r\n          <form className=\"form-horizontal col-md-12\">\r\n            <div className=\"row\">\r\n              <div className='col-md-4'></div>\r\n              <div className=\"col-md-4\">\r\n                <label className=''>Chọn tháng</label>\r\n                <div className=\"form-group mt0\">\r\n                  <input type=\"month\" className=\"form-control borradius3\" value={SelectMonth} format=\"yyyy-MM\" onChange={(e) => setSelectMonth(e.target.value)} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"col-md-12 text-center margin-top-10\">\r\n          <button\r\n            disabled={!disable}\r\n            onClick={ViewReport}\r\n            type=\"button\"\r\n            className=\"btn btn-sm text-transform btn-save\"\r\n          >\r\n            <i className=\"material-icons\">search</i> Xem báo cáo\r\n          </button>\r\n          <button\r\n            disabled={!disable}\r\n            onClick={() => {\r\n              Excell();\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-sm text-transform btn-refeshno margin-left-10\"\r\n          >\r\n           <img src=\"../assets/img/iconexcel.png\" className='iconex' /> Xuất Excel\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={ShowList + \" col-row cardcus margin-top-20\"}>\r\n        <DataTable data={ReportData} columns={columns} />\r\n        {/* <div className=\"table-responsive\">\r\n              <table id=\"dataTable\" className=\"table text-center\">\r\n                <thead className=\" text-primary\">\r\n                  <tr>\r\n                    <th>Mã bảng kê</th>\r\n                    <th>Từ ngày</th>\r\n                    <th>Đến ngày</th>\r\n                    <th>Trạng thái</th>\r\n                    <th>Ngày tạo</th>\r\n                    <th>Người tạo</th>\r\n                    <th>Ngày chốt</th>\r\n                    <th>Người chốt</th>\r\n                    <th>NV công nợ</th>\r\n                    <th>Tổng vận đơn</th>\r\n                    <th>Tổng tiền</th>\r\n                    <th>Tổng tiền giảm</th>\r\n                    <th>Tiền phải thu</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {ReportData.map((item, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{item.Code}</td>\r\n                        <td>\r\n                          {FormatDate(item.Start_date, \"d-k-y h:m\")}\r\n                        </td>\r\n                        <td>\r\n                          {FormatDate(item.End_date, \"d-k-y h:m\")}\r\n                        </td>\r\n                        <td>\r\n                          {getStatus(item.State, item.StatusInCome)}\r\n                        </td>\r\n                        <td>\r\n                          {FormatDate(item.CreateDate, \"d-k-y h:m\")}\r\n                        </td>\r\n                        <td>{item.CreateByName}</td>\r\n                        <td>\r\n                          {FormatDate(item.ConfirmDate, \"d-k-y h:m\")}\r\n                        </td>\r\n                        <td>{item.ConfirmName}</td>\r\n                        <td>{item.OfficerName}</td>\r\n                        <td>{item.NumberLading}</td>\r\n                        <td>{FormatMoney(item.TotalMoney)}</td>\r\n                        <td>{FormatMoney(item.TotalDiscount)}</td>\r\n                        <td>\r\n                          {FormatMoney(\r\n                            item.TotalMoney - item.TotalDiscount\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                  <tr className={NoData}>\r\n                    <td colSpan=\"13\">Không có dữ liệu</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\ChangePasswordComponent.js",["822","823","824","825"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  ValidPassword,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { APIKey } from \"../../Services/Api\";\r\n\r\nexport const ChangePasswordComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [PasswordOld, bindPasswordOld, setPasswordOld] = useInput(\"\");\r\n  const PasswordOldRef = useRef();\r\n\r\n  const [Password, bindPassword, setPassword] = useInput(\"\");\r\n  const PasswordRef = useRef();\r\n\r\n  const [PasswordConfirm, bindPasswordConfirm, setPasswordConfirm] = useInput(\r\n    \"\"\r\n  );\r\n  const PasswordConfirmRef = useRef();\r\n\r\n  const [passwordReg, setPasswordReg] = useState(\"\");\r\n  const [passwordConfirmReg, setPasswordConfirmReg] = useState(\"\");\r\n  const [ErrorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const [PassHide, setPassHide] = useState(\"password\");\r\n  const [PassEye, setPassEye] = useState(\"\");\r\n  const [PassConfirmHide, setPassConfirmHide] = useState(\"password\");\r\n  const [PassConfirmEye, setPassConfirmEye] = useState(\"\");\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    if (GetCookieGroup(\"IsChooseCustomer\") === \"Fail\")\r\n      window.location.href = \"/home\";\r\n  }, []);\r\n\r\n  const APIC_spCustomerResetPass = async () => {\r\n    debugger;\r\n    setDisable(false);\r\n    if (PasswordOld === \"\") {\r\n      Alerterror(\"Nhập mật khẩu cũ\");\r\n      return;\r\n    } else if (Password === \"\") {\r\n      Alerterror(\"Nhập mật khẩu mới\");\r\n      return;\r\n    } else if (ValidPassword(Password) !== \"\") {\r\n      Alerterror(\"Nhập lại mật khẩu mới\");\r\n      return;\r\n    } else if (ValidPassword(Password) !== \"\") {\r\n      Alerterror(\"Mật khẩu mới không an toàn\");\r\n      return;\r\n    } else if (RegPasswordConfirm(PasswordConfirm) !== \"\") {\r\n      Alerterror(\"Mật khẩu nhập lại không khớp\");\r\n      return;\r\n    } else {\r\n      //Mã hóa mk mới\r\n      let prEnc = {\r\n        Json: Password,\r\n      };\r\n      const keyEnc = await mainAction.EncryptString(prEnc, dispatch);\r\n\r\n      //Đổi mk\r\n      let params = {\r\n        AppAPIKey: APIKey,\r\n        CustomerID: CustomerID,\r\n        Password: keyEnc,\r\n        PasswordOld: PasswordOld,\r\n        Key: null,\r\n      };\r\n      if (CustomerID !== 0) {\r\n        let pr = {\r\n          Json: JSON.stringify(params),\r\n          func: \"APIC_spCustomerResetPass_V2\"\r\n        };\r\n        const data = await mainAction.API_spCallServer(\r\n          pr,\r\n          dispatch\r\n        );\r\n        if (data != []) {\r\n          Alertsuccess(\"Đổi mật khẩu thành công!\");\r\n          localStorage.setItem(\"login\", \"\");\r\n          window.location.href = \"/login\";\r\n        }\r\n        else {\r\n          Alerterror(\"Đổi mật khẩu không thành công\");\r\n          setDisable(false);\r\n        }\r\n      }\r\n    }\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const RegPassword = (e) => {\r\n    setPassword(e);\r\n    if (e === \"\") setErrorMessage(\"Nhập mật khẩu\");\r\n    else {\r\n      let result = ValidPassword(e);\r\n      setPasswordReg(result);\r\n      if (result === \"form-error\")\r\n        setErrorMessage(\r\n          \"Mật khẩu phải có ít nhất 8 kí tự (bao gồm chữ hoa, chữ thường, chữ số, ký tự đặc biệt)\"\r\n        );\r\n      else setErrorMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const RegPasswordConfirm = (e) => {\r\n    setPasswordConfirm(e);\r\n    if (e !== Password) {\r\n      setPasswordConfirmReg(\"form-error\");\r\n      setErrorMessage(\"Mật khẩu nhập lại không khớp\");\r\n      return \"form-error\";\r\n    } else {\r\n      setErrorMessage(\"\");\r\n      setPasswordConfirmReg(\"\");\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const ResetForm = () => {\r\n    setPasswordOld(\"\");\r\n    setPassword(\"\");\r\n    setPasswordConfirm(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row Forminfor\">\r\n          <div className=\"col-md-12 HomeTitle margin-top-20\"> Đổi mật khẩu</div>\r\n          <div className=\"col-md-12 margin-top-10\">\r\n            <form method=\"#\" action=\"#\">\r\n              <div className=\"row  margin-top-10\">\r\n                <label className=\"col-sm-12 font-weight500\">Mật khẩu cũ <span className=\"red\">(*)</span></label>\r\n                <div className=\"col-sm-12\">\r\n                  <input type=\"password\" className=\"form-control borradius3\" placeholder='Nhập mật khẩu cũ' ref={PasswordOldRef} value={PasswordOld} {...bindPasswordOld} />\r\n                </div>\r\n              </div>\r\n              {/*  <div class=\"form-group\">\r\n                <label for=\"examplePass\">Mật khẩu</label>\r\n                <div className=\"input-group\">\r\n                  <input type={PassHide} class={\"form-control \" + PassActive} id=\"examplePass\" ref={PasswordRef} value={Password} {...bindPassword} />\r\n                  <div className=\"input-group-append\"><span class={\"fa fa-fw fa-eye input-group-text \" + PassEye} onClick={(e) => { setPassHide(PassEye === \"\" ? \"text\" : \"password\"); setPassEye(PassEye === \"\" ? \"fa-eye-slash\" : \"\"); }} ></span></div>\r\n                </div>\r\n              </div> */}\r\n              <div className=\"row margin-top-10\">\r\n                <label className=\"col-sm-12 font-weight500\"> Mật khẩu mới <span className=\"red\">(*)</span></label>\r\n                <div className=\"col-sm-12\">\r\n                  <div className=\"input-group\">\r\n                    <input type={PassHide} placeholder='Mật khẩu phải có ít nhất 8 kí tự (bao gồm chữ hoa, chữ thường, chữ số, ký tự đặc biệt)...' className={\"form-control borradius3 \" + passwordReg} ref={PasswordRef} value={Password} {...bindPassword} onChange={(e) => RegPassword(e.target.value)} />\r\n                    <div className=\"input-group-append\"><span className={\"fa fa-fw fa-eye input-group-text \" + PassEye} onClick={(e) => { setPassHide(PassEye === \"\" ? \"text\" : \"password\"); setPassEye(PassEye === \"\" ? \"fa-eye-slash\" : \"\"); }} ></span></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row margin-top-10\">\r\n                <label className=\"col-sm-12 font-weight500\"> Nhập lại mật khẩu <span className=\"red\">(*)</span></label>\r\n                <div className=\"col-sm-12\">\r\n                  <div className=\"input-group\">\r\n                    <input type={PassConfirmHide} placeholder='Nhập lại mật khẩu' className={\"form-control borradius3 \" + passwordConfirmReg} ref={PasswordConfirmRef} value={PasswordConfirm} {...bindPasswordConfirm} onChange={(e) => RegPasswordConfirm(e.target.value)} />\r\n                    <div className=\"input-group-append\"><span className={\"fa fa-fw fa-eye input-group-text \" + PassConfirmEye} onClick={(e) => { setPassConfirmHide(PassConfirmEye === \"\" ? \"text\" : \"password\"); setPassConfirmEye(PassConfirmEye === \"\" ? \"fa-eye-slash\" : \"\"); }} ></span></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row text-center error-message\">\r\n                <div className=\"col-md-12\">{ErrorMessage}</div>\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group text-center\">\r\n          <button type=\"button\" className=\"btn text-transform btn-refeshno btn-sm\" disabled={disable} onClick={ResetForm} >\r\n            <i className=\"material-icons\">undo</i> Hủy\r\n          </button>\r\n          <button type=\"button\" className=\"btn btn-sm text-transform  margin-left-10 btn-save\" disabled={disable} onClick={APIC_spCustomerResetPass} >\r\n            <i className=\"material-icons\">lock</i> Đổi mật khẩu\r\n          </button>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\WareHouseSupplierReportComponent.js",["826","827","828","829","830","831","832","833","834","835"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alerterror,\r\n  FormatDate,\r\n  PaginationTable,\r\n  PaginationTable2,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\n\r\nexport const WareHouseSupplierReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n\r\n  const [ViewList, setViewList] = useState(\"\");\r\n  const [ViewDetailImport, setViewDetailImport] = useState(\"display-none\");\r\n  const [ViewDetailOutput, setViewDetailOutput] = useState(\"display-none\");\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n  const [WareHouseList, setWareHouseList] = useState([{ value: 0, label: \"Chọn kho\" }]);\r\n  const [Parcels, setParcels] = useState([{ value: 0, label: \"Chọn lô\" }]);\r\n  const [SupplierList, setSupplierList] = useState([{ value: 0, label: \"Chọn NCC\" }]);\r\n\r\n  const [WareHouse, setWareHouse] = useState({ value: 0, label: \"Chọn kho\" });\r\n  const [Parcel, setParcel] = useState({ value: 0, label: \"Chọn lô\" });\r\n  const [Supplier, setSupplier] = useState({ value: 0, label: \"Chọn NCC\" });\r\n\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ReportDataDetailImport, setReportDataDetailImport] = useState([]);\r\n  const [ReportDataDetailOutput, setReportDataDetailOutput] = useState([]);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    _Init();\r\n  }, []);\r\n\r\n\r\n  //#region Load Data\r\n\r\n  const changeFromDate = (item) => {\r\n    setFromDate(item);\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    setToDate(item);\r\n  };\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n    };\r\n    let pr = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_List_V1\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(pr, dispatch);\r\n\r\n    let _wareHouseList = [{ value: 0, label: \"Chọn kho\" }];\r\n    setWareHouse({ value: 0, label: \"Chọn kho\" });\r\n    data.forEach((element, index) => {\r\n      let option = { value: element.WareHouseId, label: element.WareHouseName };\r\n      _wareHouseList.push(option);\r\n    });\r\n    setWareHouseList(_wareHouseList);\r\n\r\n    let prList = {\r\n      Json: JSON.stringify({\r\n        Id: 0, CreateId: 0\r\n      }),\r\n      func: \"WH_spSupplier_List\",\r\n    };\r\n    const dataSupplier = await mainAction.API_spCallServer(prList, dispatch);\r\n    let _supplierList = [{ value: 0, label: \"Chọn NCC\" }];\r\n    setSupplier({ value: 0, label: \"Chọn NCC\" });\r\n    dataSupplier.forEach((element, index) => {\r\n      let option = { value: element.Id, label: element.SupplierName };\r\n      _supplierList.push(option);\r\n    });\r\n    setSupplierList(_supplierList);\r\n\r\n    setDisable(true);\r\n  };\r\n\r\n  const onChangeWareHouseList = async (item) => {\r\n    setDisable(false);\r\n    setWareHouse(item);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WhId: item.value,\r\n    };\r\n    \r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_Area_List_V1\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n\r\n    let _parcelList = [{ value: 0, label: \"Chọn lô\" }];\r\n    setParcel({ value: 0, label: \"Chọn lô\" });\r\n    data.forEach((element, index) => {\r\n      let option = {\r\n        value: element.WareHouseAreaId,\r\n        label: element.WareHouseAreaName,\r\n      };\r\n      _parcelList.push(option);\r\n    });\r\n    setParcels(_parcelList);\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onChangeParcel = async (item) => {\r\n    setDisable(false);\r\n    setParcel(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  const onChangeSuppliers = async (item) => {\r\n    setDisable(false);\r\n    setSupplier(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  //#endregion\r\n\r\n  //#region Danh sách\r\n\r\n  const ViewReport = async () => {\r\n    let params = {\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WareHouseId: WareHouse.value,\r\n      WareHouseAreaId: Parcel.value,\r\n      FromDate: FromDate.toISOString(),\r\n      Todate: ToDate.toISOString(),\r\n      SupplierId: Supplier.value\r\n    };\r\n\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_InventorySupplier_Report\",\r\n    };\r\n    debugger\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n    debugger\r\n    setReportData(data);\r\n    setReportDataDetailImport([]);\r\n    setReportDataDetailOutput([]);\r\n    //PaginationTable();\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  //#endregion\r\n\r\n  //#region Chi tiết nhập\r\n\r\n  const ViewReportDetailImport = async (item) => {\r\n    let params = {\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WareHouseId: WareHouse.value,\r\n      WareHouseAreaId: Parcel.value,\r\n      FromDate: FromDate.toISOString(),\r\n      Todate: ToDate.toISOString(),\r\n      SupplierId: item.Id\r\n    };\r\n\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_ImportSupplierDetail_Report\",\r\n    };\r\n    debugger\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n    debugger\r\n    setReportDataDetailImport(data);\r\n    setViewDetailImport(\"\");\r\n    setViewList(\"display-none\");\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const columnImportDetails = [\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Mã phiếu\",\r\n      accessor: \"WHWareHouse_ImportCode\",\r\n    },\r\n    {\r\n      Header: \"Mã sản phẩm\",\r\n      accessor: \"ProductCode\",\r\n    },\r\n    {\r\n      Header: \"Tên sản phẩm\",\r\n      accessor: \"ProductName\",\r\n    },\r\n    {\r\n      Header: \"Mã PO\",\r\n      accessor: \"POCode\",\r\n    },\r\n    {\r\n      Header: \"Số lượng\",\r\n      accessor: \"PackageNumber\",\r\n    },\r\n    {\r\n      Header: \"Số lượng quy đổi\",\r\n      accessor: \"QuanlityExchange\",\r\n    },\r\n    {\r\n      Header: \"Số pallet\",\r\n      accessor: \"NumberPallet\",\r\n    },\r\n    {\r\n      Header: \"Số s.phẩm/pallet\",\r\n      accessor: \"NumberOnPallet\",\r\n    },\r\n    {\r\n      Header: \"Tên màu\",\r\n      accessor: \"ColorName\",\r\n    },\r\n    {\r\n      Header: \"Tên kích thước\",\r\n      accessor: \"SizeName\",\r\n    },\r\n    {\r\n      Header: \"Tên đơn vị tính\",\r\n      accessor: \"UnitName\",\r\n    },\r\n  ];\r\n\r\n  const onExportDetailImport=()=>{\r\n    let dataExcel = ReportDataDetailImport.map((item, index) => {\r\n      return {\r\n        \"STT\": (index + 1),\r\n        \"Mã phiếu\": item.WHWareHouse_ImportCode,\r\n        \"Mã sản phẩm\": item.ProductCode,\r\n        \"Tên sản phẩm\": item.ProductName,\r\n        \"Mã PO\": item.POCode,\r\n        \"Số lượng\": item.PackageNumber,\r\n        \"Số lượng quy đổi\": item.QuanlityExchange,\r\n        \"Số pallet\": item.NumberPallet,\r\n        \"Số SP/Pallet\": item.NumberOnPallet,\r\n        \"Tên màu\": item.ColorName,\r\n        \"Kích thước\":item.SizeName,\r\n        \"Đơn vị tính\":item.UnitName\r\n      };\r\n    });\r\n    ExportExcel(dataExcel, \"Chi tiết nhập kho theo ncc\");\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n  //#region Chi tiết xuất\r\n\r\n  const ViewReportDetailOutput = async (item) => {\r\n    let params = {\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WareHouseId: WareHouse.value,\r\n      WareHouseAreaId: Parcel.value,\r\n      FromDate: FromDate.toISOString(),\r\n      Todate: ToDate.toISOString(),\r\n      SupplierId: item.Id\r\n    };\r\n\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_OutputSupplierDetail_Report\",\r\n    };\r\n    debugger\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n    debugger\r\n    setReportDataDetailOutput(data);\r\n    setViewDetailOutput(\"\");\r\n    setViewList(\"display-none\");\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const columnOutputDetails = [\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Mã phiếu\",\r\n      accessor: \"WHWareHouse_OutputCode\",\r\n    },\r\n    {\r\n      Header: \"Mã sản phẩm\",\r\n      accessor: \"ProductCode\",\r\n    },\r\n    {\r\n      Header: \"Tên sản phẩm\",\r\n      accessor: \"ProductName\",\r\n    },\r\n    {\r\n      Header: \"Mã PO\",\r\n      accessor: \"POCode\",\r\n    },\r\n    {\r\n      Header: \"Số lượng\",\r\n      accessor: \"PackageNumber\",\r\n    },\r\n    {\r\n      Header: \"Số lượng quy đổi\",\r\n      accessor: \"QuanlityExchange\",\r\n    },\r\n    {\r\n      Header: \"Số pallet\",\r\n      accessor: \"NumberPallet\",\r\n    },\r\n    {\r\n      Header: \"Số s.phẩm/pallet\",\r\n      accessor: \"NumberOnPallet\",\r\n    },\r\n    {\r\n      Header: \"Tên màu\",\r\n      accessor: \"ColorName\",\r\n    },\r\n    {\r\n      Header: \"Tên kích thước\",\r\n      accessor: \"SizeName\",\r\n    },\r\n    {\r\n      Header: \"Tên đơn vị tính\",\r\n      accessor: \"UnitName\",\r\n    },\r\n  ];\r\n\r\n  const onExportDetailOutput=()=>{\r\n    let dataExcel = ReportDataDetailOutput.map((item, index) => {\r\n      return {\r\n        \"STT\": (index + 1),\r\n        \"Mã phiếu\": item.WHWareHouse_OutputCode,\r\n        \"Mã sản phẩm\": item.ProductCode,\r\n        \"Tên sản phẩm\": item.ProductName,\r\n        \"Mã PO\": item.POCode,\r\n        \"Số lượng\": item.PackageNumber,\r\n        \"Số lượng quy đổi\": item.QuanlityExchange,\r\n        \"Số pallet\": item.NumberPallet,\r\n        \"Số SP/Pallet\": item.NumberOnPallet,\r\n        \"Tên màu\": item.ColorName,\r\n        \"Kích thước\":item.SizeName,\r\n        \"Đơn vị tính\":item.UnitName\r\n      };\r\n    });\r\n    ExportExcel(dataExcel, \"Chi tiết xuất kho theo ncc\");\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Xuất excel\r\n\r\n  const ExportToExcel = () => {\r\n    let dataExcel = ReportData.map((item, index) => {\r\n      return {\r\n        \"STT\": (index + 1),\r\n        \"Mã NCC\": item.ProductCode,\r\n        \"Tên NCC\": item.ProductName,\r\n        \"Mã PO\": item.POCode,\r\n        \"Nhập đầu kỳ\": item.TotalSupplierImport,\r\n        \"Xuất đầu kỳ\": item.TotalSupplierOutput,\r\n        \"Tồn đầu kỳ\": item.TotalInventoryBegin,\r\n        \"Nhập phát sinh\": item.TotalSupplierImportEnd,\r\n        \"Xuất phát sinh\": item.TotalSupplierOutputEnd,\r\n        \"Tồn phát sinh\": item.TotalInventoryEnd,\r\n      };\r\n    });\r\n    ExportExcel(dataExcel, \"Báo cáo tồn kho ncc\");\r\n  };\r\n\r\n  //#endregion\r\n\r\n  let totalImportBegin = 0, totalExportBegin = 0, totalInventoryBegin = 0, totalImport = 0, totalExport = 0, totalInventory = 0\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12\">\r\n            <div className={ViewList + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> BÁO CÁO TỒN KHO THEO NCC\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <label>Từ ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeFromDate}\r\n                          value={FromDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <label>Đến ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeToDate}\r\n                          value={ToDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn kho</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={WareHouse}\r\n                          onChange={onChangeWareHouseList}\r\n                          options={WareHouseList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn lô</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={Parcel}\r\n                          onChange={onChangeParcel}\r\n                          options={Parcels}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <label>Chọn NCC</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={Supplier}\r\n                          onChange={onChangeSuppliers}\r\n                          options={SupplierList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                  <div className=\"col-md-12 text-center\">\r\n                    {/* <button type=\"reset\" className=\"btn btn-default\">\r\n                        <i className=\"material-icons\">undo</i> Hủy\r\n                      </button> */}\r\n                    <button\r\n                      onClick={ViewReport}\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      <i className=\"material-icons\">search</i> Xem báo cáo\r\n                    </button>\r\n                    <button\r\n                      disabled={!disable}\r\n                      type=\"button\"\r\n                      onClick={ExportToExcel}\r\n                      className=\"btn btn-sm text-transform btn-refeshno margin-left-10\"\r\n                    >\r\n                      <img src=\"../assets/img/iconexcel.png\" className='iconex' />\r\n                      Xuất Excel\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                <div className=\"col-md-12\">\r\n                  {ReportData.length > 0 &&\r\n                    <div className=\"table-responsive\">\r\n                      <table id=\"dataTable\" className=\"table\">\r\n                        <thead className=\"text-primary text-center\">\r\n                          <tr>\r\n                            <th rowSpan=\"2\">STT</th>\r\n                            <th rowSpan=\"2\">Tùy chọn</th>\r\n                            <th rowSpan=\"2\">Tên NCC</th>\r\n                            <th rowSpan=\"2\">Mã NCC</th>\r\n                            <th rowSpan=\"2\">Mã PO</th>\r\n                            <th colSpan=\"3\">Đầu kì</th>\r\n                            <th colSpan=\"3\">Cuối kì</th>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Nhập</th>\r\n                            <th>Xuất</th>\r\n                            <th>Tồn</th>\r\n                            <th>Nhập</th>\r\n                            <th>Xuất</th>\r\n                            <th>Tồn</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"text-center\">\r\n                          {ReportData.map((item, index) => {\r\n                            totalImportBegin += item.TotalSupplierImportEnd;\r\n                            totalExportBegin += item.TotalSupplierOutputEnd;\r\n                            totalInventoryBegin += item.TotalInventoryEnd;\r\n                            totalImport += item.TotalSupplierImport;\r\n                            totalExport += item.TotalSupplierOutput;\r\n                            totalInventory += item.TotalInventoryBegin;\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>\r\n                                  <button type=\"button\" onClick={(e) => ViewReportDetailImport(item)} class=\"btn btn-xs btn-success\"><i class=\"fa fa-eye\"></i> Chi tiết nhập</button>\r\n                                  <button type=\"button\" onClick={(e) => ViewReportDetailOutput(item)} class=\"btn btn-xs btn-success\"><i class=\"fa fa-eye\"></i> Chi tiết xuất</button>\r\n                                </td>\r\n                                <td>{item.SupplierName} </td>\r\n                                <td>{item.SupplierCode}</td>\r\n                                <td>{item.POCode}</td>\r\n                                <td>{item.TotalSupplierImport}</td>\r\n                                <td>{item.TotalSupplierOutput}</td>\r\n                                <td>{item.TotalInventoryBegin}</td>\r\n                                <td>{item.TotalSupplierImportEnd}</td>\r\n                                <td>{item.TotalSupplierOutputEnd}</td>\r\n                                <td>{item.TotalInventoryEnd}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                        <tfoot className=\"text-center\">\r\n                          <tr style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"20px\" }}>\r\n                            <td colSpan=\"4\">Tổng cộng</td>\r\n                            <td>{totalImport}</td>\r\n                            <td>{totalExport}</td>\r\n                            <td>{totalInventory}</td>\r\n                            <td>{totalImportBegin}</td>\r\n                            <td>{totalExportBegin}</td>\r\n                            <td>{totalInventoryBegin}</td>\r\n                          </tr>\r\n                        </tfoot>\r\n                      </table>\r\n                      {/*  <DataTable data={ReportData} columns={columns} /> */}\r\n                    </div>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={ViewDetailImport + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> DANH SÁCH CHI TIẾT NHẬP\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <button type=\"button\" class=\"btn btn-default btn-sm\" onClick={(e) => {\r\n                      setViewList(\"\"); setViewDetailImport(\"display-none\");\r\n                    }}><i class=\"fa fa-undo\"></i> Quay lại</button>\r\n                    <button type=\"button\" class=\"btn btn-success btn-sm\" onClick={(e) => {\r\n                      onExportDetailImport();\r\n                    }}><img src=\"../assets/img/iconexcel.png\" className='iconex' /> Xuất excel</button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <DataTable data={ReportDataDetailImport} columns={columnImportDetails} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={ViewDetailOutput + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> DANH SÁCH CHI TIẾT XUẤT\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div class=\"col-md-12 text-center\">\r\n                    <button type=\"button\" class=\"btn btn-default btn-sm\" onClick={(e) => {\r\n                      setViewList(\"\"); setViewDetailOutput(\"display-none\");\r\n                    }}><i class=\"fa fa-undo\"></i>Quay lại</button>\r\n                    <button type=\"button\" class=\"btn btn-success btn-sm\" onClick={(e) => {\r\n                      onExportDetailOutput();\r\n                    }}><img src=\"../assets/img/iconexcel.png\" className='iconex' /> Xuất excel</button>\r\n                  </div>\r\n                  <div className=\"col-md-12\">\r\n                    <DataTable data={ReportDataDetailOutput} columns={columnOutputDetails} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\GoogleMapComponent.js",["836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860"],"import React, { useState, useEffect, useDebugValue } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow, DirectionsRenderer } from \"react-google-maps\";\r\nimport axios from \"axios\";\r\nimport Select from 'react-select';\r\n\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { Alertwarning, FormatDateJson, FormatMoney, GetCookie, FormatNumber } from \"../../Utils\";\r\nimport I18n from \"../../Language\";\r\n\r\nexport const GoogleMapComponent = ({ data = [] }) => {\r\n\r\n  //#region Khai báo biến\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedPark, setSelectedPark] = useState(null);\r\n  const [InfoPosst, setInfoPosst] = useState({});\r\n  const [Direction, setDirection] = useState([]);\r\n\r\n  const [dataGr, setdataGr] = useState([]);\r\n  const [Zoom, setZoom] = useState(5);\r\n  const [Center, setCenter] = useState({ lat: 16.45545209151914, lng: 107.55564680631976 })\r\n  const [TotalActive, setTotalActive] = useState(0)\r\n  const [TotalNotActive, setTotalNotActive] = useState(0)\r\n  const [dataBill, setDataBill] = useState([]);\r\n  const [dataFilter, setDataFilter] = useState([]);\r\n  const [Filter, setFilter] = useState({ value: 0, label: 'Tất cả' })\r\n  const [dataVehicle, setDataVehicle] = useState([])\r\n  const [dataSearch, setDataSearch] = useState([])\r\n  const [hindSearch, setHindSearch] = useState(true)\r\n  const [valueInput, setValueInput] = useState('');\r\n  const [isFocus, setIsFocus] = useState(null);\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n  const [DataRoute, setDataRoute] = useState([]);\r\n  const [DataPostOffice, setDataPostOffice] = useState([])\r\n  const [InforVehicle, setInforVehicle] = useState({});\r\n  const [FromLocation, setFromLocation] = useState();\r\n  const [ShowRoute, setShowRoute] = useState(false);\r\n\r\n  //#endregion\r\n\r\n  //#region  Call API adsun khi moi vao\r\n\r\n  useEffect(() => {\r\n    CPN_spType_Local();\r\n    //CPN_spRouterPostOffice_List();\r\n    CPN_Vehicle_Adsun_List();\r\n    APIC_spVehicle_List();\r\n    let today = new Date();\r\n    let lastDay = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 1);\r\n    setFromDate(new Date(FromDate));\r\n    CPN_spRouteVehicle_List_Update(lastDay);\r\n\r\n    FilterVehicle(Filter);\r\n    setInterval(CPN_Vehicle_Adsun_List, 5000);\r\n    setInterval(APIC_spVehicle_List, 5000);\r\n  }, []);\r\n\r\n  //#endregion\r\n\r\n  //#region  Call API adsun lấy danh sách xe netco\r\n\r\n  const CPN_Vehicle_Adsun_List = async () => {\r\n    let instance = axios.create({\r\n      baseURL: `https://shareapi.adsun.vn/Vehicle/GpsInfo?pageId=3304&username=netco&pwd=123456`,\r\n      timeout: 30000,\r\n    });\r\n\r\n    let res = await instance.get();\r\n    let newData1 = [], newData2 = []\r\n    res.data.Data.sort((a, b) => a.Id > b.Id ? 1 : -1).filter(i => {\r\n      !i.IsStop ? newData1.push(i) : newData2.push(i)\r\n    })\r\n    setdataGr([...newData1, ...newData2])\r\n    setDataVehicle([...newData1, ...newData2])\r\n    setTotalActive(newData1.length)\r\n    setTotalNotActive(newData2.length)\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Call API lấy danh sách xe thuê\r\n\r\n  const [VehicleRent, setVehicleRent] = useState([]);\r\n  const APIC_spVehicle_List = async (row) => {\r\n    try {\r\n      const params = {\r\n        Json: \"{}\",\r\n        func: \"APIC_spVehicle_List\"\r\n      }\r\n      const res = await mainAction.API_spCallServer(params, dispatch);\r\n      setVehicleRent(res);\r\n    } catch (error) {\r\n      Alertwarning(\"Đã có lỗi xảy ra, vui lòng liên hệ IT NETCO\")\r\n      console.log(error);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region Call filter list xe\r\n\r\n  useEffect(() => {\r\n    FilterVehicle(Filter)\r\n  }, [Filter]);\r\n\r\n  //#endregion\r\n\r\n  //#region Load thông tin chi tiết từng xe\r\n\r\n  const [SumAmount, setSumAmount] = useState(0);\r\n  const [CountBill, setCountBill] = useState(0);\r\n\r\n  const CPN_spRouteVehicle_List_Update = async (from) => {\r\n    setdataGr([])\r\n    const pr = {\r\n      FromDate: FormatDateJson(from, 3),\r\n      ToDate: FormatDateJson(ToDate, 4) + ' 11:59 PM',\r\n      AreaId: 0,\r\n      PostId: 0,\r\n      VehicleId: 0,\r\n      CustomerId: GetCookie(\"CustomerID\")\r\n    }\r\n    try {\r\n      const params = {\r\n        Json: JSON.stringify(pr),\r\n        func: \"APIC_spRouteVehicle_List_Update\"\r\n      }\r\n      const res = await mainAction.API_spCallServer(params, dispatch);\r\n      if (res.length > 0) {\r\n        let _countBill = 0, _sumAmount = 0;\r\n        let newData = res.map(i => {\r\n          _countBill += i.TotalBillCreate;\r\n          _sumAmount += i.TotalAmountCreate;\r\n          return {\r\n            ...i,\r\n            TotalWeight: Math.round(i.TotalKGCreate) || 0,\r\n            TotalKG: Math.round(i.TotalKGCreate) || 0,\r\n            RemainKG: (i.WeightVehicle - Math.round(i.TotalKGCreate)),\r\n            Amount: i.TotalAmountCreate?.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\") || 0,\r\n            TotalBill: i.TotalBillCreate,\r\n            plate: i.LicensePlate\r\n          }\r\n        });\r\n        setSumAmount(_sumAmount);\r\n        setCountBill(_countBill);\r\n        setDataBill(newData);\r\n        return;\r\n      }\r\n      return\r\n\r\n    } catch (error) {\r\n      Alertwarning(\"Đã có lỗi xảy ra, vui lòng liên hệ IT NETCO\")\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region get lo trinh\r\n\r\n  const CPN_spRouteVehicle_List = async (row) => {\r\n    setIsFocus(row.LicensePlate);\r\n    const pr = {\r\n      RouteVehicleId: row.RouteVehicleId,\r\n      CustomerId: GetCookie(\"CustomerID\")\r\n    }\r\n    try {\r\n      const params = {\r\n        Json: JSON.stringify(pr),\r\n        func: \"APIC_spRouteVehicle_List\"\r\n      }\r\n      const res = await mainAction.API_spCallServer(params, dispatch);\r\n      if (res.length > 0) {\r\n        let newData = res.sort((a, b) => a.IsOrderby > b.IsOrderby ? 1 : -1)\r\n        CreateRoute(newData);\r\n        setInforVehicle(row);\r\n        return;\r\n      } else {\r\n        Alertwarning(\"Không có dữ liệu\")\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      Alertwarning(\"Đã có lỗi xảy ra, vui lòng liên hệ IT NETCO\")\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Active bưu cục\r\n\r\n  const CPN_spRouterPostOffice_List = async (row) => {\r\n    try {\r\n      const params = {\r\n        Json: JSON.stringify({\r\n          OfficerId: 128//GetDataFromLogin(\"OfficerID\")\r\n        }),\r\n        func: \"CPN_spRouterPostOffice_List\"\r\n      }\r\n      const result = await mainAction.API_spCallServer(params, dispatch);\r\n      if (result.length > 0) {\r\n        setDataPostOffice(result)\r\n        return;\r\n      } else {\r\n        Alertwarning(\"Không có dữ liệu\")\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      Alertwarning(\"Đã có lỗi xảy ra, vui lòng liên hệ IT NETCO\")\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Create Router || tạo lộ trình\r\n\r\n  const CreateRoute = async (data) => {\r\n\r\n    let destination = {}, origin = {}, arrDirection = [], dataTemp = [...data], getTimeDirections = [];\r\n    //tach neu qua 25 diem\r\n    const resultChunk = ChunkPoints(dataTemp, 23)\r\n    setFromLocation({ lat: +data[0].LatFrom, lng: +data[0].LngFrom })\r\n    //loop chi duong\r\n    for (let indexChunk = 0; indexChunk < resultChunk.length; indexChunk++) {\r\n      const element = resultChunk[indexChunk];\r\n\r\n      //diem dau va diem cuoi\r\n      if (resultChunk.length === 1) {\r\n        data[0].IsReturn ?\r\n          destination = { lat: +data[0].LatFrom, lng: +data[0].LngFrom } :\r\n          destination = { lat: +data[data.length - 1].LatTo, lng: +data[data.length - 1].LngTo };\r\n        origin = { lat: +data[0].LatFrom, lng: +data[0].LngFrom }\r\n      } else {\r\n\r\n        if (indexChunk + 1 === resultChunk.length) {\r\n          data[0].IsReturn ?\r\n            destination = { lat: +data[0].LatFrom, lng: +data[0].LngFrom } :\r\n            destination = { lat: +element[element.length - 1].LatTo, lng: +element[element.length - 1].LngTo };\r\n          origin = { lat: +element[0].LatFrom, lng: +element[0].LngFrom }\r\n\r\n        } else {\r\n          destination = { lat: +element[element.length - 1].LatTo, lng: +element[element.length - 1].LngTo };\r\n          origin = indexChunk === 0\r\n            ? { lat: +data[0].LatFrom, lng: +data[0].LngFrom }\r\n            : { lat: +element[0].LatFrom, lng: +element[0].LngFrom }\r\n        }\r\n      }\r\n\r\n      const poinst = element.map(i => {\r\n        return { location: { lat: +i.LatTo, lng: +i.LngTo }, stopover: true }\r\n      })\r\n\r\n      const DirectionsService = new window.google.maps.DirectionsService();\r\n\r\n      await DirectionsService.route(\r\n        {\r\n          origin: origin,\r\n          destination: destination,\r\n          travelMode: window.google.maps.TravelMode.DRIVING,\r\n          waypoints: poinst\r\n        },\r\n        (result, status) => {\r\n          if (status === window.google.maps.DirectionsStatus.OK) {\r\n\r\n            let dataAddDuration = element.map((item, index) => {\r\n              let Distance = (result.routes[0].legs[index].distance.value / 1000).toFixed(2);\r\n              let Duration = +((result.routes[0].legs[index].duration.value / 60).toFixed(2));\r\n              return {\r\n                ...item,\r\n                Distance: Distance,\r\n                Duration: Duration,\r\n              }\r\n            })\r\n\r\n            getTimeDirections.push(...dataAddDuration)\r\n            arrDirection.push(result)\r\n\r\n          } else {\r\n            Alertwarning(\"Lỗi tạo lộ trình, vui lòng thử lại\")\r\n            return;\r\n          }\r\n        }\r\n      );\r\n    }\r\n    setDirection(arrDirection);\r\n    setDataRoute(getTimeDirections);\r\n    setShowRoute(true);\r\n    setZoom(10);\r\n  }\r\n  //#endregion\r\n\r\n  //#region Danh sách chi tiết lộ trình TimeLineList\r\n\r\n  const TimeLineList = () => {\r\n    return (\r\n      <>\r\n        <ul className=\"p-0 ml-1\" style={{ listStyle: 'none', height: 'calc(100vh - 230px)', overflowX: 'hidden', overflowY: \"auto\", backgroundColor: \"#CDE0EA\" }}>\r\n          <li style={{ fontWeight: 500, fontSize: \"13px\", cursor: \"pointer\", boxShadow: \"rgb(153 196 227 / 50%) 2px 4px 10px\", margin: \"10px\", backgroundColor: \"#FFF\", paddingBottom: \"15px\" }}>\r\n            <div className=\"col-10 pt-1 pl-2\">\r\n              <i class=\"fa fa-home mr-2 text-success\"></i>\r\n              <b class=\"text-success \">Xuất phát: </b>\r\n              <b class=\" text-text-dark\" style={DataRoute[0]?.TypeFinish === 1 ? { color: \"grey\" } : { color: \"#000\" }}>{DataRoute[0]?.AddressFromName}</b>\r\n            </div>\r\n          </li>\r\n\r\n          {DataRoute?.map((it, i) => {\r\n            return (\r\n              <li key={\"dts\" + i} style={it.TotalTransportCustomer > 0 || it.TotalPickupCustomer > 0 ? { fontWeight: 500, fontSize: \"13px\", cursor: \"pointer\", boxShadow: \"rgb(153 196 227 / 50%) 2px 4px 10px\", margin: \"10px\", backgroundColor: \"yellow\", paddingBottom: \"15px\" } : { fontWeight: 500, fontSize: \"13px\", cursor: \"pointer\", boxShadow: \"rgb(153 196 227 / 50%) 2px 4px 10px\", margin: \"10px\", backgroundColor: \"#FFF\", paddingBottom: \"15px\" }}>\r\n                <div className=\"col-10 pt-1 pl-2\" title={it.TypeFinish === 1 ? (it.TotalTransportCustomer > 0 || it.TotalPickupCustomer > 0 ? \"Xe đã hoàn tất giao/lấy hàng tại địa điểm của bạn\" : \"Xe đã đi qua điểm này\") : (it.TotalTransportCustomer > 0 || it.TotalPickupCustomer > 0 ? \"Xe sắp đi tới địa điểm giao/lấy hàng của bạn\" : \"Xe sắp đi tới điểm này\")}>\r\n                  <i class=\"fa fa-map-marker mr-1 text-success\"></i>\r\n                  <b class=\"text-success\">{it.IsOrderby}. </b>\r\n                  <b class=\"text-text-dark\" style={it.TypeFinish === 1 ? (it.TotalTransportCustomer > 0 || it.TotalPickupCustomer > 0 ? { color: \"orange\" } : { color: \"grey\" }) : (it.TotalTransportCustomer > 0 || it.TotalPickupCustomer > 0 ? { color: \"red\" } : { color: \"#000\" })}>{it.AddressToName} </b>\r\n                  <i class=\"font-weight-bold text-muted\" style={{ fontSize: '12px' }}> ({it.Distance} KM - {(it.Duration).toFixed(2)} Phút)</i>\r\n                </div>\r\n              </li>\r\n            )\r\n          }\r\n          )}\r\n        </ul>\r\n      </>\r\n    )\r\n\r\n  }\r\n  //#endregion\r\n\r\n  //#region Select Xe\r\n\r\n  const SelectVehicle = (item) => {\r\n    if (!ShowRoute) {\r\n      setSelectedPark(item)\r\n      setCenter({ lat: +item.Lat, lng: +item.Lng })\r\n      setZoom(25);\r\n      setIsFocus(item.Plate)\r\n      return\r\n    } else {\r\n      if (InforVehicle.LicensePlate == item.LicensePlate) {\r\n        setSelectedPark(item)\r\n        setCenter({ lat: +item.Lat, lng: +item.Lng })\r\n        setZoom(25);\r\n        setIsFocus(item.Plate)\r\n      }\r\n      return\r\n\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Xu ly Select Xe\r\n\r\n  const handleChangeSelectVehicle = (e) => {\r\n    setFilter(e)\r\n    FilterVehicle(e)\r\n  }\r\n\r\n  const handleChangeSelectTypeRoute = (e) => {\r\n    setTypeRoute(e);\r\n    //FilterVehicle(e)\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Option Filter Xe\r\n\r\n  const CPN_spType_Local = async () => {\r\n    const listState = [\r\n      { value: 0, label: 'Tất cả' },\r\n      { value: 1, label: 'Di chuyển' },\r\n      { value: 2, label: 'Dừng' }\r\n\r\n    ];\r\n    setDataFilter(listState)\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Filter xe\r\n\r\n  const FilterVehicle = (value) => {\r\n\r\n    let stop = [], run = []\r\n    dataGr.filter(i => {\r\n      i.IsStop ? stop.push(i) : run.push(i)\r\n    })\r\n    if (value.value === 0) {\r\n      setDataVehicle([...dataGr])\r\n      return\r\n    }\r\n    if (value.value === 1) {\r\n      setDataVehicle([...run])\r\n      return\r\n    }\r\n    if (value.value === 2) {\r\n      setDataVehicle([...stop])\r\n      return\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region Xu ly search Xe\r\n\r\n  const hadleChangeSearch = (e) => {\r\n    e.length > 0 ? setHindSearch(false) : setHindSearch(true)\r\n    const dataTemp = [...dataVehicle]\r\n    setValueInput(e)\r\n    const data = dataTemp.filter(i => i.Plate.toLocaleLowerCase().includes(e.toLocaleLowerCase()))\r\n    setDataSearch([...data])\r\n  }\r\n  //#endregion\r\n\r\n  //#region Xu ly click xe tim kiem\r\n\r\n  const handleClickVehicleSearch = (value) => {\r\n    if (value === 1) {\r\n      setFilter({ value: 1, label: 'Di chuyển' })\r\n      return;\r\n    }\r\n    if (value === 2) {\r\n      setFilter({ value: 2, label: 'Dừng' })\r\n      return;\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region Xu ly load danh sach van don\r\n\r\n  const [LadingList, setLadingList] = useState([]);\r\n  const APIC_spVehicle_Lading = async () => {\r\n    try {\r\n      const params = {\r\n        Json: JSON.stringify({ \"CustomerId\": GetCookie(\"CustomerID\") }),\r\n        func: \"APIC_spVehicle_Lading_Test\"\r\n      }\r\n      const res = await mainAction.API_spCallServer(params, dispatch);\r\n      setLadingList(res);\r\n\r\n    } catch (error) {\r\n      Alertwarning(\"Đã có lỗi xảy ra, vui lòng liên hệ IT NETCO\")\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      Cell: ({ row }) =>\r\n        row._original.StatusName === \"Đang Phát\" ? (<span data-toggle=\"modal\" data-target=\"#modalImg\">\r\n          <i className=\"fa fa-map green\" title=\"Xem vị trí đơn hàng\" onClick={e => AddLadingMarker(row)}></i>\r\n        </span>) : (<>{row._original.Status}</>)\r\n      ,\r\n      minWidth: 80,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tình trạng\",\r\n      accessor: \"StatusName\",\r\n      width: 190,\r\n      Cell: (item) => item.value !== \"Đã Phát Thành Công\" ? (<span style={{ background: 'red', color: 'white', padding: '3px 7px', borderRadius: '4px' }}>{item.value}</span>) : (<span style={{ background: '#65B168', color: 'white', padding: '3px 7px', borderRadius: '4px' }}>{item.value}</span>),\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Mã vận đơn\",\r\n      accessor: \"Code\",\r\n      minWidth: 160,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Thời gian gửi\",\r\n      accessor: \"CreateDate\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Ước tính nhận\",\r\n      accessor: \"DealineTime\",\r\n      minWidth: 140,\r\n      Cell: (item) => <span>{FormatDateJson(item.value, 1)}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Người nhận\",\r\n      accessor: \"RecipientName\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tỉnh đi\",\r\n      accessor: \"CitySendCode\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tỉnh đến\",\r\n      accessor: \"CityRecipientCode\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Dịch vụ\",\r\n      accessor: \"ServiceName\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Trọng lượng\",\r\n      accessor: \"Weight\",\r\n      Cell: (item) => <span>{FormatNumber(item.value)} (gram)</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"Amount\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const [ShowLadingMarker, setShowLadingMarker] = useState(false);\r\n  const [ShowLadingInfo, setShowLadingInfo] = useState(false);\r\n  const [LadingMarker, setLadingMarker] = useState({});\r\n  const AddLadingMarker = (item) => {\r\n    debugger\r\n    let a = VehicleRent.find(p => p.VehicleId === item._original.VehicleId);\r\n    let b = dataVehicle.find(p => p.Plate === a.Plate);\r\n    //NẾU Status của Lading = chưa hoàn thành => lấy vị trí theo xe. Đã hoàn thành lộ trình thì lấy vị trí theo vị trí của đơn đó trong lộ trình\r\n    let c = { ...item, ...(b === undefined ? a : b) }\r\n    setLadingMarker(c);\r\n    setCenter({ lat: +b?.Lat, lng: +b?.Lng })\r\n    setZoom(15);\r\n    setShowLadingMarker(true);\r\n    setShowLadingInfo(true);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region Tách số điểm giao nếu vượt quá 25 điểm\r\n  const ChunkPoints = (arrayData, chunk_size) => {\r\n    let results = [];\r\n\r\n    while (arrayData.length) {\r\n      results.push(arrayData.splice(0, chunk_size));\r\n    }\r\n\r\n    return results;\r\n  }\r\n  //#endregion\r\n\r\n  //#region Load Marker, InfoWindow, Direction\r\n\r\n  const MarkerHtml = (\r\n    <>\r\n      {/* Render All POstOffice */}\r\n      {\r\n        !ShowRoute && !selectedPark && DataPostOffice.map((k, i) => {//active post\r\n          return (\r\n            <Marker\r\n              key={i}\r\n              onClick={() => {\r\n                setInfoPosst(k);\r\n              }}\r\n              position={{ lat: +k.Lat, lng: +k.Lng }}\r\n\r\n              icon={{\r\n                url: './assets/img/post.png',\r\n                scaledSize: new window.google.maps.Size(40, 40),\r\n                anchor: { x: 20, y: 20 }\r\n              }}\r\n            />\r\n          )\r\n        })\r\n      }\r\n\r\n      {/* Render All Vehicle */}\r\n      {\r\n        !ShowRoute && dataVehicle.map((address, i) => {\r\n          const data = dataBill.filter(item => item.plate === address.Plate);\r\n          let obj = { ...address, ...data[0] }\r\n          let url = obj.IsStop\r\n            ? `./assets/img/Vehicle/off${(parseInt(obj.Angle / 10, 10) + 1) * 10}.png`\r\n            : `./assets/img/Vehicle/on${(parseInt(obj.Angle / 10, 10) + 1) * 10}.png`\r\n          if (obj.TotalBill > 0) {\r\n            return (\r\n              <Marker\r\n                key={i}\r\n                position={{ lat: obj.Lat, lng: obj.Lng }}\r\n                onClick={() => {\r\n                  setSelectedPark(obj);\r\n                  setIsFocus(obj.Plate)\r\n                }}\r\n                icon={{\r\n                  url: url,\r\n                  scaledSize: new window.google.maps.Size(40, 40),\r\n                  anchor: { x: 20, y: 20 }\r\n                }}\r\n              />\r\n            )\r\n          }\r\n        })\r\n      }\r\n\r\n      {\r\n        !ShowRoute && VehicleRent.map((address, i) => {\r\n          let a = dataVehicle.filter(p => p.Plate === address.Plate);\r\n          if (a.length === 0) {\r\n            const data = dataBill.filter(item => item.plate === address.Plate)\r\n            let obj = { ...address, ...data[0] }\r\n            let url = obj.IsStop\r\n              ? `./assets/img/Vehicle/off${(parseInt(10 / 10, 10) + 1) * 10}.png`\r\n              : `./assets/img/Vehicle/on${(parseInt(10 / 10, 10) + 1) * 10}.png`\r\n            if (obj.TotalBill > 0) {\r\n              return (\r\n                <Marker\r\n                  key={i}\r\n                  position={{ lat: +obj.Lat, lng: +obj.Lng }}\r\n                  onClick={() => {\r\n                    setSelectedPark(obj);\r\n                    setIsFocus(obj.Plate)\r\n                  }}\r\n                  icon={{\r\n                    url: url,\r\n                    scaledSize: new window.google.maps.Size(40, 40),\r\n                    anchor: { x: 20, y: 20 }\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n          }\r\n        })\r\n      }\r\n\r\n      {/*============== Render Route =============*/}\r\n      {\r\n        ShowRoute && DataRoute.length > 0 && <Marker\r\n          position={FromLocation}\r\n          icon={{\r\n            url: `./assets/img/post.png`,\r\n            scaledSize: new window.google.maps.Size(40, 40)\r\n          }}\r\n        />\r\n      }\r\n\r\n      {\r\n        ShowRoute && DataRoute.map((address, i) => {\r\n          let textColor = 'green'\r\n          if (address.TypeFinish === 1 && (address.TotalTransportCustomer > 0 || address.TotalPickupCustomer > 0))\r\n            textColor = 'orange'\r\n          else if (address.TypeFinish === 0 && (address.TotalTransportCustomer > 0 || address.TotalPickupCustomer > 0))\r\n            textColor = 'red';\r\n          else if (address.TypeFinish === 1 && address.TotalTransportCustomer === 0 || address.TotalPickupCustomer === 0)\r\n            textColor = 'grey';\r\n          else\r\n            textColor = 'green'\r\n          return (\r\n            <>\r\n              <Marker\r\n                key={i}\r\n                position={{ lat: +address.LatTo, lng: +address.LngTo }}\r\n                // label={`${i + 1}`}\r\n                icon={{\r\n                  url: `https://raw.githubusercontent.com/Concept211/Google-Maps-Markers/master/images/marker_${textColor}${i + 1}.png`,\r\n                  scaledSize: new window.google.maps.Size(30, 40)\r\n                }}\r\n              />\r\n            </>\r\n          )\r\n        })\r\n      }\r\n\r\n      {ShowRoute && (<Marker\r\n        position={{ lat: +InforVehicle.Lat, lng: +InforVehicle.Lng }}\r\n        onClick={() => {\r\n          setSelectedPark(InforVehicle);\r\n          setIsFocus(InforVehicle.Plate);\r\n        }}\r\n        icon={{\r\n          url: \"./assets/img/Vehicle/on\"+((parseInt(1, 10) + 1) * 10)+\".png\",\r\n          scaledSize: new window.google.maps.Size(40, 40),\r\n          anchor: { x: 20, y: 20 }\r\n        }}\r\n      />\r\n      )}\r\n\r\n      {/* {\r\n        ShowRoute && dataVehicle.map((address, i) => {\r\n          if (address.Plate == InforVehicle.LicensePlate) {\r\n            let obj = { ...address, ...data[0] }\r\n            let url = obj.IsStop\r\n              ? `./assets/img/Vehicle/off${(parseInt((obj.Angle === undefined ? 10 : obj.Angle) / 10, 10) + 1) * 10}.png`\r\n              : `./assets/img/Vehicle/on${(parseInt((obj.Angle === undefined ? 10 : obj.Angle) / 10, 10) + 1) * 10}.png`\r\n\r\n            return (\r\n              <Marker\r\n                key={i}\r\n                position={{ lat: +obj.Lat, lng: +obj.Lng }}\r\n                onClick={() => {\r\n                  setSelectedPark(obj);\r\n                  setIsFocus(obj.Plate)\r\n                }}\r\n                icon={{\r\n                  url: url,\r\n                  scaledSize: new window.google.maps.Size(40, 40),\r\n                  anchor: { x: 20, y: 20 }\r\n                }}\r\n              />\r\n            )\r\n          }\r\n        })\r\n      } */}\r\n\r\n      {\r\n        ShowLadingMarker && LadingMarker !== {} && (\r\n          <Marker\r\n            position={{ lat: +LadingMarker.Lat, lng: +LadingMarker.Lng }}\r\n            onClick={(e) => setShowLadingInfo(true)}\r\n            /* icon={{\r\n              url: './assets/img/Vehicle/box${(parseInt(1, 10) + 1) * 10}.png',\r\n              scaledSize: new window.google.maps.Size(40, 40),\r\n              anchor: { x: 20, y: 20 }\r\n            }} */\r\n            icon={{\r\n              url: `https://raw.githubusercontent.com/Concept211/Google-Maps-Markers/master/images/marker_blue.png`,\r\n              scaledSize: new window.google.maps.Size(30, 40)\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    </>\r\n  )\r\n\r\n  const InfoWindowHtml = (\r\n    <>\r\n\r\n      {!ShowRoute && selectedPark && (\r\n        <InfoWindow\r\n          onCloseClick={() => {\r\n            setSelectedPark(null)\r\n            setIsFocus(null)\r\n          }}\r\n          position={{\r\n            lat: +selectedPark.Lat,\r\n            lng: +selectedPark.Lng\r\n          }}\r\n          clickable={true}\r\n          options={{\r\n            width: '100px'\r\n          }}\r\n        >\r\n          <div className=\"row\" style={{ width: \"300px\", overflow: \"hidden\" }}>\r\n            <div className=\"col-md-12 col-12\">\r\n              <h4 className=\"cl-car\">Thông tin xe</h4>\r\n              <div className=\"row\" style={{ fontSize: '15px' }}>\r\n                <div className=\"col-md-12 col-12\">\r\n                  <p className=\"mb-2\"><span className=\"font-weight-bold\">Xe:</span> {selectedPark?.Plate}  {selectedPark?.IsStop ? \"(Tạm dừng)\" : \"(Đang chạy)\"}</p>\r\n                  {/* <p className=\"mb-2\"><span className=\"font-weight-bold\">Trọng tải:</span> {selectedPark?.SheeatsOrTons}</p>\r\n                  <p className=\"mb-2\"> <span className=\"font-weight-bold\">Vận tốc:</span>  {selectedPark?.Speed} km/h</p>\r\n                  <p className=\"mb-2\"><span className=\"font-weight-bold\">Tổng Km trong ngày:</span>  {selectedPark?.Km} km</p>\r\n */}                </div>\r\n                <div className=\"col-md-12 col-12\">\r\n                  <p className=\"mb-2\"><span className=\"font-weight-bold\">Số lần dừng:</span> {selectedPark?.StopCounter}</p>\r\n                  <p className=\"mb-2\"><span className=\"font-weight-bold\">Tổng thời gian dừng:</span> {selectedPark?.StopTime}</p>\r\n                  <p className=\"mb-2\"><span className=\"font-weight-bold\">Số lần quá tốc độ:</span> {selectedPark?.OverSpeedCount}</p>\r\n                </div>\r\n                <div className=\"col-md-12 col-12\">\r\n                  <p className=\"mb-2\"><span className=\"font-weight-bold\">Địa chỉ hiện tại:</span> {selectedPark?.Address}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-12 col-12 mt-3\">\r\n              <h4 className=\"cl-car\">Thông tin hàng</h4>\r\n              <div className=\"row\" style={{ fontSize: '15px' }}>\r\n                <div className=\"col-md-12 col-12\">\r\n                  <p className=\"mb-2\"><span className=\"font-weight-bold\">Tổng bill:</span> {selectedPark.TotalBill || 0}</p>\r\n                  <p className=\"mb-2\"><span className=\"font-weight-bold\">Hoàn thành:</span> {(selectedPark.BillFinal ?? 0) + '/' + (selectedPark.TotalBill ?? 0)}</p>\r\n                  <p className=\"mb-2\"><span className=\"font-weight-bold\">Đang xử lý:</span>  {(selectedPark.BillProcessing ?? 0) + '/' + (selectedPark.TotalBill ?? 0)}</p>\r\n                  <p className=\"mb-2\"> <span className=\"font-weight-bold\">Cước phí:</span>  {selectedPark.Amount || 0} VND</p>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </InfoWindow>\r\n      )}\r\n\r\n      {/* active post */}\r\n      {/* {InfoPosst && (\r\n        <InfoWindow\r\n          onCloseClick={() => {\r\n            setInfoPosst({ Lat: undefined })\r\n          }}\r\n          position={{\r\n            lat: +InfoPosst?.Lat,\r\n            lng: +InfoPosst?.Lng\r\n          }}\r\n          clickable={true}\r\n          options={{\r\n            maxWidth: '300px'\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-12\">\r\n              <h4 className=\"cl-car\">Thông tin bưu cục</h4>\r\n              <div className=\"row\" style={{ fontSize: '15px' }}>\r\n                <div className=\"col-md-12 col-12\">\r\n                  <p className=\"mb-2\"><span className=\"font-weight-bold\">Tên :</span> {InfoPosst?.POName}</p>\r\n                  <p className=\"mb-2\"><span className=\"font-weight-bold\">SĐT :</span> {InfoPosst?.POPhone}</p>\r\n                  <p className=\"mb-2\"><span className=\"font-weight-bold\">Địa chỉ:</span> {InfoPosst?.POAddress}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </InfoWindow>\r\n      )} */}\r\n\r\n      {\r\n        ShowLadingInfo && LadingMarker !== {} && (\r\n          <InfoWindow\r\n            onCloseClick={(e) => {\r\n              setShowLadingInfo(false);\r\n            }}\r\n            position={{\r\n              lat: +LadingMarker?.Lat,\r\n              lng: +LadingMarker?.Lng\r\n            }}\r\n            clickable={true}\r\n            options={{\r\n              width: '300px'\r\n            }}\r\n          >\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 col-12\">\r\n                <h4 className=\"cl-car\">Thông tin đơn hàng</h4>\r\n                <div className=\"row\" style={{ fontSize: '15px' }}>\r\n                  <div className=\"col-md-12 col-12\">\r\n                    <p className=\"mb-2\"><span className=\"font-weight-bold\">Mã đơn hàng :</span> {LadingMarker?.Code}</p>\r\n                    <p className=\"mb-2\"><span className=\"font-weight-bold\">Trạng thái :</span> {LadingMarker?.StatusName}</p>\r\n                    <p className=\"mb-2\"><span className=\"font-weight-bold\">Biển số xe :</span> {LadingMarker?.Plate}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n\r\n    </>\r\n  )\r\n\r\n  const DirectionHtml = (\r\n    <>\r\n      {Direction && Direction.map((item, index) => {\r\n        return (\r\n          <DirectionsRenderer\r\n            key={index}\r\n            directions={item}\r\n            options={{\r\n              polylineOptions: {\r\n                strokeOpacity: 1,\r\n                strokeColor: '#7C83FD',\r\n                strokeWeight: 4,\r\n              },\r\n              markerOptions: {\r\n                visible: false,\r\n              },\r\n            }}\r\n          />\r\n        )\r\n      })\r\n      }\r\n    </>\r\n  )\r\n\r\n  //#endregion\r\n\r\n  const [typeRoute, setTypeRoute] = useState({ value: \"All\", label: \"Tất cả\" });\r\n  return (\r\n    <>\r\n      <GoogleMap\r\n        defaultZoom={Zoom}\r\n        scrollwheel={true}\r\n        defaultCenter={Center}\r\n        options={{\r\n          mapTypeControl: false,\r\n          mapTypeControlOptions: {\r\n            style: window.google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\r\n            position: window.google.maps.ControlPosition.BOTTOM_RIGHT\r\n          },\r\n          gestureHandling: \"greedy\",\r\n          fullscreenControlOptions: {\r\n            position: window.google.maps.ControlPosition.BOTTOM_RIGHT,    // as long as this is not set it works\r\n          },\r\n\r\n        }}\r\n      >\r\n        {MarkerHtml}\r\n        {InfoWindowHtml}\r\n        {DirectionHtml}\r\n      </GoogleMap>\r\n      {DataRoute.length === 0 &&\r\n        <div className=\"card\" style={{ position: \"absolute\", zIndex: 1, width: \"450px\", marginTop: 0, top: \"120px\" }}>\r\n          <div class=\"card-header\">\r\n            <h5 className=\"mb-0 green bold\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              {I18n.t(\"Vehicle.ListVehicle\")}\r\n              <div className=\"pull-right\"><i className=\"fa fa-plus\"></i></div>\r\n            </h5>\r\n          </div>\r\n          <div className=\"card-body collapse\" id=\"collapseOne\" style={{ height: \"calc(100vh - 200px)\", borderTop: \"2px solid green\" }} aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\r\n            {/* <div className=\"row mb-2\">\r\n              <div className=\"col-md-6 col-6 p-0 d-flex  justify-content-center\">\r\n                <span className=\" text-success \" title=\"Số lượng xe đang hoạt động\" style={{ cursor: 'pointer', fontSize: '20px' }}\r\n                  onClick={e => handleClickVehicleSearch(1)}>\r\n                  <i className=\"fa fa-circle pr-2 \" ></i>\r\n                  <b>{TotalActive}/{TotalActive + TotalNotActive}</b>\r\n                </span>\r\n              </div>\r\n              <div className=\"col-md-6 col-6 p-0 d-flex  justify-content-center\">\r\n                <span className=\" text-danger pl-3\" title=\"Số lượng xe không hoạt động\" style={{ cursor: 'pointer', fontSize: '20px' }}\r\n                  onClick={e => handleClickVehicleSearch(2)}>\r\n                  <i className=\"fa fa-circle pr-2\"></i>\r\n                  <b>{TotalNotActive}/{TotalActive + TotalNotActive}</b>\r\n                </span>\r\n              </div>\r\n            </div> */}\r\n            <div className=\"row mb-2\" data-toggle=\"modal\" data-target=\"#modalImg\">\r\n              <div className=\"col-md-5 col-5 p-0 d-flex  justify-content-center\" onClick={e => APIC_spVehicle_Lading()}>\r\n                Tổng đơn: <b>{CountBill}</b>\r\n              </div>\r\n              <div className=\"col-md-7 col-7 p-0 d-flex  justify-content-center\">\r\n                Tổng cước: <b>{FormatMoney(SumAmount)} VND</b>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4 mb-2\">\r\n                <div className=\"form-group\">\r\n                  <Select className=\"SelectMeno\"\r\n                    value={Filter}\r\n                    onChange={e => handleChangeSelectVehicle(e)}\r\n                    options={[\r\n                      { value: 0, label: 'Tất cả' },\r\n                      { value: 1, label: 'Di chuyển' },\r\n                      { value: 2, label: 'Dừng' }\r\n\r\n                    ]}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-2\">\r\n                <div className=\"form-group\">\r\n                  <Select className=\"SelectMeno\"\r\n                    value={typeRoute}\r\n                    onChange={e => handleChangeSelectTypeRoute(e)}\r\n                    options={[\r\n                      { value: \"All\", label: 'Tất cả' },\r\n                      { value: \"Pickup\", label: 'Điểm lấy' },\r\n                      { value: \"Internal\", label: 'Điểm trung chuyển' },\r\n                      { value: \"Delivery\", label: 'Điểm phát' },\r\n                    ]}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <div className=\"form-group\">\r\n                  <input type=\"text\" name=\"\" className=\"form-control\" id=\"\" value={valueInput} placeholder=\"Tìm kiếm\"\r\n                    onChange={e => hadleChangeSearch(e.target.value)} />\r\n                  <div id=\"div-sender\"\r\n                    className={hindSearch ? \"display-none\" : \"div-sender\"}\r\n                    style={{ maxHeight: 'calc(100vh - 250px)', overflow: 'scroll', border: '1px solid #cccccc' }}\r\n                  >\r\n                    {\r\n                      dataSearch.length > 0\r\n                        ? dataSearch.map((item, index) => {\r\n                          return (\r\n                            <p className=\"select-option-like\" key={index}\r\n                              onClick={e => {\r\n                                SelectVehicle(item)\r\n                                setValueInput(item.Plate)\r\n                                setHindSearch(true)\r\n                              }}>\r\n                              {item.Plate}\r\n                            </p>\r\n                          )\r\n                        })\r\n                        : <p className=\"select-option-like\" >Không có kết quả</p>\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ul className=\"p-0 ml-1\" style={{ listStyle: 'none', height: 'calc(100vh - 330px)', overflowX: 'hidden', backgroundColor: \"#CDE0EA\" }}>\r\n              {\r\n                dataVehicle.map((i, index) => {\r\n                  const data = dataBill.filter(e => e.plate == i.Plate)\r\n                  let item = { ...i, ...data[0] }\r\n                  if (item.TotalBill > 0 && (typeRoute.value === \"All\" || item.TypeRoute === typeRoute.value)) {\r\n                    return (\r\n                      <li key={index + 'asv'} style={isFocus === item.Plate ? { fontSize: \"13px\", cursor: \"pointer\", boxShadow: \"rgb(153 196 227 / 50%) 2px 4px 10px\", margin: \"10px\", backgroundColor: \"#CDF0EA\" } : { fontSize: \"13px\", cursor: \"pointer\", boxShadow: \"rgb(153 196 227 / 50%) 2px 4px 10px\", margin: \"10px\", backgroundColor: \"#FFF\" }}>\r\n                        <div className=\"row pt-2 pb-2\">\r\n                          <div className=\"col-2 p-0 text-center pt-3\" style={{}} onClick={e => SelectVehicle(item)}>\r\n                            {\r\n                              item.IsStop\r\n                                ? <img src=\"./assets/img/vehicle2.png\" alt=\"\" width=\"40px\" />\r\n                                : <img src=\"./assets/img/vehicle.png\" alt=\"\" width=\"40px\" />\r\n                            }\r\n                          </div>\r\n                          <div className=\"col-3 p-0\" style={{}} onClick={e => SelectVehicle(item)}>\r\n                            <div>\r\n                              Xe: <strong className=\"text-info\">{item.plate} ({item.TypeRoute===\"Delivery\"?\"Phát hàng\":(item.TypeRoute===\"Pickup\"?\"Lấy hàng\":\"Trung chuyển\")})</strong>\r\n                            </div>\r\n                            <div>\r\n                              Vận tốc: <strong className=\"cl-car\">{item.Speed} km/h</strong>\r\n                            </div>\r\n                            <div>\r\n                              Tổng km:  <strong className=\"cl-car\">{item.Km} km</strong>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-5 p-0\" style={{}} onClick={e => SelectVehicle(item)}>\r\n                            <div>\r\n                              Trọng tải:  <strong className=\"cl-car\">{item.SheeatsOrTons} </strong>\r\n                            </div>\r\n                            <div>\r\n                              Tổng đơn:  <strong className=\"cl-car\" >{item.TotalBill || 0}</strong>\r\n                            </div>\r\n                            <div>\r\n                              Cước phí:  <strong className=\"cl-car\" >{item.Amount || 0} VND</strong>\r\n                            </div>\r\n                          </div>\r\n                          {\r\n                            item.RouteVehicleId && (!ShowRoute ?\r\n                              (<div className=\"col-2 p-0\" style={{ color: \"green\", fontSize: \"25px\", }} title=\"Xem lộ trình\">\r\n                                <i class=\"material-icons   btn-route rounded-circle\"\r\n                                  style={{ cursor: \"pointer\", padding: \"13px\", borderRadius: \"100%\", backgroundColor: \"#ebf5e5\" }}\r\n                                  onClick={(e) => {\r\n                                    setInforVehicle(item);\r\n                                    CPN_spRouteVehicle_List(item);\r\n                                  }}>insights\r\n                                </i>\r\n                              </div>) :\r\n                              (<div className=\"col-2 p-0\" style={{ color: 'red', fontSize: '25px' }} title=\"Xem lộ trình\">\r\n                                <i className=\"fa fa-times  btn-route-close rounded-circle pr-3 pl-3\"\r\n                                  style={{ cursor: \"pointer\", padding: \"13px\", borderRadius: \"100%\", backgroundColor: \"#ffb8b3\", width: \"50px\" }}\r\n                                  onClick={(e) => {\r\n                                    setShowRoute(!ShowRoute);\r\n                                    setDirection(null);\r\n                                    setZoom(8);\r\n                                  }}\r\n                                ></i>\r\n                              </div>))\r\n                          }\r\n                        </div>\r\n                      </li>\r\n                    )\r\n                  }\r\n                })\r\n              }\r\n              {\r\n                VehicleRent.map((i, index) => {\r\n                  let a = dataVehicle.filter(p => p.Plate == i.Plate);\r\n                  if (a.length === 0) {\r\n                    const data = dataBill.filter(e => e.plate == i.Plate)\r\n                    let item = { ...i, ...data[0] }\r\n                    if (item.TotalBill > 0 && (typeRoute.value === \"All\" || item.TypeRoute === typeRoute.value)) {\r\n                      return (\r\n                        <li key={index + 'asv'} style={isFocus === item.Plate ? { fontSize: \"13px\", cursor: \"pointer\", boxShadow: \"rgb(153 196 227 / 50%) 2px 4px 10px\", margin: \"10px\", backgroundColor: \"#CDF0EA\" } : { fontSize: \"13px\", cursor: \"pointer\", boxShadow: \"rgb(153 196 227 / 50%) 2px 4px 10px\", margin: \"10px\", backgroundColor: \"#FFF\" }}>\r\n                          <div className=\"row pt-2 pb-2\">\r\n                            <div className=\"col-2 p-0 text-center pt-3\" style={{}} onClick={e => SelectVehicle(item)}>\r\n                              {\r\n                                item.IsStop\r\n                                  ? <img src=\"./assets/img/vehicle2.png\" alt=\"\" width=\"40px\" />\r\n                                  : <img src=\"./assets/img/vehicle.png\" alt=\"\" width=\"40px\" />\r\n                              }\r\n                            </div>\r\n                            <div className=\"col-3 p-0\" style={{}} onClick={e => SelectVehicle(item)}>\r\n                              <div>\r\n                                Xe: <strong className=\"text-info\">{item.plate} ({item.TypeRoute===\"Delivery\"?\"Phát hàng\":(item.TypeRoute===\"Pickup\"?\"Lấy hàng\":\"Trung chuyển\")})</strong>\r\n                              </div>\r\n                              <div>\r\n                                Vận tốc: <strong className=\"cl-car\">{item.Speed} km/h</strong>\r\n                              </div>\r\n                              <div>\r\n                                Tổng km:  <strong className=\"cl-car\">{item.Km} km</strong>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-5 p-0\" style={{}} onClick={e => SelectVehicle(item)}>\r\n                              <div>\r\n                                Trọng tải:  <strong className=\"cl-car\">{item.SheeatsOrTons} </strong>\r\n                              </div>\r\n                              <div>\r\n                                Tổng đơn:  <strong className=\"cl-car\" >{item.TotalBill || 0}</strong>\r\n                              </div>\r\n                              <div>\r\n                                Cước phí:  <strong className=\"cl-car\" >{item.Amount || 0} VND</strong>\r\n                              </div>\r\n                            </div>\r\n                            {\r\n                              item.RouteVehicleId && (!ShowRoute ?\r\n                                (<div className=\"col-2 p-0\" style={{ color: \"green\", fontSize: \"25px\", }} title=\"Xem lộ trình\">\r\n                                  <i class=\"material-icons   btn-route rounded-circle\"\r\n                                    style={{ cursor: \"pointer\", padding: \"13px\", borderRadius: \"100%\", backgroundColor: \"#ebf5e5\" }}\r\n                                    onClick={(e) => {\r\n                                      setInforVehicle(item);\r\n                                      CPN_spRouteVehicle_List(item);\r\n                                    }}>insights\r\n                                  </i>\r\n                                </div>) :\r\n                                (<div className=\"col-2 p-0\" style={{ color: 'red', fontSize: '25px' }} title=\"Xem lộ trình\">\r\n                                  <i className=\"fa fa-times  btn-route-close rounded-circle pr-3 pl-3\"\r\n                                    style={{ cursor: \"pointer\", padding: \"13px\", borderRadius: \"100%\", backgroundColor: \"#ffb8b3\", width: \"50px\" }}\r\n                                    onClick={e => {\r\n                                      setShowRoute(!ShowRoute);\r\n                                      setDirection(null);\r\n                                      setZoom(8);\r\n                                    }}\r\n                                  ></i>\r\n                                </div>))\r\n                            }\r\n                          </div>\r\n                        </li>\r\n                      )\r\n                    }\r\n                  }\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>}\r\n\r\n      {DataRoute.length > 0 &&\r\n        <div className={\"card\"} style={{ position: \"absolute\", zIndex: 1, width: \"450px\", marginTop: 0, top: \"120px\" }}>\r\n          <div class=\"card-header\">\r\n            <h5 className=\"mb-0 green bold\">CHI TIẾT LỘ TRÌNH XE <span className='text-danger'>{DataRoute[0].LicensePLate}</span>\r\n              <div class=\"pull-right\">\r\n                <i className=\"fa fa-times  btn-route-close rounded-circle\"\r\n                  style={{ color: \"red\" }}\r\n                  onClick={e => {\r\n                    setDataRoute([]);\r\n                    setShowRoute(!ShowRoute);\r\n                    setDirection(null);\r\n                    setZoom(8);\r\n                  }}\r\n                ></i>\r\n              </div>\r\n            </h5>\r\n          </div>\r\n          <div className=\"card-body\" style={{ height: \"calc(100vh - 200px)\", borderTop: \"2px solid green\", overflow: \"hidden\" }}>\r\n            <TimeLineList />\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      <div class=\"modal fade\" id=\"modalImg\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modalImg\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Danh sách vận đơn có lộ trình lấy/trung chuyển/phát</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body text-center\">\r\n              <DataTable data={LadingList} columns={columns} />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-default btn-sm\" data-dismiss=\"modal\">\r\n                <i className=\"fa fa-close\"></i> Đóng\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\CustomerRecipientComponent.js",["861","862","863","864","865","866","867","868","869","870","871","872"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nimport { SelectCity, SelectDistrict, SelectWard } from \"../../Common\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  PaginationTable,\r\n  ValidPhone,\r\n  GetLatLngGoogle,\r\n  GetCookie,\r\n  GetCookieGroup\r\n} from \"../../Utils\";\r\n\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\n\r\nexport const CustomerRecipientComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n  const [AddressList, setAddressList] = useState([]);\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const [AddressId, setAddressId] = useState(0);\r\n  const [City, setCity] = useState(0);\r\n  const [District, setDistrict] = useState(0);\r\n  const [Ward, setWard] = useState(0);\r\n  const [CityMeno, setCityMeno] = useState(\"\");\r\n  const [DistrictMeno, setDistrictMeno] = useState(\"\");\r\n  const [WardMeno, setWardMeno] = useState(\"\");\r\n\r\n  const [Name, bindName, setName] = useInput(\"\");\r\n  const NameRef = useRef();\r\n\r\n  const [Phone, bindPhone, setPhone] = useInput(\"\");\r\n  const PhoneRef = useRef();\r\n\r\n  const [Street, bindStreet, setStreet] = useInput(\"\");\r\n  const StreetRef = useRef();\r\n\r\n  const [Code, bindCode, setCode] = useInput(\"\");\r\n  const CodeRef = useRef();\r\n\r\n  const [Company, bindCompany, setCompany] = useInput(\"\");\r\n  const CompanyRef = useRef();\r\n\r\n  const [AddressOld, setAddressOld] = useState();\r\n  const [Lat, setLat] = useState(0);\r\n  const [Lng, setLng] = useState(0);\r\n\r\n  const [NoResultMessage, setNoResultMessage] = useState(\r\n    \"Không tìm thấy dữ liệu\"\r\n  );\r\n\r\n  const [ShowForm, setShowForm] = useState(false);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    if (GetCookieGroup(\"IsChooseCustomer\") === \"Fail\")\r\n      window.location.href = \"/home\";\r\n    APIC_spCustomerRecipientLoad();\r\n  }, []);\r\n\r\n  const onChooseProvince = (item) => {\r\n    setCity(item.value);\r\n    setCityMeno(item.label);\r\n    setDistrict(0);\r\n    setDistrictMeno(\"\");\r\n    setWard(0);\r\n    setWardMeno(\"\");\r\n  };\r\n\r\n  const onChooseDistrict = (item) => {\r\n    setDistrict(item.value);\r\n    setDistrictMeno(item.label);\r\n    setWard(0);\r\n    setWardMeno(\"\");\r\n  };\r\n\r\n  const [StreetList, setStreetList] = useState([]);\r\n  const onSelectWard = async (item) => {\r\n    setWard(item.value);\r\n    setWardMeno(item.label);\r\n\r\n    //Gọi api nạp danh sách địa chỉ cho khách lựa chọn\r\n    const params = {\r\n      Json: \"[{\\\"WardId\\\":\\\"\" + item.value + \"\\\"}]\",\r\n      func: \"APIC_spCustomerRecipientGetByLocation\",\r\n      API_key: APIKey,\r\n    };\r\n    // call redux saga\r\n    const result = await mainAction.API_spCallServer(params, dispatch);\r\n    setStreetList(result);\r\n  };\r\n\r\n  const changeStreet = (e) => {\r\n    debugger\r\n    setStreet(e);\r\n    if (e === \"\") {\r\n      setLng(0);\r\n      setLat(0);\r\n    }\r\n    else {\r\n      let check = StreetList.find(p => p.Street.toUpperCase() === e.toUpperCase());\r\n      if (check !== undefined) {\r\n        setLat(check.Lat);\r\n        setLng(check.Lng);\r\n      }\r\n      else {\r\n        setLat(0);\r\n        setLng(0);\r\n      }\r\n    }\r\n  };\r\n\r\n  /* clear data on form when insert success */\r\n\r\n  const APIC_spCustomerRecipientLoad = async () => {\r\n    const params = {\r\n      API_key: APIKey,\r\n      Json: '{\"CustomerId\":' + CustomerID + \"}\",\r\n      func: \"APIC_spCustomerRecipientLoad\",\r\n    };\r\n    // call redux saga\r\n    const data = await mainAction.API_spCallServer(params, dispatch);\r\n    if (data !== null) setNoResultMessage(\"\");\r\n    else setNoResultMessage(\"Không tìm thấy dữ liệu\");\r\n    setAddressList(data);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const Edit = (item) => {\r\n    debugger\r\n    setAddressId(item._original.Id);\r\n    setName(item._original.Name);\r\n    setPhone(item._original.Phone);\r\n    setStreet(item._original.Street);\r\n    setCity(item._original.CityId);\r\n    setDistrict(item._original.DistrictId);\r\n    setWard(item._original.WardId);\r\n    setCityMeno(item._original.City);\r\n    setDistrictMeno(item._original.District);\r\n    setWardMeno(item._original.Ward);\r\n    setCompany(item._original.Company);\r\n    setAddressOld(item._original.Street + \", \" + item._original.Ward + \", \" + item._original.District + \", \" + item._original.City);\r\n    setLat(item._original.Lat);\r\n    setLng(item._original.Lng);\r\n    setShowForm(true);\r\n  }\r\n\r\n  const Delete = async (item) => {\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: CustomerID,\r\n      AddressId: item._original.Id,\r\n    };\r\n    const pr = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spCustomerRecipientRemove_V1\",\r\n    };\r\n    // call redux saga\r\n    const data = await mainAction.API_spCallServer(pr, dispatch);\r\n    if (data.resultCode == 0) {\r\n      setAddressList(AddressList.filter(p => p.Id !== item._original.Id));\r\n      Alertsuccess(data.Message);\r\n    } else Alerterror(data.Message);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const APIC_spCustomerRecipientSave = async () => {\r\n    setDisable(true);\r\n    let GetLat = Lat, GetLng = Lng, Address = Street + \", \" + WardMeno + \", \" + DistrictMeno + \", \" + CityMeno;\r\n    if (Name === \"\")\r\n      Alerterror(\"Nhập họ tên\");\r\n    else if (Phone === \"\")\r\n      Alerterror(\"Nhập số điện thoại\");\r\n    else if (ValidPhone(Phone) === \"form-error\")\r\n      Alerterror(\"Số điện thoại không đúng định dạng !\");\r\n    else if (City === undefined || City == 0)\r\n      Alerterror(\"Chọn tỉnh thành\");\r\n    else if (District === undefined || District == 0)\r\n      Alerterror(\"Chọn quận huyện\");\r\n    else if (Ward === undefined || Ward == 0)\r\n      Alerterror(\"Chọn phường xã\");\r\n    else if (Street === \"\")\r\n      Alerterror(\"Nhập số nhà, đường\");\r\n    else {\r\n      debugger\r\n      if (Lat === 0 || Lng === 0 || Lat === \"\" || Lng === \"\" || Lat === \"0\" || Lng === \"0\"\r\n        || Lat === undefined || Lng === undefined || Lat === null || Lng === null) {\r\n        const res = await GetLatLngGoogle(Address);\r\n        if (res) {\r\n          GetLat = res[0].lat\r\n          GetLng = res[0].lng\r\n        }\r\n      }\r\n\r\n      let params = {\r\n        AppAPIKey: APIKey,\r\n        TokenDevices: TOKEN_DEVICE,\r\n        CustomerID: CustomerID,\r\n        AddressId: AddressId,\r\n        Code: Phone,\r\n        Name: Name,\r\n        Phone: Phone,\r\n        CityId: City,\r\n        City: CityMeno,\r\n        DistrictId: District,\r\n        District: DistrictMeno,\r\n        WardId: Ward,\r\n        Ward: WardMeno,\r\n        Street: Street,\r\n        Company: Company,\r\n        Address:\r\n          Street +\r\n          \", \" +\r\n          WardMeno +\r\n          \", \" +\r\n          DistrictMeno +\r\n          \", \" +\r\n          CityMeno,\r\n        Lat: GetLat,\r\n        Lng: GetLng,\r\n      };\r\n      const pr = {\r\n        API_key: APIKey,\r\n        json: JSON.stringify(params),\r\n        func: \"APIC_spCustomerRecipientSaveJson\",\r\n      };\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      Alertsuccess(data.localMessage);\r\n      APIC_spCustomerRecipientLoad();\r\n      setDisable(false);\r\n      PaginationTable();\r\n      ClearForm();\r\n    }\r\n    setDisable(false);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const [phoneReg, setPhoneReg] = useState(\"\");\r\n  const RegPhone = (e) => {\r\n    debugger;\r\n    setPhone(e);\r\n    if (e !== \"\") {\r\n      let result = ValidPhone(e);\r\n      setPhoneReg(result);\r\n      if (result === \"form-error\")\r\n        Alerterror(\"Số điện thoại không đúng định dạng\");\r\n    }\r\n  };\r\n\r\n  const GoToCreateLading = (item) => {\r\n    let draft = {\r\n      AddressToId: item._original.Id,\r\n      AddressTo: item._original.Address,\r\n      objTo: item._original\r\n    };\r\n    localStorage.setItem(\"LadingDraft\", JSON.stringify(draft));\r\n    debugger\r\n    history.push(\"tao-nhanh-van-don\");\r\n  }\r\n\r\n  const ClearForm = () => {\r\n    setCity(0);\r\n    setDistrict(0);\r\n    setWard(0);\r\n    setCityMeno(\"\");\r\n    setDistrictMeno(\"\");\r\n    setWardMeno(\"\");\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n    setStreet(\"\");\r\n    setCode(\"\");\r\n    setCompany(\"\");\r\n    setAddressOld(\"\");\r\n    setAddressId(0);\r\n    setDisable(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      Cell: ({ row }) => (\r\n        <span>\r\n          <i\r\n            className=\"fa fa-edit green button\"\r\n            onClick={() => GoToCreateLading(row)}\r\n            title=\"Tạo đơn hàng\"\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-cog yellow button\"\r\n            onClick={() => Edit(row)}\r\n            title=\"Sửa\"\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-trash red button\"\r\n            onClick={() =>\r\n              window.confirm(\"Xác nhận xóa địa chỉ ?\") &&\r\n              Delete(row)\r\n            }\r\n            title=\"Xóa\"\r\n          ></i>\r\n        </span>\r\n      ),\r\n      width: 100,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tên\",\r\n      accessor: \"Name\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo tên ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Số điện thoại\",\r\n      accessor: \"Phone\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo số điện thoại ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Địa chỉ\",\r\n      accessor: \"Address\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo địa chỉ ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Công ty\",\r\n      accessor: \"Company\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo công ty ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12 HomeTitle\">Địa chỉ nhận thường xuyên\r\n            <button type=\"button\" className=\"btn btn-refesh text-transform pull-right btn-sm\" onClick={(e) => setShowForm(!ShowForm)}>\r\n              <i className=\"fa fa-plus\"></i> Thêm địa chỉ mới\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md-12 margin-top-20\">\r\n            <div className={\"panel-collapse collapse in cardcus \" + (ShowForm ? \"show\" : \"\")} id=\"collapseOne\">\r\n              <div className=\"margin-top-10\">\r\n                <div className=\"titleNew\">\r\n                  <i className=\"fa fa-edit\"></i> Thêm mới địa chỉ\r\n                </div>\r\n                <div className=\"panel-body margin-top-10\">\r\n                  <form className=\" form-horizontal\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            Họ tên <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control borradius3\"\r\n                            ref={NameRef}\r\n                            value={Name}\r\n                            {...bindName}\r\n                            placeholder='Nhập họ tên'\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            SĐT <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"number\"\r\n                            className={\"form-control borradius3 \" + phoneReg}\r\n                            ref={PhoneRef}\r\n                            value={Phone}\r\n                            {...bindPhone}\r\n                            placeholder='Nhập số điện thoại'\r\n                            min=\"0\"\r\n                            onBlur={(e) => RegPhone(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label>Công ty</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control borradius3\"\r\n                            ref={CompanyRef}\r\n                            value={Company}\r\n                            {...bindCompany}\r\n                            placeholder='Nhập tên công ty'\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"bmd-label-static\">\r\n                            Tỉnh thành <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <SelectCity\r\n                            onActive={City}\r\n                            onSelected={(item) => {\r\n                              onChooseProvince(item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"bmd-label-static\">\r\n                            Quận/huyện <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <SelectDistrict\r\n                            onActive={District}\r\n                            ParentID={City}\r\n                            onSelected={(item) => {\r\n                              onChooseDistrict(item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"bmd-label-static\">\r\n                            Phường/xã <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <SelectWard\r\n                            onActive={Ward}\r\n                            ParentID={District}\r\n                            onSelected={(item) => {\r\n                              onSelectWard(item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12 margin-top-20\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            Số nhà, đường <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            ref={StreetRef}\r\n                            value={Street}\r\n                            {...bindStreet}\r\n                            minLength=\"0\"\r\n                            maxLength=\"500\"\r\n                            placeholder='Nhập số nhà, tên đường'\r\n                            onBlur={(e) => {\r\n                              changeStreet(e.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12 text-center\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn text-transform btn-sm btn-refesh\"\r\n                          onClick={ClearForm}\r\n                        >\r\n                          <i className=\"material-icons\">undo</i> Hủy\r\n                        </button>{\" \"}\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn text-transform btn-sm btn-save\"\r\n                          disabled={disable}\r\n                          onClick={APIC_spCustomerRecipientSave}\r\n                        >\r\n                          <i className=\"material-icons\">create</i> Xác nhận\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"clearfix\"></div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 margin-top-10\">\r\n            <div className=\"\">\r\n              <div className=\"table-responsive\">\r\n                <DataTable data={AddressList} columns={columns} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    </div >\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\WareHousePersoninChargeReportComponent.js",["873","874","875","876","877","878","879","880","881","882","883","884","885","886","887"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alerterror,\r\n  FormatDate,\r\n  PaginationTable,\r\n  PaginationTable2,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\nimport { formatNumber } from \"canvasjs-react-charts/canvasjs.min\";\r\n\r\nexport const WareHousePersoninChargeReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n\r\n  const [ViewList, setViewList] = useState(\"\");\r\n  const [ViewDetailImport, setViewDetailImport] = useState(\"display-none\");\r\n  const [ViewDetailOutput, setViewDetailOutput] = useState(\"display-none\");\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n  const [WareHouseList, setWareHouseList] = useState([{ value: 0, label: \"Chọn kho\" }]);\r\n  const [Parcels, setParcels] = useState([{ value: 0, label: \"Chọn lô\" }]);\r\n  const [SupplierList, setSupplierList] = useState([{ value: 0, label: \"Chọn NPT\" }]);\r\n\r\n  const [WareHouse, setWareHouse] = useState({ value: 0, label: \"Chọn kho\" });\r\n  const [Parcel, setParcel] = useState({ value: 0, label: \"Chọn lô\" });\r\n  const [Supplier, setSupplier] = useState({ value: 0, label: \"Chọn NPT\" });\r\n\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ReportDataDetailImport, setReportDataDetailImport] = useState([]);\r\n  const [ReportDataDetailOutput, setReportDataDetailOutput] = useState([]);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    _Init();\r\n  }, []);\r\n\r\n\r\n  //#region Load Data\r\n\r\n  const changeFromDate = (item) => {\r\n    setFromDate(item);\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    setToDate(item);\r\n  };\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n    };\r\n    let pr = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_List_V1\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(pr, dispatch);\r\n\r\n    let _wareHouseList = [{ value: 0, label: \"Chọn kho\" }];\r\n    setWareHouse({ value: 0, label: \"Chọn kho\" });\r\n    data.forEach((element, index) => {\r\n      let option = { value: element.WareHouseId, label: element.WareHouseName };\r\n      _wareHouseList.push(option);\r\n    });\r\n    setWareHouseList(_wareHouseList);\r\n\r\n    let prList = {\r\n      Json: JSON.stringify({\r\n        Id: 0, CreateId: 0\r\n      }),\r\n      func: \"WH_spPersoninCharge_List\",\r\n    };\r\n    debugger\r\n    const dataSupplier = await mainAction.API_spCallServer(prList, dispatch);\r\n    let _supplierList = [{ value: 0, label: \"Chọn NPT\" }];\r\n    setSupplier({ value: 0, label: \"Chọn NPT\" });\r\n    debugger\r\n    dataSupplier.forEach((element, index) => {\r\n      let option = { value: element.Id, label: element.Name };\r\n      _supplierList.push(option);\r\n    });\r\n    setSupplierList(_supplierList);\r\n\r\n    setDisable(true);\r\n  };\r\n\r\n  const onChangeWareHouseList = async (item) => {\r\n    setDisable(false);\r\n    setWareHouse(item);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WhId: item.value,\r\n    };\r\n    \r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_Area_List_V1\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n\r\n    let _parcelList = [{ value: 0, label: \"Chọn lô\" }];\r\n    setParcel({ value: 0, label: \"Chọn lô\" });\r\n    data.forEach((element, index) => {\r\n      let option = {\r\n        value: element.WareHouseAreaId,\r\n        label: element.WareHouseAreaName,\r\n      };\r\n      _parcelList.push(option);\r\n    });\r\n    setParcels(_parcelList);\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onChangeParcel = async (item) => {\r\n    setDisable(false);\r\n    setParcel(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  const onChangeSuppliers = async (item) => {\r\n    setDisable(false);\r\n    setSupplier(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  //#endregion\r\n\r\n  //#region Danh sách\r\n\r\n  const ViewReport = async () => {\r\n    let params = {\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WareHouseId: WareHouse.value,\r\n      WareHouseAreaId: Parcel.value,\r\n      FromDate: FromDate.toISOString(),\r\n      Todate: ToDate.toISOString(),\r\n      SupplierId: Supplier.value\r\n    };\r\n\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_InventoryPersoninCharge_Report\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n    setReportData(data);\r\n    setReportDataDetailImport([]);\r\n    setReportDataDetailOutput([]);\r\n    PaginationTable();\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  //#endregion\r\n\r\n  //#region Xuất excel\r\n\r\n  const ExportToExcel = () => {\r\n    let dataExcel = ReportData.map((item, index) => {\r\n      return {\r\n        \"STT\": (index + 1),\r\n        \"Mã NPT\": item.Code,\r\n        \"Tên NPT\": item.Name,\r\n        \"Mã PO\": item.POCode,\r\n        \"Mã sản phẩm\":item.ProductCode,\r\n        \"Tên sản phẩm\":item.ProductName,\r\n        \"Ngày nhập\":item.CreateTimeImport,\r\n        \"Ngày xuất\":item.CreateTimeOutput,\r\n        \"Nhập đầu kỳ\": item.TotalSupplierImport,\r\n        \"Xuất đầu kỳ\": item.TotalSupplierOutput,\r\n        \"Tồn đầu kỳ\": item.TotalInventoryBegin,\r\n        \"Nhập phát sinh\": item.TotalSupplierImportEnd,\r\n        \"Xuất phát sinh\": item.TotalSupplierOutputEnd,\r\n        \"Tồn phát sinh\": item.TotalInventoryEnd,\r\n      };\r\n    });\r\n    ExportExcel(dataExcel, \"Báo cáo tồn kho theo NPT\");\r\n  };\r\n\r\n  //#endregion\r\n\r\n  let totalImportBegin = 0, totalExportBegin = 0, totalInventoryBegin = 0, totalImport = 0, totalExport = 0, totalInventory = 0\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12\">\r\n            <div className={ViewList + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> BÁO CÁO TỒN KHO THEO NPT\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <label>Từ ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeFromDate}\r\n                          value={FromDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <label>Đến ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeToDate}\r\n                          value={ToDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn kho</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={WareHouse}\r\n                          onChange={onChangeWareHouseList}\r\n                          options={WareHouseList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn lô</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={Parcel}\r\n                          onChange={onChangeParcel}\r\n                          options={Parcels}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <label>Chọn NPT</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={Supplier}\r\n                          onChange={onChangeSuppliers}\r\n                          options={SupplierList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                  <div className=\"col-md-12 text-center\">\r\n                    {/* <button type=\"reset\" className=\"btn btn-default\">\r\n                        <i className=\"material-icons\">undo</i> Hủy\r\n                      </button> */}\r\n                    <button\r\n                      onClick={ViewReport}\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      <i className=\"material-icons\">search</i> Xem báo cáo\r\n                    </button>\r\n                    <button\r\n                      disabled={!disable}\r\n                      type=\"button\"\r\n                      onClick={ExportToExcel}\r\n                      className=\"btn btn-sm text-transform btn-refeshno margin-left-10\"\r\n                    >\r\n                      <img src=\"../assets/img/iconexcel.png\" className='iconex' />\r\n                      Xuất Excel\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                <div className=\"col-md-12\">\r\n                  {ReportData.length > 0 &&\r\n                    <div className=\"table-responsive\">\r\n                      <table id=\"dataTable\" className=\"table\">\r\n                        <thead className=\"text-primary text-center\">\r\n                          <tr>\r\n                            <th rowSpan=\"2\">STT</th>\r\n                            <th rowSpan=\"2\">Tên NPT</th>\r\n                            <th rowSpan=\"2\">Mã NPT</th>\r\n                            <th rowSpan=\"2\">Mã PO</th>\r\n                            <th rowSpan=\"2\">Mã sản phẩm</th>\r\n                            <th rowSpan=\"2\">Tên sản phẩm</th>\r\n                            <th rowSpan=\"2\">Ngày nhập</th>\r\n                            <th rowSpan=\"2\">Ngày xuất</th>\r\n                            <th colSpan=\"3\">Đầu kì</th>\r\n                            <th colSpan=\"3\">Cuối kì</th>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Nhập</th>\r\n                            <th>Xuất</th>\r\n                            <th>Tồn</th>\r\n                            <th>Nhập</th>\r\n                            <th>Xuất</th>\r\n                            <th>Tồn</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"text-center\">\r\n                          {ReportData.map((item, index) => {\r\n                            totalImportBegin += item.TotalSupplierImportEnd;\r\n                            totalExportBegin += item.TotalSupplierOutputEnd;\r\n                            totalInventoryBegin += item.TotalInventoryEnd;\r\n                            totalImport += item.TotalSupplierImport;\r\n                            totalExport += item.TotalSupplierOutput;\r\n                            totalInventory += item.TotalInventoryBegin;\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{item.Name} </td>\r\n                                <td>{item.Code}</td>\r\n                                <td>{item.POCode}</td>\r\n\r\n                                <td>{item.ProductCode} </td>\r\n                                <td>{item.ProductName} </td>\r\n                                <td>{item.CreateTimeImport} </td>\r\n                                <td>{item.CreateTimeOutput} </td>\r\n\r\n                                <td>{item.TotalSupplierImport}</td>\r\n                                <td>{item.TotalSupplierOutput}</td>\r\n                                <td>{item.TotalInventoryBegin}</td>\r\n                                <td>{item.TotalSupplierImportEnd}</td>\r\n                                <td>{item.TotalSupplierOutputEnd}</td>\r\n                                <td>{item.TotalInventoryEnd}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                        <tfoot className=\"text-center\">\r\n                          <tr style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"20px\" }}>\r\n                            <td colSpan=\"8\">Tổng cộng</td>\r\n                            <td>{formatNumber(totalImport)}</td>\r\n                            <td>{formatNumber(totalExport)}</td>\r\n                            <td>{formatNumber(totalInventory)}</td>\r\n                            <td>{formatNumber(totalImportBegin)}</td>\r\n                            <td>{formatNumber(totalExportBegin)}</td>\r\n                            <td>{formatNumber(totalInventoryBegin)}</td>\r\n                          </tr>\r\n                        </tfoot>\r\n                      </table>\r\n                      {/*  <DataTable data={ReportData} columns={columns} /> */}\r\n                    </div>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\WareHouseInventoryReportComponent.js",["888","889","890","891","892","893","894","895","896","897","898"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alerterror,\r\n  FormatDate,\r\n  PaginationTable,\r\n  PaginationTable2,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\n\r\nexport const WareHouseInventoryReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n\r\n  const [ViewList, setViewList] = useState(\"\");\r\n  const [ViewDetail, setViewDetail] = useState(\"display-none\");\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n  const [WareHouseList, setWareHouseList] = useState([{ value: 0, label: \"Chọn kho\" }]);\r\n  const [Parcels, setParcels] = useState([{ value: 0, label: \"Chọn lô\" }]);\r\n  const [WareHouse, setWareHouse] = useState({ value: 0, label: \"Chọn kho\" });\r\n  const [Parcel, setParcel] = useState({ value: 0, label: \"Chọn lô\" });\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ReportDataDetail, setReportDataDetail] = useState([]);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    _Init();\r\n  }, []);\r\n\r\n\r\n  //#region Load Data\r\n\r\n  const changeFromDate = (item) => {\r\n    setFromDate(item);\r\n    /* let _date = new Date(\r\n      item.getFullYear(),\r\n      item.getMonth() + 1,\r\n      item.getDate()\r\n    );\r\n    setToDate(_date); */\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    /* let _date = new Date(item);\r\n    setFromDate(\r\n      new Date(item.getFullYear(), item.getMonth() - 1, item.getDate())\r\n    ); */\r\n    setToDate(item);\r\n  };\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n    };\r\n    let pr = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_List_V1\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(pr, dispatch);\r\n    let _wareHouseList = [{ value: 0, label: \"Chọn kho\" }];\r\n    setWareHouse({ value: 0, label: \"Chọn kho\" });\r\n    data.forEach((element, index) => {\r\n      let option = { value: element.WareHouseId, label: element.WareHouseName };\r\n      _wareHouseList.push(option);\r\n    });\r\n    setWareHouseList(_wareHouseList);\r\n    setDisable(true);\r\n  };\r\n\r\n  const onChangeWareHouseList = async (item) => {\r\n    setDisable(false);\r\n    setWareHouse(item);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WhId: item.value,\r\n    };\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_Area_List_V1\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n    let _parcelList = [{ value: 0, label: \"Chọn lô\" }];\r\n    setParcel({ value: 0, label: \"Chọn lô\" });\r\n    data.forEach((element, index) => {\r\n      let option = {\r\n        value: element.WareHouseAreaId,\r\n        label: element.WareHouseAreaName,\r\n      };\r\n      _parcelList.push(option);\r\n    });\r\n    setParcels(_parcelList);\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onChangeParcel = async (item) => {\r\n    setDisable(false);\r\n    setParcel(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  //#endregion\r\n\r\n  //#region Danh sách\r\n\r\n  const ViewReport = async () => {\r\n    debugger\r\n    let params = {\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WareHouseId: WareHouse.value,\r\n      WareHouseAreaId: Parcel.value,\r\n      FromDate: FromDate.toISOString(),\r\n      ToDate: ToDate.toISOString(),\r\n    };\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spWareHouse_Inventory_Report\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n    debugger\r\n    setReportData(data);\r\n    setReportDataDetail([]);\r\n    //PaginationTable();\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const columns = [\r\n    /* {\r\n      Header: \"Tùy chọn\",\r\n      Cell: ({ row }) => (\r\n        <span>\r\n          <i className=\"fa fa-eye green\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#modalDetail\"\r\n            onClick={() => ViewReportDetail(row)}\r\n            title=\"Chi tiết\"></i>\r\n        </span>\r\n      ),\r\n      minWidth: 80,\r\n      filterable: false,\r\n    }, */\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Mã sản phẩm\",\r\n      accessor: \"ProductCode\",\r\n    },\r\n    {\r\n      Header: \"Tên sản phẩm\",\r\n      accessor: \"ProductName\",\r\n    },\r\n    {\r\n      Header: \"Nhập\",\r\n      accessor: \"TotalProductImport\",\r\n    },\r\n    {\r\n      Header: \"C.Nhập\",\r\n      accessor: \"TotalProductTranportin\",\r\n    },\r\n    {\r\n      Header: \"Xuất\",\r\n      accessor: \"TotalProductOutput\",\r\n    },\r\n    {\r\n      Header: \"C.Xuất\",\r\n      accessor: \"TotalProductTranportOut\",\r\n    },\r\n    {\r\n      Header: \"Tồn\",\r\n      accessor: \"TotalInventory\",\r\n    },\r\n    {\r\n      Header: \"Giá sản phẩm\",\r\n      accessor: \"ProductPrice\",\r\n    },\r\n    {\r\n      Header: \"Trọng lượng\",\r\n      accessor: \"QuanlityExchange\",\r\n    },\r\n    {\r\n      Header: \"Size\",\r\n      accessor: \"SizeName\",\r\n    },\r\n    {\r\n      Header: \"Màu\",\r\n      accessor: \"ColorName\",\r\n    },\r\n    {\r\n      Header: \"Đơn vị tính\",\r\n      accessor: \"UnitName\",\r\n    },\r\n  ];\r\n\r\n  //#endregion\r\n\r\n  //#region Chi tiết\r\n\r\n  const ViewReportDetail = async (item) => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: CustomerID, //17478\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WhId: item.WHWareHouse_ImportID,\r\n    };\r\n    let a = JSON.stringify(params);\r\n    const data = await ReportAction.APIC_spWareHouse_Inventory_Report_Detail(\r\n      params,\r\n      dispatch\r\n    );\r\n    setReportDataDetail(JSON.parse(data.data));\r\n    PaginationTable2();\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const columnDetails = [\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Mã sản phẩm\",\r\n      accessor: \"ProductCode\",\r\n    },\r\n    {\r\n      Header: \"Tên sản phẩm\",\r\n      accessor: \"ProductName\",\r\n    },\r\n    {\r\n      Header: \"Số lượng nhập\",\r\n      accessor: \"PackageNumber\",\r\n    },\r\n    {\r\n      Header: \"Gía sản phẩm\",\r\n      accessor: \"ProductPrice\",\r\n    },\r\n    {\r\n      Header: \"Tên màu\",\r\n      accessor: \"ColorName\",\r\n    },\r\n    {\r\n      Header: \"Tên kích thước\",\r\n      accessor: \"SizeName\",\r\n    },\r\n    {\r\n      Header: \"Tên đơn vị tính\",\r\n      accessor: \"UnitName\",\r\n    },\r\n  ];\r\n\r\n  //#endregion\r\n\r\n  //#region Xuất excel\r\n\r\n  const ExportToExcel = () => {\r\n    let dataExcel = ReportData.map((item, index) => {\r\n      return {\r\n        \"STT\": (index + 1),\r\n        \"Mã sản phẩm\": item.ProductCode,\r\n        \"Tên sản phẩm\": item.ProductName,\r\n        \"Mã PO\": item.POCode,\r\n        \"Nhập đầu kỳ\": item.TotalProductImportBegin,\r\n        \"Xuất đầu kỳ\": item.TotalProductOutputBegin,\r\n        \"Tồn đầu kỳ\": item.TotalInventoryBegin,\r\n        \"Nhập phát sinh\": (item.TotalProductImport + \"(\" + item.TotalProductImportExchange + \")\"),\r\n        \"Xuất phát sinh\": (item.TotalProductOutput + \"(\" + item.TotalProductOutputExchange + \")\"),\r\n        \"Tồn phát sinh\": (item.TotalInventory + \"(\" + item.TotalInventoryExchange + \")\"),\r\n        \"Giá sản phẩm (VND)\": item.ProductPrice,\r\n        \"Trọng lượng (KG)\": item.QuanlityExchange,\r\n        \"Màu\": item.ColorName,\r\n        \"Kích thước\": item.SizeName,\r\n        \"Đơn vị tính\": item.UnitName,\r\n        \"Tổng Pallet\": item.NumberPallet,\r\n        \"Tổng M2 Pallet\": item.NumberPalletM2,\r\n      };\r\n    });\r\n    ExportExcel(dataExcel, \"Báo cáo tồn kho \");\r\n  };\r\n\r\n  //#endregion\r\n\r\n  let totalImportBegin = 0, totalExportBegin = 0, totalInventoryBegin = 0, totalImport = 0, totalExport = 0, totalInventory = 0\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12\">\r\n            <div className={ViewList + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> BÁO CÁO TỒN KHO\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                      <label>Từ ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeFromDate}\r\n                          value={FromDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Đến ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeToDate}\r\n                          value={ToDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn kho</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={WareHouse}\r\n                          onChange={onChangeWareHouseList}\r\n                          options={WareHouseList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn lô</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={Parcel}\r\n                          onChange={onChangeParcel}\r\n                          options={Parcels}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                  <div className=\"col-md-12 text-center\">\r\n                    {/* <button type=\"reset\" className=\"btn btn-default\">\r\n                        <i className=\"material-icons\">undo</i> Hủy\r\n                      </button> */}\r\n                    <button\r\n                      disabled={!disable}\r\n                      onClick={ViewReport}\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      <i className=\"material-icons\">search</i> Xem báo cáo\r\n                    </button>\r\n                    <button\r\n                      disabled={!disable}\r\n                      type=\"button\"\r\n                      onClick={ExportToExcel}\r\n                      className=\"btn btn-sm text-transform btn-refeshno margin-left-10\"\r\n                    >\r\n                      <img src=\"../assets/img/iconexcel.png\" className='iconex' />\r\n                      Xuất Excel\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                <div className=\"col-md-12\">\r\n                  {ReportData.length > 0 &&\r\n                    <div className=\"table-responsive\">\r\n                      <table id=\"dataTable\" className=\"table\">\r\n                        <thead className=\"text-primary text-center\">\r\n                          <tr>\r\n                            <th rowSpan=\"2\">STT</th>\r\n                            <th rowSpan=\"2\">Mã sản phẩm</th>\r\n                            <th rowSpan=\"2\">Tên sản phẩm</th>\r\n                            <th rowspan=\"2\">Mã PO</th>\r\n                            <th colSpan=\"3\">Đầu kì</th>\r\n                            <th colSpan=\"3\">Cuối kì</th>\r\n                            <th rowSpan=\"2\">Giá sản phẩm (VND)</th>\r\n                            <th rowSpan=\"2\">Trọng lượng (KG)</th>\r\n                            <th rowSpan=\"2\">Màu</th>\r\n                            <th rowSpan=\"2\">Kích thước</th>\r\n                            <th rowSpan=\"2\">Đơn vị tính</th>\r\n                            <th rowspan=\"2\">Tổng Pallet</th>\r\n                            <th rowspan=\"2\">Tổng M2 Pallet</th>\r\n                          </tr>\r\n                          <tr>\r\n                            <th>Nhập</th>\r\n                            <th>Xuất</th>\r\n                            <th>Tồn</th>\r\n                            <th>Nhập</th>\r\n                            <th>Xuất</th>\r\n                            <th>Tồn</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"text-center\">\r\n                          {ReportData.map((item, index) => {\r\n                            totalImportBegin += item.TotalProductImportBegin;\r\n                            totalExportBegin += item.TotalProductOutputBegin;\r\n                            totalInventoryBegin += item.TotalInventoryBegin;\r\n                            totalImport += item.TotalProductImport;\r\n                            totalExport += item.TotalProductOutput;\r\n                            totalInventory += item.TotalInventory;\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{item.ProductCode} </td>\r\n                                <td>{item.ProductName}</td>\r\n                                <td>{item.POCode}</td>\r\n                                <td>{item.TotalProductImportBegin}</td>\r\n                                <td>{item.TotalProductOutputBegin}</td>\r\n                                <td>{item.TotalInventoryBegin}</td>\r\n                                <td>{item.TotalProductImport}</td>\r\n                                <td>{item.TotalProductOutput}</td>\r\n                                <td>{item.TotalInventory}</td>\r\n                                <td>{item.ProductPrice}</td>\r\n                                <td>{item.QuanlityExchange}</td>\r\n                                <td>{item.ColorName}</td>\r\n                                <td>{item.SizeName}</td>\r\n                                <td>{item.UnitName}</td>\r\n                                <td>{item.NumberPallet}</td>\r\n                                <td>{item.NumberPalletM2}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                        <tfoot className=\"text-center\">\r\n                          <tr style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"20px\" }}>\r\n                            <td colSpan=\"3\">Tổng cộng</td>\r\n                            <td>{totalImportBegin}</td>\r\n                            <td>{totalExportBegin}</td>\r\n                            <td>{totalInventoryBegin}</td>\r\n                            <td>{totalImport}</td>\r\n                            <td>{totalExport}</td>\r\n                            <td>{totalInventory}</td>\r\n                            <td colSpan=\"8\"></td>\r\n                          </tr>\r\n                        </tfoot>\r\n                      </table>\r\n                      {/*  <DataTable data={ReportData} columns={columns} /> */}\r\n                    </div>\r\n                  }\r\n                </div>\r\n              </div>\r\n              <div className={ViewDetail + \" card\"}>\r\n                <div className=\"card-header card-header-primary\">\r\n                  <h4 className=\"card-title\">\r\n                    <i className=\"material-icons\">bubble_chart</i> CHI TIẾT TỒN\r\n                    KHO\r\n                  </h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <DataTable data={ReportDataDetail} columns={columnDetails} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\OutstandingDebtReportComponent.js",["899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n  FormatMoney,\r\n  FormatDateJson,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nexport const OutstandingDebtReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const history = useHistory();\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [SelectMonth, setSelectMonth] = useState(FormatDateJson(new Date(), 2));\r\n\r\n  const [ReportData, setReportData] = useState({});\r\n  const [TotalDebt, setTotalDebt] = useState(0);\r\n  const [TotalDebtBefore, setTotalDebtBefore] = useState(0);\r\n  const [DebtList, setDebtList] = useState([]);\r\n  const [ShowList, setShowList] = useState(\"display-none\");\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n  }, []);\r\n\r\n  const [ArrMonth, setArrMonth] = useState([\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n  ]);\r\n  const [ArrYear, setArrYear] = useState([\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n  ]);\r\n\r\n  const setListMonth = (month, year) => {\r\n    let arr = [],\r\n      att = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n      if (i - month > 0) {\r\n        arr.push(13 - i + month);\r\n        att.push(year - 1);\r\n      } else {\r\n        arr.push(month + 1 - i);\r\n        att.push(year);\r\n      }\r\n    }\r\n    setArrMonth(arr);\r\n    setArrYear(att);\r\n  };\r\n\r\n  const changeSelectMonth = (item) => {\r\n    if (item !== null) {\r\n      setSelectMonth(item);\r\n      setDisable(true);\r\n      setListMonth(item._a[1] + 1, item._a[0]);\r\n    }\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    setDisable(false);\r\n    if (SelectMonth === null) {\r\n      Alerterror(\"Chọn tháng\");\r\n      return false;\r\n    }\r\n    let params = {\r\n      CustomerId: CustomerID,\r\n      ToDate: SelectMonth,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n    };\r\n    const pr = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spOutstandingDebtReport_V1\",\r\n    };\r\n    // call redux saga\r\n    const data = await mainAction.API_spCallServer(pr, dispatch);\r\n    let obj = new Object();\r\n    obj.TotalDebt = 0;\r\n    let _debtList = [],\r\n      _totalDebt = 0,\r\n      _totalDebtBefore = 0;\r\n      data.map((item, index) => {\r\n      if (index === 0) {\r\n        obj.CustomerCode = item.CustomerCode;\r\n        obj.CustomerName = item.CustomerName;\r\n        obj.Adress_CT = item.Adress_CT;\r\n        obj.AddressBill = item.AddressBill;\r\n        obj.Phone = item.Phone;\r\n        obj.CompanyName = item.CompanyName;\r\n        obj.OfficerName = item.OfficerName;\r\n        obj.OfficerNamePostman = item.OfficerNamePostman;\r\n        obj.Tax_Code = item.Tax_Code;\r\n      }\r\n      if (index < 12) {\r\n        _debtList.push({ TotalDebt: item.TotalDebt, MonthBK: item.MonthBK });\r\n      } else {\r\n        _totalDebtBefore += item.TotalDebt;\r\n      }\r\n      _totalDebt += item.TotalDebt;\r\n    });\r\n    setTotalDebtBefore(_totalDebtBefore);\r\n    setDebtList(_debtList);\r\n    setTotalDebt(_totalDebt);\r\n    setReportData(obj);\r\n    setDisable(true);\r\n\r\n    if (data !== []) setShowList(\"\");\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12 HomeTitle\">Báo cáo tồn nợ</div>\r\n          <form className=\"form-horizontal col-md-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\"></div>\r\n              <div className=\"col-md-4\">\r\n                <label>Chọn tháng</label>\r\n                <div className=\"form-group mt0\">\r\n                  <input type=\"month\" className=\"form-control borradius3\" value={SelectMonth} onChange={(e) => setSelectMonth(e.target.value)} />\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n        <div className=\"col-md-12 text-center margin-top-10 \">\r\n          <button\r\n            disabled={!disable}\r\n            onClick={ViewReport}\r\n            type=\"button\"\r\n            className=\"btn btn-sm text-transform btn-save\"\r\n          >\r\n            <i className=\"material-icons\">search</i> Xem báo cáo\r\n          </button>\r\n        </div>\r\n        <div className={ShowList + \" col-md-12 cardcus margin-top-20\"}>\r\n          <div className=\"table-responsive\">\r\n            <table id=\"dataTable\" className=\"table text-center\">\r\n              <thead className=\" text-primary\">\r\n                <tr>\r\n                  <th>Mã KH</th>\r\n                  <th>Tên KH</th>\r\n                  <th>Địa chỉ</th>\r\n                  <th>SĐT</th>\r\n                  <th>Người liên hệ</th>\r\n                  <th>Công nợ</th>\r\n                  <th>Giao dịch</th>\r\n                  <th>Địa chỉ HĐ</th>\r\n                  <th>MST</th>\r\n                  <th>Nợ trước {ArrMonth[11] + \"/\" + ArrYear[11]}</th>\r\n                  <th>Tháng {ArrMonth[11] + \"/\" + ArrYear[11]}</th>\r\n                  <th>Tháng {ArrMonth[10] + \"/\" + ArrYear[10]}</th>\r\n                  <th>Tháng {ArrMonth[9] + \"/\" + ArrYear[9]}</th>\r\n                  <th>Tháng {ArrMonth[8] + \"/\" + ArrYear[8]}</th>\r\n                  <th>Tháng {ArrMonth[7] + \"/\" + ArrYear[7]}</th>\r\n                  <th>Tháng {ArrMonth[6] + \"/\" + ArrYear[6]}</th>\r\n                  <th>Tháng {ArrMonth[5] + \"/\" + ArrYear[5]}</th>\r\n                  <th>Tháng {ArrMonth[4] + \"/\" + ArrYear[4]}</th>\r\n                  <th>Tháng {ArrMonth[3] + \"/\" + ArrYear[3]}</th>\r\n                  <th>Tháng {ArrMonth[2] + \"/\" + ArrYear[2]}</th>\r\n                  <th>Tháng {ArrMonth[1] + \"/\" + ArrYear[1]}</th>\r\n                  <th>Tháng {ArrMonth[0] + \"/\" + ArrYear[0]}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{ReportData.CustomerCode}</td>\r\n                  <td>{ReportData.CustomerName}</td>\r\n                  <td>\r\n                    {ReportData.Adress_CT == \"null\"\r\n                      ? \"N/A\"\r\n                      : ReportData.Adress_CT}\r\n                  </td>\r\n                  <td>{ReportData.Phone}</td>\r\n                  <td>{ReportData.CompanyName}</td>\r\n                  <td>{ReportData.OfficerName}</td>\r\n                  <td>{ReportData.OfficerNamePostman}</td>\r\n                  <td>{ReportData.AddressBill}</td>\r\n                  <td>{ReportData.Tax_Code}</td>\r\n                  <td>{FormatMoney(TotalDebtBefore)} đ</td>\r\n                  {DebtList.map((item, index) => {\r\n                    return (\r\n                      <td key={index}>\r\n                        {FormatMoney(item.TotalDebt)} đ\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-md-12 sum-debt\">\r\n            Tổng tồn nợ: {FormatMoney(TotalDebt)} đ\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\KpiDeliveryCODReportComponent.js",["917","918","919","920","921","922","923","924"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alerterror,\r\n  FormatDate,\r\n  FormatMoney,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { ChartTemp } from \"../../Common\";\r\n\r\nexport const KpiDeliveryCODReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const history = useHistory();\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ReportDataDetail, setReportDataDetail] = useState([]);\r\n  const [DataChart, setDataChart] = useState([]);\r\n  const [ShowList, setShowList] = useState(\"display-none\");\r\n  const [ShowDetail, setShowDetail] = useState(\"display-none\");\r\n  const [TitleDetail, setTitleDetail] = useState(\"\");\r\n  const [DataChartPie, setDataChartPie] = useState([]);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n  }, []);\r\n\r\n  const changeFromDate = (item) => {\r\n    if (item !== null) {\r\n      setFromDate(item);\r\n      if (Math.abs(ToDate - item) / (1000 * 60 * 60 * 24) > 30)\r\n        setFromDate(\r\n          new Date(item.getFullYear(), item.getMonth() + 1, item.getDate())\r\n        );\r\n    }\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    if (item !== null) {\r\n      let a = ToDate - item;\r\n      if (Math.abs(ToDate - item) / (1000 * 60 * 60 * 24) > 30)\r\n        setToDate(\r\n          new Date(item.getFullYear(), item.getMonth() - 1, item.getDate())\r\n        );\r\n      setToDate(item);\r\n    }\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    /* setDisable(false); */\r\n    if (FromDate === \"\") {\r\n      Alerterror(\"Chọn từ ngày\");\r\n      return false;\r\n    } else if (ToDate === \"\") {\r\n      Alerterror(\"Chọn đến ngày\");\r\n      return false;\r\n    }\r\n\r\n    let params = {\r\n      CustomerID: CustomerID,\r\n      FromDate: FromDate.toISOString(),\r\n      ToDate: ToDate.toISOString(),\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n    };\r\n    const pr = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spKpiDeliveryCODReport_V1\",\r\n    };\r\n    // call redux saga\r\n    const data = await mainAction.API_spCallServer(pr, dispatch);\r\n    setReportData(data);\r\n    //PaginationTable();\r\n    setShowDetail(\"display-none\");\r\n    setReportDataDetail([]);\r\n    setDisable(true);\r\n\r\n    if (data !== []) {\r\n      //chart main\r\n      setShowList(\"\");\r\n      let chart = [];\r\n      data.forEach((element, index) => {\r\n        chart.push([\r\n          new Date(FormatDate(element.CreateDate, \"y-k-d h:m\")),\r\n          element.TongTien,\r\n        ]);\r\n      });\r\n      setDataChart([{ data: chart, label: \"Tong tien\" }]);\r\n    }\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const ViewChart = async (item) => {\r\n    setShowDetail(\"\");\r\n    setTitleDetail(\"ngày \" + FormatDate(item.CreateDate, \"d-k-y\"));\r\n    setDataChartPie([\r\n      { title: \"Mới tạo\", value: item.MoiTao, color: \"#008d4c\" },\r\n      { title: \"Đang lấy hàng\", value: item.DangLayHang, color: \"#39cccc\" },\r\n      { title: \"Đã lấy hàng\", value: item.DaLayHang, color: \"#555299\" },\r\n      {\r\n        title: \"Đang trung chuyển\",\r\n        value: item.DangTrungChuyen,\r\n        color: \"#01ff70\",\r\n      },\r\n      { title: \"Đã nhận lại\", value: item.DaNhanLai, color: \"#ff851b\" },\r\n      { title: \"Đang phát\", value: item.DangPhat, color: \"#d81b60\" },\r\n      { title: \"Thành công\", value: item.ThanhCong, color: \"#005384\" },\r\n      { title: \"Phát lại\", value: item.PhatLai, color: \"#db8b0b\" },\r\n      { title: \"Hoàn gốc\", value: item.HoanGoc, color: \"#00a7d0\" },\r\n    ]);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12 HomeTitle\"> Báo cáo KPI báo phát COD</div>\r\n          <div className=\"col-md-12 margin-top-10\">\r\n            <form className=\"form-horizontal\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\"></div>\r\n                <div className=\"col-md-3\">\r\n                  <label>Từ ngày</label>\r\n                  <div className=\"form-group mt0\">\r\n                    <DateTimePicker\r\n                      onChange={changeFromDate}\r\n                      value={FromDate}\r\n                      className=\"form-control borradius3\"\r\n                      format=\"dd-MM-yyyy\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <label>Đến ngày</label>\r\n                  <div className=\"form-group mt0\">\r\n                    <DateTimePicker\r\n                      onChange={changeToDate}\r\n                      value={ToDate}\r\n                      className=\"form-control borradius3\"\r\n                      format=\"dd-MM-yyyy\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"clearfix\"></div>\r\n           \r\n            </form>\r\n          </div>\r\n       \r\n          <div className=\"col-md-12\">\r\n            <div className={ShowDetail + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i class=\"material-icons mt10\">insights</i> Chi tiết{\" \"}\r\n                  {TitleDetail}\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <ChartTemp type=\"pie\" data={DataChartPie} />\r\n                  </div>\r\n                  <div className=\"col-md-3\">\r\n                    <p>\r\n                      <span className=\"chart-color bg-green\"> </span> Mới tạo\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-teal\"> </span> Đang lấy\r\n                      hàng\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-purple\"> </span> Đã lấy\r\n                      hàng\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-lime\"> </span> Đang trung\r\n                      chuyển\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-orange\"> </span> Đã nhận\r\n                      lại\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"col-md-3\">\r\n                    <p>\r\n                      <span className=\"chart-color bg-maroon\"> </span> Đang phát\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-blue\"> </span> Phát thành\r\n                      công\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-yellow\"> </span> Đang phát\r\n                      lại\r\n                    </p>\r\n                    <p>\r\n                      <span className=\"chart-color bg-aqua\"> </span> Hoàn gốc\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 margin-top-10  text-center\">\r\n                <button type=\"reset\" className=\"btn btn-sm text-transform btn-refeshno\">\r\n                  <i className=\"material-icons\">undo</i> Hủy\r\n                </button>\r\n                <button\r\n                  disabled={!disable}\r\n                  onClick={ViewReport}\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm text-transform btn-save margin-left-10\"\r\n                >\r\n                  <i className=\"material-icons\">search</i> Xem báo cáo\r\n                </button>\r\n              </div>\r\n      </div>\r\n      <div className=\"col-md-12\">\r\n            <div className={ShowList + \" row cardcus margin-top-20\"}>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"table-responsive\">\r\n                  <table id=\"dataTable\" className=\"table text-center\">\r\n                    <thead className=\" text-primary\">\r\n                      <tr>\r\n                        <th className=\"noExp\">Tùy chọn</th>\r\n                        <th>Ngày tạo</th>\r\n                        <th>Tổng tiền</th>\r\n                        <th>Tổng bill</th>\r\n                        <th>Mới tạo</th>\r\n                        <th>Đang lấy hàng</th>\r\n                        <th>Đã lấy hàng </th>\r\n                        <th>Đang trung chuyển</th>\r\n                        <th>Đã nhận lại</th>\r\n                        <th>Đang phát</th>\r\n                        <th>Phát Thành Công</th>\r\n                        <th>Đang Phát Lại</th>\r\n                        <th>Hoàn Gốc</th>\r\n                        <th>Có hình</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {ReportData.map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td className=\"noExp\">\r\n                              <button\r\n                                onClick={() => ViewChart(item)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-info btn-xs\"\r\n                              >\r\n                                <i className=\"material-icons\">bar_chart</i>{\" \"}\r\n                                Xem\r\n                              </button>\r\n                            </td>\r\n                            <td>{FormatDate(item.CreateDate, \"d-k-y\")}</td>\r\n                            <td>{FormatMoney(item.TongTien)} đ</td>\r\n                            <td>{FormatMoney(item.TongBill)}</td>\r\n                            <td>\r\n                              {item.MoiTao}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.MoiTao / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.DangLayHang}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.DangLayHang / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.DaLayHang}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.DaLayHang / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.DangTrungChuyen}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.DangTrungChuyen / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.DaNhanLai}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.DaNhanLai / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.DangPhat}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.DangPhat / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.ThanhCong}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.ThanhCong / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.PhatLai}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.PhatLai / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.HoanGoc}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.HoanGoc / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                            <td>\r\n                              {item.CoHinh}\r\n                              <br />\r\n                              <i className=\"percent\">\r\n                                {\"(\"}\r\n                                {(\r\n                                  (item.CoHinh / item.TongBill) *\r\n                                  100\r\n                                ).toFixed(2)}\r\n                                {\"%)\"}\r\n                              </i>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              {/* <div className=\"col-md-12 mt30\">\r\n                <p className=\"text-center bold\">\r\n                  THỐNG KÊ DOANH THU THEO NGÀY\r\n                </p>\r\n                <ChartTemp type=\"line\" data={DataChart} />\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\System\\CustomerSenderComponent.js",["925","926","927","928","929","930","931","932","933","934"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nimport { SelectCity, SelectDistrict, SelectWard } from \"../../Common\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  PaginationTable,\r\n  ValidPhone,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\n\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\n\r\n/* Load CSS */\r\nexport const CustomerSenderComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n  const [AddressList, setAddressList] = useState([]);\r\n\r\n  /* get and set parameter from form and sub common */\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const [AddressId, setAddressId] = useState(0);\r\n\r\n  const [City, setCity] = useState(0);\r\n  const [District, setDistrict] = useState(0);\r\n  const [Ward, setWard] = useState(0);\r\n  const [CityMeno, setCityMeno] = useState(\"\");\r\n  const [DistrictMeno, setDistrictMeno] = useState(\"\");\r\n  const [WardMeno, setWardMeno] = useState(\"\");\r\n\r\n  const [Name, bindName, setName] = useInput(\"\");\r\n  const NameRef = useRef();\r\n\r\n  const [Phone, bindPhone, setPhone] = useInput(\"\");\r\n  const PhoneRef = useRef();\r\n\r\n  const [Street, bindStreet, setStreet] = useInput(\"\");\r\n  const StreetRef = useRef();\r\n\r\n  const [Company, bindCompany, setCompany] = useInput(\"\");\r\n  const CompanyRef = useRef();\r\n\r\n  const [NoResultMessage, setNoResultMessage] = useState(\r\n    \"Không tìm thấy dữ liệu\"\r\n  );\r\n\r\n  const [ShowForm, setShowForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    if (GetCookieGroup(\"IsChooseCustomer\") === \"Fail\")\r\n      window.location.href = \"/home\";\r\n    APIC_spCustomerSenderAddressList(CustomerID);\r\n  }, []);\r\n\r\n  const onChooseProvince = (item) => {\r\n    setCity(item.value);\r\n    setCityMeno(item.label);\r\n    setDistrict(0);\r\n    setDistrictMeno(\"\");\r\n    setWard(0);\r\n    setWardMeno(\"\");\r\n  };\r\n\r\n  const onChooseDistrict = (item) => {\r\n    setDistrict(item.value);\r\n    setDistrictMeno(item.label);\r\n    setWard(0);\r\n    setWardMeno(\"\");\r\n  };\r\n\r\n  const onSelectWard = (item) => {\r\n    setWard(item.value);\r\n    setWardMeno(item.label);\r\n  };\r\n\r\n  const APIC_spCustomerSenderAddressList = async (ID) => {\r\n    const params = {\r\n      API_key: APIKey,\r\n      Json: '{\"CustomerId\":' + ID + \"}\",\r\n      func: \"APIC_spCustomerSenderAddressList\",\r\n    };\r\n    // call redux saga\r\n    const data = await mainAction.API_spCallServer(params, dispatch);\r\n    debugger;\r\n    if (data !== null) setNoResultMessage(\"\");\r\n    else setNoResultMessage(\"Không tìm thấy dữ liệu\");\r\n    setAddressList(data);\r\n    //PaginationTable();\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const GoToCreateLading = (item) => {\r\n    debugger\r\n    let draft = {\r\n      AddressFromId: item._original.CustomerAddressSenderId,\r\n      AddressFrom: item._original.AddressFull,\r\n      objFrom: item._original\r\n    };\r\n    localStorage.setItem(\"LadingDraft\", JSON.stringify(draft));\r\n    debugger\r\n    history.push(\"tao-nhanh-van-don\");\r\n  }\r\n\r\n  const Edit = (item) => {\r\n    debugger\r\n    setAddressId(item._original.CustomerAddressSenderId);\r\n    setName(item._original.NameSend);\r\n    setPhone(item._original.PhoneSend);\r\n    setStreet(item._original.Street_Number);\r\n    setCity(item._original.CityId);\r\n    setDistrict(item._original.DistrictiId);\r\n    setWard(item._original.WarId);\r\n    setCityMeno(item._original.CityName);\r\n    setDistrictMeno(item._original.DistrictyName);\r\n    setWardMeno(item._original.WarName);\r\n    setCompany(item._original.Company);\r\n    setShowForm(true);\r\n  }\r\n\r\n  const Delete = async (row) => {\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      Json: '{\"CustomerId\":' + CustomerID + ',\"AddressId\":' + row._original.CustomerAddressSenderId + '}',\r\n      func: \"APIC_spCustomerSenderAddressRemove\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(params, dispatch);\r\n    if (data.resultCode == 0) {\r\n      setAddressList(AddressList.filter(p => p.CustomerAddressSenderId !== row._original.CustomerAddressSenderId));\r\n      Alertsuccess(data.localMessage);\r\n    } else Alerterror(data.localMessage);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const APIC_spCustomerSenderAddress_SaveJson = async () => {\r\n    //ScrollTop();\r\n    setDisable(true);\r\n    if (Name === \"\") Alerterror(\"Nhập họ tên\");\r\n    else if (Phone === \"\") Alerterror(\"Nhập số điện thoại\");\r\n    else if (ValidPhone(Phone) === \"form-error\")\r\n      Alerterror(\"Số điện thoại không đúng định dạng !\");\r\n    else if (City === undefined || City == 0)\r\n      Alerterror(\"Chọn tỉnh thành\");\r\n    else if (District === undefined || District == 0)\r\n      Alerterror(\"Chọn quận huyện\");\r\n    else if (Ward === undefined || Ward == 0)\r\n      Alerterror(\"Chọn phường xã\");\r\n    else if (Street === \"\") Alerterror(\"Nhập số nhà, đường\");\r\n    else {\r\n      let params = {\r\n        CustomerId: CustomerID,\r\n        AddressId: AddressId,\r\n        NameSend: Name,\r\n        PhoneSend: Phone,\r\n        CityId: City,\r\n        DistrictId: District,\r\n        WardId: Ward,\r\n        Street_Number: Street,\r\n        AddressFull:\r\n          Street +\r\n          \", \" +\r\n          WardMeno +\r\n          \", \" +\r\n          DistrictMeno +\r\n          \", \" +\r\n          CityMeno\r\n      };\r\n      const pr = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spCustomerSenderAddress_SaveJson\",\r\n      };\r\n      // call redux saga\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      Alertsuccess(data.localMessage);\r\n      APIC_spCustomerSenderAddressList(CustomerID);\r\n      PaginationTable();\r\n      ClearForm();\r\n    }\r\n    setDisable(false);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const [phoneReg, setPhoneReg] = useState(\"\");\r\n  const RegPhone = (e) => {\r\n    debugger;\r\n    setPhone(e);\r\n    if (e !== \"\") {\r\n      let result = ValidPhone(e);\r\n      setPhoneReg(result);\r\n      if (result === \"form-error\")\r\n        Alerterror(\"Số điện thoại không đúng định dạng\");\r\n    }\r\n  };\r\n\r\n  const ClearForm = () => {\r\n    setCity(0);\r\n    setDistrict(0);\r\n    setWard(0);\r\n    setCityMeno(\"\");\r\n    setDistrictMeno(\"\");\r\n    setWardMeno(\"\");\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n    setStreet(\"\");\r\n    setCompany(\"\");\r\n    setDisable(false);\r\n    setAddressId(0);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      Cell: ({ row }) => (\r\n        <span>\r\n          <i\r\n            className=\"fa fa-edit green button\"\r\n            onClick={() => GoToCreateLading(row)}\r\n            title=\"Tạo đơn hàng\"\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-cog yellow button\"\r\n            onClick={() => Edit(row)}\r\n            title=\"Sửa\"\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-trash red button\"\r\n            onClick={() =>\r\n              window.confirm(\"Xác nhận xóa địa chỉ ?\") &&\r\n              Delete(row)\r\n            }\r\n            title=\"Xóa\"\r\n          ></i>\r\n\r\n        </span>\r\n      ),\r\n      width: 100,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tên\",\r\n      accessor: \"NameSend\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo tên ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Số điện thoại\",\r\n      accessor: \"PhoneSend\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo số điện thoại ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Địa chỉ\",\r\n      accessor: \"AddressFull\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm theo địa chỉ ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12 HomeTitle\">Địa chỉ gửi thường xuyên\r\n            <button type=\"button\" className=\"btn btn-refesh text-transform pull-right btn-sm\" onClick={(e) => setShowForm(!ShowForm)}>\r\n              <i className=\"fa fa-plus\"></i> Thêm địa chỉ mới\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md-12 margin-top-20\">\r\n            <div className={\"panel-collapse collapse in cardcus \" + (ShowForm ? \"show\" : \"\")} id=\"collapseOne\">\r\n              <div className=\"margin-top-10\">\r\n                <div className=\"titleNew\">\r\n                  <i className=\"fa fa-edit\"></i> Thêm mới địa chỉ\r\n                </div>\r\n                <div className=\"panel-body margin-top-10\">\r\n                  <form className=\" form-horizontal\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            Họ tên <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control borradius3 \"\r\n                            ref={NameRef}\r\n                            value={Name}\r\n                            {...bindName}\r\n                            placeholder='Nhập họ tên'\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            SĐT <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"number\"\r\n                            className={\"form-control borradius3 \" + phoneReg}\r\n                            ref={PhoneRef}\r\n                            value={Phone}\r\n                            {...bindPhone}\r\n                            placeholder='Nhập số điện thoại'\r\n                            min=\"0\"\r\n                            onBlur={(e) => RegPhone(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            Số nhà / đường <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control borradius3 \"\r\n                            ref={StreetRef}\r\n                            value={Street}\r\n                            {...bindStreet}\r\n                            placeholder='Nhập số nhà, tên đường'\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"bmd-label-static\">\r\n                            Tỉnh thành <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <SelectCity\r\n                            onActive={City}\r\n                            onSelected={(item) => {\r\n                              onChooseProvince(item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"bmd-label-static\">\r\n                            Quận/huyện <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <SelectDistrict\r\n                            onActive={District}\r\n                            ParentID={City}\r\n                            onSelected={(item) => {\r\n                              onChooseDistrict(item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label className=\"bmd-label-static\">\r\n                            Phường/xã <span className=\"red\">(*)</span>\r\n                          </label>\r\n                          <SelectWard\r\n                            onActive={Ward}\r\n                            ParentID={District}\r\n                            onSelected={(item) => {\r\n                              onSelectWard(item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12 text-center\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-sm text-transform btn-refesh\"\r\n                          onClick={ClearForm}\r\n                        >\r\n                          <i className=\"material-icons\">undo</i> Hủy\r\n                        </button>{\" \"}\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-sm text-transform btn-save\"\r\n                          disabled={disable}\r\n                          onClick={APIC_spCustomerSenderAddress_SaveJson}\r\n                        >\r\n                          <i className=\"material-icons\">create</i> Xác nhận\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"clearfix\"></div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 margin-top-10\">\r\n            <div className=\"\">\r\n              <div className=\"table-responsive\">\r\n                <DataTable data={AddressList} columns={columns} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    </div >\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\WareHouseOutputReportComponent.js",["935","936","937","938"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alerterror,\r\n  FormatDateJson,\r\n  PaginationTable,\r\n  GetCookie,\r\n  Alertinfo,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\n\r\n/* Load CSS */\r\n\r\nexport const WareHouseOutputReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n\r\n  const [IsShowDetail, setIsShowDetail] = useState(false);\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n  const [WareHouseList, setWareHouseList] = useState([{ value: 0, label: \"Chọn kho\" }]);\r\n  const [Parcels, setParcels] = useState([{ value: 0, label: \"Chọn lô\" }]);\r\n  const [WareHouse, setWareHouse] = useState({ value: 0, label: \"Chọn kho\" });\r\n  const [Parcel, setParcel] = useState({ value: 0, label: \"Chọn lô\" });\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ReportDataDetail, setReportDataDetail] = useState([]);\r\n\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const changeFromDate = (item) => {\r\n    setFromDate(item);\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    setToDate(item);\r\n  };\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n    };\r\n    \r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_List_V1\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n\r\n    let _wareHouseList = [{ value: 0, label: \"Chọn kho\" }];\r\n    setWareHouse({ value: 0, label: \"Chọn kho\" });\r\n    data.forEach((element, index) => {\r\n      let option = { value: element.WareHouseId, label: element.WareHouseName };\r\n      _wareHouseList.push(option);\r\n    });\r\n    setWareHouseList(_wareHouseList);\r\n    setDisable(true);\r\n  };\r\n  \r\n  const onChangeWareHouseList = async (item) => {\r\n    setDisable(false);\r\n    setWareHouse(item);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WhId: item.value,\r\n    };\r\n    \r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_Area_List_V1\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n\r\n    let _parcelList = [{ value: 0, label: \"Chọn lô\" }];\r\n    setParcel({ value: 0, label: \"Chọn lô\" });\r\n    data.forEach((element, index) => {\r\n      let option = {\r\n        value: element.WareHouseAreaId,\r\n        label: element.WareHouseAreaName,\r\n      };\r\n      _parcelList.push(option);\r\n    });\r\n    setParcels(_parcelList);\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onChangeParcel = async (item) => {\r\n    setDisable(false);\r\n    setParcel(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    setDisable(false);\r\n\r\n    let params = {\r\n      CustomerId: CustomerID, //17478\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WareHouseId: WareHouse.value,\r\n      WareHouseAreaId: Parcel.value,\r\n      FromDate: FromDate.toISOString(),\r\n      ToDate: ToDate.toISOString(),\r\n    };\r\n\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spWareHouse_Output_Report\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n    setReportData(data);\r\n\r\n    setReportDataDetail([]);\r\n    //PaginationTable();\r\n\r\n    if(data.length===0)\r\n      Alertinfo(\"Không có dữ liệu\");\r\n\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const ViewReportDetail = async (item) => {\r\n    setDisable(false);\r\n\r\n    let params = {\r\n      CustomerID: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WhId: item.WHWareHouse_OutputID,\r\n    };\r\n\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spWareHouse_Output_Report_Detail\",\r\n      API_key: APIKey,\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n    setReportDataDetail(data);\r\n    setIsShowDetail(true);\r\n    PaginationTable();\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  //#region Xuất excel\r\n\r\n  const ExportToExcel = () => {\r\n    let dataExcel = ReportData.map((item, index) => {\r\n      return {\r\n        \"STT\": (index + 1),\r\n        \"Mã phiếu xuất\": item.WHWareHouse_OutputCode,\r\n        \"Thời gian xuất\": FormatDateJson(item.CreateTimeOutput,1),\r\n        \"Người xuất\": item.OfficerName,\r\n        \"Tên NCC\": item.SupplierName,\r\n        \"Mã khách hàng\":item.CustomerCode,\r\n        \"Tên khách hàng\": item.CustomerName,\r\n        \"Mã PO\": item.POCode,\r\n        \"Mã kho\": item.WareHouseCode,\r\n        \"Mã lô\":item.WareHouseAreaCode,\r\n        \"Tổng sản phẩm\":item.TotalProducts,\r\n        \"Tổng số lượng\": item.TotalNumber,\r\n      };\r\n    });\r\n    ExportExcel(dataExcel, \"Báo cáo xuất kho\");\r\n  };\r\n\r\n  //#endregion\r\n\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12\">\r\n            {!IsShowDetail &&\r\n              <div className=\"card\">\r\n                <div className=\"card-header card-header-primary\">\r\n                  <h4 className=\"card-title\">\r\n                    <i className=\"material-icons\">bubble_chart</i> BÁO CÁO XUẤT\r\n                    KHO\r\n                  </h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <form className=\"form-horizontal\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-3\">\r\n                        <label>Từ ngày</label>\r\n                        <div className=\"form-group bmd-form-group mt0\">\r\n                          <DateTimePicker\r\n                            onChange={changeFromDate}\r\n                            value={FromDate}\r\n                            className=\"form-control\"\r\n                            format={\"dd/MM/yyyy\"}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-3\">\r\n                        <label>Đến ngày</label>\r\n                        <div className=\"form-group bmd-form-group mt0\">\r\n                          <DateTimePicker\r\n                            onChange={changeToDate}\r\n                            value={ToDate}\r\n                            className=\"form-control\"\r\n                            format={\"dd/MM/yyyy\"}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-3\">\r\n                        <label>Chọn kho</label>\r\n                        <div className=\"form-group bmd-form-group mt0\">\r\n                          <Select\r\n                            value={WareHouse}\r\n                            onChange={onChangeWareHouseList}\r\n                            options={WareHouseList}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-3\">\r\n                        <label>Chọn lô</label>\r\n                        <div className=\"form-group bmd-form-group mt0\">\r\n                          <Select\r\n                            value={Parcel}\r\n                            onChange={onChangeParcel}\r\n                            options={Parcels}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"clearfix\"></div>\r\n                    <div className=\"col-md-12 text-center\">\r\n                      {/* <button type=\"reset\" className=\"btn btn-default\">\r\n                        <i className=\"material-icons\">undo</i> Hủy\r\n                      </button> */}\r\n                      <button\r\n                        disabled={!disable}\r\n                        onClick={ViewReport}\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                      >\r\n                        <i className=\"material-icons\">search</i> Xem báo cáo\r\n                      </button>\r\n                      <button\r\n                      disabled={!disable}\r\n                      type=\"button\"\r\n                      onClick={ExportToExcel}\r\n                      className=\"btn btn-sm text-transform btn-refeshno margin-left-10\"\r\n                    >\r\n                      <img src=\"../assets/img/iconexcel.png\" className='iconex' />\r\n                      Xuất Excel\r\n                    </button>\r\n                    </div>\r\n                  </form>\r\n                  <div className=\"table-responsive\">\r\n                    <table id=\"dataTable\" className=\"table\">\r\n                      <thead className=\" text-primary\">\r\n                        <tr>\r\n                          <th>STT</th>\r\n                          <th>Tùy chọn</th>\r\n                          <th>Mã phiếu xuất</th>\r\n                          <th>Thời gian xuất</th>\r\n                          <th>Người xuất</th>\r\n                          <th>Tên NCC</th>\r\n                          <th>Mã khách hàng</th>\r\n                          <th>Tên khách hàng</th>\r\n                          <th>Mã PO</th>\r\n                          <th>Mã kho</th>\r\n                          <th>Mã lô</th>\r\n                          <th>Tổng sản phẩm</th>\r\n                          <th>Tổng số lượng</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {ReportData.map((item, index) => {\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td>{index + 1}</td>\r\n                              <td>\r\n                                <button onClick={() => ViewReportDetail(item)} type=\"button\" className=\"btn btn-success btn-sm\">\r\n                                  <i className=\"fa fa-eye\"></i>\r\n                                </button>\r\n                              </td>\r\n                              <td>{item.WHWareHouse_OutputCode} </td>\r\n                              <td>{FormatDateJson(item.CreateTimeOutput, 1)}</td>\r\n                              <td>{item.OfficerName}</td>\r\n                              <td>{item.SupplierName}</td>\r\n                              <td>{item.CustomerCode}</td>\r\n                              <td>{item.CustomerName}</td>\r\n                              <td>{item.POCode}</td>\r\n                              <td>{item.WareHouseCode}</td>\r\n                              <td>{item.WareHouseAreaCode}</td>\r\n                              <td>{item.TotalProducts}</td>\r\n                              <td>{item.TotalNumber}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            }\r\n            {IsShowDetail &&\r\n              <div className=\"card\">\r\n                <div className=\"card-header card-header-primary\">\r\n                  <h4 className=\"card-title\">\r\n                    <i className=\"material-icons\">bubble_chart</i> CHI TIẾT XUẤT KHO\r\n                    <div class=\"pull-right\">\r\n                      <button type=\"button\" class=\"btn btn-sm btn-default\" onClick={(e) => setIsShowDetail(false)}><i class=\"fa fa-undo\"></i> Về danh sách</button>\r\n                    </div>\r\n                  </h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"table-responsive\">\r\n                        <table id=\"dataTable\" className=\"table\">\r\n                          <thead className=\" text-primary\">\r\n                            <tr>\r\n                              <th>STT</th>\r\n                              <th>Mã sản phẩm</th>\r\n                              <th>Tên sản phẩm</th>\r\n                              <th>Số lượng xuất</th>\r\n                              <th>Gía sản phẩm</th>\r\n                              <th>Tên màu</th>\r\n                              <th>Tên kích thước</th>\r\n                              <th>Tên đơn vị tính</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {ReportDataDetail.map((item, index) => {\r\n                              return (\r\n                                <tr key={index}>\r\n                                  <td>{index + 1}</td>\r\n                                  <td>{item.ProductCode} </td>\r\n                                  <td>{item.ProductName}</td>\r\n                                  <td>{item.PackageNumber}</td>\r\n                                  <td>{item.ProductPrice}</td>\r\n                                  <td>{item.ColorName}</td>\r\n                                  <td>{item.SizeName}</td>\r\n                                  <td>{item.UnitName}</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\WareHouseImportReportComponent.js",["939","940","941","942","943"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alerterror,\r\n  Alertinfo,\r\n  FormatDateJson,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n  PaginationTable,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\n\r\nexport const WareHouseImportReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n\r\n  const [IsShowDetail, setIsShowDetail] = useState(false);\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n  const [WareHouseList, setWareHouseList] = useState([{ value: 0, label: \"Chọn kho\" }]);\r\n  const [Parcels, setParcels] = useState([{ value: 0, label: \"Chọn lô\" }]);\r\n  const [WareHouse, setWareHouse] = useState({ value: 0, label: \"Chọn kho\" });\r\n  const [Parcel, setParcel] = useState({ value: 0, label: \"Chọn lô\" });\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ReportDataDetail, setReportDataDetail] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const changeFromDate = (item) => {\r\n    if (item !== null) {\r\n      setFromDate(item);\r\n      /* let _date = new Date(\r\n        item.getFullYear(),\r\n        item.getMonth() + 1,\r\n        item.getDate()\r\n      );\r\n      setToDate(_date); */\r\n    }\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    if (item !== null) {\r\n      /* let _date = new Date(item);\r\n      setFromDate(\r\n        new Date(item.getFullYear(), item.getMonth() - 1, item.getDate())\r\n      ); */\r\n      setToDate(item);\r\n    }\r\n  };\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n    };\r\n\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_List_V1\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n\r\n    let _wareHouseList = [{ value: 0, label: \"Chọn kho\" }];\r\n    setWareHouse({ value: 0, label: \"Chọn kho\" });\r\n    data.forEach((element, index) => {\r\n      let option = { value: element.WareHouseId, label: element.WareHouseName };\r\n      _wareHouseList.push(option);\r\n    });\r\n    setWareHouseList(_wareHouseList);\r\n    setDisable(true);\r\n  };\r\n\r\n  const onChangeWareHouseList = async (item) => {\r\n    setDisable(false);\r\n    setWareHouse(item);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WhId: item.value,\r\n    };\r\n    \r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"WH_spWareHouse_Area_List_V1\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n\r\n    let _parcelList = [{ value: 0, label: \"Chọn lô\" }];\r\n    setParcel({ value: 0, label: \"Chọn lô\" });\r\n    data.forEach((element, index) => {\r\n      let option = {\r\n        value: element.WareHouseAreaId,\r\n        label: element.WareHouseAreaName,\r\n      };\r\n      _parcelList.push(option);\r\n    });\r\n    setParcels(_parcelList);\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onChangeParcel = async (item) => {\r\n    setDisable(false);\r\n    setParcel(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    let params = {\r\n      CustomerId: CustomerID, //17478\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WareHouseId: WareHouse.value,\r\n      WareHouseAreaId: Parcel.value,\r\n      FromDate: FromDate.toISOString(),\r\n      ToDate: ToDate.toISOString(),\r\n    };\r\n\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spWareHouse_Import_Report\",\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n    setReportData(data);\r\n    setReportDataDetail([]);\r\n    //PaginationTable();\r\n\r\n    if(data.length===0)\r\n      Alertinfo(\"Không có dữ liệu\");\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const ViewReportDetail = async (item) => {\r\n    setDisable(false);\r\n\r\n    let params = {\r\n      CustomerID: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WhId: item.WHWareHouse_ImportID,\r\n    };\r\n\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spWareHouse_Import_Report_Detail\",\r\n      API_key: APIKey,\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n    setReportDataDetail(data);\r\n    setIsShowDetail(true);\r\n    PaginationTable();\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n   //#region Xuất excel\r\n\r\n   const ExportToExcel = () => {\r\n    let dataExcel = ReportData.map((item, index) => {\r\n      return {\r\n        \"STT\": (index + 1),\r\n        \"Mã phiếu nhập\": item.WHWareHouse_ImportCode,\r\n        \"Thời gian nhập\": FormatDateJson(item.CreateTimeImport,1),\r\n        \"Người nhập\": item.OfficerName,\r\n        \"Tên NCC\": item.SupplierName,\r\n        \"Mã khách hàng\":item.CustomerCode,\r\n        \"Tên khách hàng\": item.CustomerName,\r\n        \"Mã PO\": item.POCode,\r\n        \"Mã kho\": item.WareHouseCode,\r\n        \"Mã lô\":item.WareHouseAreaCode,\r\n        \"Tổng sản phẩm\":item.TotalProducts,\r\n        \"Tổng số lượng\": item.TotalNumber,\r\n      };\r\n    });\r\n    ExportExcel(dataExcel, \"Báo cáo nhập kho\");\r\n  };\r\n\r\n  //#endregion\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12\">\r\n            {!IsShowDetail &&\r\n              <div className=\"card\">\r\n                <div className=\"card-header card-header-primary\">\r\n                  <h4 className=\"card-title\">\r\n                    <i className=\"material-icons\">bubble_chart</i> BÁO CÁO NHẬP\r\n                    KHO\r\n                  </h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <form className=\"form-horizontal\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-3\">\r\n                        <label>Từ ngày</label>\r\n                        <div className=\"form-group bmd-form-group mt0\">\r\n                          <DateTimePicker\r\n                            onChange={changeFromDate}\r\n                            value={FromDate}\r\n                            className=\"form-control\"\r\n                            format={\"dd/MM/yyyy\"}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-3\">\r\n                        <label>Đến ngày</label>\r\n                        <div className=\"form-group bmd-form-group mt0\">\r\n                          <DateTimePicker\r\n                            onChange={changeToDate}\r\n                            value={ToDate}\r\n                            className=\"form-control\"\r\n                            format={\"dd/MM/yyyy\"}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-3\">\r\n                        <label>Chọn kho</label>\r\n                        <div className=\"form-group bmd-form-group mt0\">\r\n                          <Select\r\n                            value={WareHouse}\r\n                            onChange={onChangeWareHouseList}\r\n                            options={WareHouseList}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-3\">\r\n                        <label>Chọn lô</label>\r\n                        <div className=\"form-group bmd-form-group mt0\">\r\n                          <Select\r\n                            value={Parcel}\r\n                            onChange={onChangeParcel}\r\n                            options={Parcels}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"clearfix\"></div>\r\n                    <div className=\"col-md-12 text-center\">\r\n                      {/* <button type=\"reset\" className=\"btn btn-default\">\r\n                        <i className=\"material-icons\">undo</i> Hủy\r\n                      </button> */}\r\n                      <button\r\n                        disabled={!disable}\r\n                        onClick={ViewReport}\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                      >\r\n                        <i className=\"material-icons\">search</i> Xem báo cáo\r\n                      </button>\r\n                      <button\r\n                      disabled={!disable}\r\n                      type=\"button\"\r\n                      onClick={ExportToExcel}\r\n                      className=\"btn btn-sm text-transform btn-refeshno margin-left-10\"\r\n                    >\r\n                      <img src=\"../assets/img/iconexcel.png\" className='iconex' />\r\n                      Xuất Excel\r\n                    </button>\r\n                    </div>\r\n                  </form>\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"table-responsive\">\r\n                      <table id=\"dataTable\" className=\"table\">\r\n                        <thead className=\" text-primary\">\r\n                          <tr>\r\n                            <th>STT</th>\r\n                            <th>Tùy chọn</th>\r\n                            <th>Mã phiếu nhập</th>\r\n                            <th>Thời gian nhập</th>\r\n                            <th>Người nhập</th>\r\n                            <th>Tên NCC</th>\r\n                            <th>Mã khách hàng</th>\r\n                            <th>Tên khách hàng</th>\r\n                            <th>Mã PO</th>\r\n                            <th>Mã kho</th>\r\n                            <th>Mã lô</th>\r\n                            <th>Tổng sản phẩm</th>\r\n                            <th>Tổng số lượng</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {ReportData.map((item, index) => {\r\n                            debugger\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>\r\n                                  <button onClick={() => ViewReportDetail(item)} type=\"button\" className=\"btn btn-success btn-sm\">\r\n                                    <i className=\"fa fa-eye\"></i>\r\n                                  </button>\r\n                                </td>\r\n                                <td>{item.WHWareHouse_ImportCode} </td>\r\n                                <td>{FormatDateJson(item.CreateTimeImport,1)}</td>\r\n                                <td>{item.OfficerName}</td>\r\n                                <td>{item.SupplierName}</td>\r\n                                <td>{item.CustomerCode}</td>\r\n                                <td>{item.CustomerName}</td>\r\n                                <td>{item.POCode}</td>\r\n                                <td>{item.WareHouseCode}</td>\r\n                                <td>{item.WareHouseAreaCode}</td>\r\n                                <td>{item.TotalProducts}</td>\r\n                                <td>{item.TotalNumber}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            }\r\n            {IsShowDetail &&\r\n              <div className=\"card\">\r\n                <div className=\"card-header card-header-primary\">\r\n                  <h4 className=\"card-title\">\r\n                    <i className=\"material-icons\">bubble_chart</i> CHI TIẾT NHẬP\r\n                    KHO\r\n                    <div class=\"pull-right\">\r\n                      <button type=\"button\" class=\"btn btn-sm btn-default\" onClick={(e) => setIsShowDetail(false)}><i class=\"fa fa-undo\"></i> Về danh sách</button>\r\n                    </div>\r\n                  </h4>\r\n\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"table-responsive\">\r\n                        <table id=\"dataTable\" className=\"table\">\r\n                          <thead className=\" text-primary\">\r\n                            <tr>\r\n                              <th>STT</th>\r\n                              <th>Mã sản phẩm</th>\r\n                              <th>Tên sản phẩm</th>\r\n                              <th>Số lượng nhập</th>\r\n                              <th>Gía sản phẩm</th>\r\n                              <th>Tên màu</th>\r\n                              <th>Tên kích thước</th>\r\n                              <th>Tên đơn vị tính</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {ReportDataDetail.map((item, index) => {\r\n                              return (\r\n                                <tr key={index}>\r\n                                  <td>{index + 1}</td>\r\n                                  <td>{item.ProductCode} </td>\r\n                                  <td>{item.ProductName}</td>\r\n                                  <td>{item.PackageNumber}</td>\r\n                                  <td>{item.ProductPrice}</td>\r\n                                  <td>{item.ColorName}</td>\r\n                                  <td>{item.SizeName}</td>\r\n                                  <td>{item.UnitName}</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\WareHouseTranportReportComponent.js",["944","945","946","947","948","949","950","951"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alerterror,\r\n  FormatDate,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n  PaginationTable,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\n\r\nexport const WareHouseTranportReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n\r\n  const [ViewList, setViewList] = useState(\"\");\r\n  const [ViewDetail, setViewDetail] = useState(\"display-none\");\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [FromDate, setFromDate] = useState(new Date());\r\n  const [ToDate, setToDate] = useState(new Date());\r\n\r\n  const [WareHouseList, setWareHouseList] = useState([]);\r\n  const [WareHouse, setWareHouse] = useState({ value: 0, label: \"Chọn kho\" });\r\n\r\n  const [Parcels, setParcels] = useState([]);\r\n  const [Parcel, setParcel] = useState({ value: 0, label: \"Chọn lô\" });\r\n\r\n  const [ParcelsRecipient, setParcelsRecipient] = useState([]);\r\n\r\n  const [WareHouseRecipient, setWareHouseRecipient] = useState({\r\n    value: 0,\r\n    label: \"Chọn kho\",\r\n  });\r\n  const [ParcelRecipient, setParcelRecipient] = useState({\r\n    value: 0,\r\n    label: \"Chọn lô\",\r\n  });\r\n\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [ReportDataDetail, setReportDataDetail] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n    };\r\n    const data = await ReportAction.APIC_spWareHouse_List(params, dispatch);\r\n    let _wareHouseList = [{ value: 0, label: \"Chọn kho\" }];\r\n    setWareHouse({ value: 0, label: \"Chọn kho\" });\r\n    JSON.parse(data.data).forEach((element, index) => {\r\n      let option = { value: element.WareHouseId, label: element.WareHouseName };\r\n      _wareHouseList.push(option);\r\n    });\r\n    setWareHouseList(_wareHouseList);\r\n    setDisable(true);\r\n  };\r\n\r\n  const changeFromDate = (item) => {\r\n    setFromDate(item);\r\n    let _date = new Date(\r\n      item.getFullYear(),\r\n      item.getMonth() + 1,\r\n      item.getDate()\r\n    );\r\n    setToDate(_date);\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    let _date = new Date(item);\r\n    setFromDate(\r\n      new Date(item.getFullYear(), item.getMonth() - 1, item.getDate())\r\n    );\r\n    setToDate(item);\r\n  };\r\n\r\n  const onChangeWareHouseList = async (item) => {\r\n    setDisable(false);\r\n    setWareHouse(item);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WhId: item.value,\r\n    };\r\n    const data = await ReportAction.APIC_spWareHouse_Area_list(\r\n      params,\r\n      dispatch\r\n    );\r\n    let _parcelList = [{ value: 0, label: \"Chọn lô\" }];\r\n    setParcel({ value: 0, label: \"Chọn lô\" });\r\n    JSON.parse(data.data).forEach((element, index) => {\r\n      let option = {\r\n        value: element.WareHouseAreaId,\r\n        label: element.WareHouseAreaName,\r\n      };\r\n      _parcelList.push(option);\r\n    });\r\n    setParcels(_parcelList);\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onChangeParcel = async (item) => {\r\n    setDisable(false);\r\n    setParcel(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  const onChangeWareHouseListRecipient = async (item) => {\r\n    setDisable(false);\r\n    setWareHouseRecipient(item);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerId: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WhId: item.value,\r\n    };\r\n    const data = await ReportAction.APIC_spWareHouse_Area_list(\r\n      params,\r\n      dispatch\r\n    );\r\n    debugger;\r\n    let _parcelList = [{ value: 0, label: \"Chọn lô\" }];\r\n    setParcelRecipient({ value: 0, label: \"Chọn lô\" });\r\n    JSON.parse(data.data).forEach((element, index) => {\r\n      let option = {\r\n        value: element.WareHouseAreaId,\r\n        label: element.WareHouseAreaName,\r\n      };\r\n      _parcelList.push(option);\r\n    });\r\n    setParcelsRecipient(_parcelList);\r\n    setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onChangeParcelRecipient = async (item) => {\r\n    setDisable(false);\r\n    setParcelRecipient(item);\r\n    setDisable(true);\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    //setDisable(false);\r\n    debugger;\r\n    if (WareHouse === null || WareHouse.value === 0) {\r\n      Alerterror(\"Chọn kho chuyển\");\r\n      return false;\r\n    } else if (Parcel === null || Parcel.value === 0) {\r\n      Alerterror(\"Chọn lô chuyển\");\r\n      return false;\r\n    } else if (WareHouseRecipient === null || WareHouseRecipient.value === 0) {\r\n      Alerterror(\"Chọn kho nhận\");\r\n      return false;\r\n    } else if (ParcelRecipient === null || ParcelRecipient.value === 0) {\r\n      Alerterror(\"Chọn lô nhận\");\r\n      return false;\r\n    }\r\n\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: CustomerID, //17478\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WhId: WareHouse.value,\r\n      ParcelId: Parcel.value,\r\n      WhIdRecipient: WareHouseRecipient.value,\r\n      ParcelIdRecipient: ParcelRecipient.value,\r\n      FromDate: FromDate.toISOString(),\r\n      ToDate: ToDate.toISOString(),\r\n    };\r\n    let a = JSON.stringify(params);\r\n    const data = await ReportAction.APIC_spWareHouse_Tranport_Report(\r\n      params,\r\n      dispatch\r\n    );\r\n    setReportData(JSON.parse(data.data));\r\n    setReportDataDetail([]);\r\n    PaginationTable();\r\n    //setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const ViewReportDetail = async (item) => {\r\n    //ScrollTop();\r\n    //setDisable(false);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      CustomerID: 17478,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      WhId: item.WHWareHouse_ImportID,\r\n    };\r\n    let a = JSON.stringify(params);\r\n    const data = await ReportAction.APIC_spWareHouse_Tranport_Report_Detail(\r\n      params,\r\n      dispatch\r\n    );\r\n    setReportDataDetail(JSON.parse(data.data));\r\n    PaginationTable();\r\n    //setDisable(true);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12\">\r\n            <div className={ViewList + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> BÁO CÁO CHUYỂN\r\n                  KHO\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form className=\"form-horizontal\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <label>Từ ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeFromDate}\r\n                          value={FromDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <label>Đến ngày</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <DateTimePicker\r\n                          onChange={changeToDate}\r\n                          value={ToDate}\r\n                          className=\"form-control\"\r\n                          format={\"dd/MM/yyyy\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn kho chuyển</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={WareHouse}\r\n                          onChange={onChangeWareHouseList}\r\n                          options={WareHouseList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn lô chuyển</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={Parcel}\r\n                          onChange={onChangeParcel}\r\n                          options={Parcels}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn kho nhận</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={WareHouseRecipient}\r\n                          onChange={onChangeWareHouseListRecipient}\r\n                          options={WareHouseList}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                      <label>Chọn lô nhận</label>\r\n                      <div className=\"form-group bmd-form-group mt0\">\r\n                        <Select\r\n                          value={ParcelRecipient}\r\n                          onChange={onChangeParcelRecipient}\r\n                          options={ParcelsRecipient}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                  <div className=\"col-md-12 text-center\">\r\n                    {/*  <button type=\"reset\" className=\"btn btn-default\">\r\n                        <i className=\"material-icons\">undo</i> Hủy\r\n                      </button> */}\r\n                    <button\r\n                      disabled={!disable}\r\n                      onClick={ViewReport}\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      <i className=\"material-icons\">search</i> Xem báo cáo\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                <div className=\"table-responsive\">\r\n                  <table id=\"dataTable\" className=\"table\">\r\n                    <thead className=\" text-primary\">\r\n                      <tr>\r\n                        <th>STT</th>\r\n                        {/* <th>Tùy chọn</th> */}\r\n                        <th>Mã phiếu nhập</th>\r\n                        <th>Thời gian nhập</th>\r\n                        <th>Người nhập</th>\r\n                        <th>Mã khách hàng</th>\r\n                        <th>Tên khách hàng</th>\r\n                        <th>Mã kho</th>\r\n                        <th>Mã lô</th>\r\n                        <th>Tổng sản phẩm</th>\r\n                        <th>Tổng số lượng</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {ReportData.map((item, index) => {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                           {/*  <td>\r\n                              <button\r\n                                onClick={() => ViewReportDetail(item)}\r\n                                type=\"button\"\r\n                                className=\"btn btn-info btn-sm pull-right\"\r\n                              >\r\n                                <i className=\"material-icons\">loyalty</i> Detail\r\n                              </button>\r\n                            </td> */}\r\n                            <td>{item.WHWareHouse_ImportCode} </td>\r\n                            <td>\r\n                              {FormatDate(item.CreateTimeImport, \"d-k-y H:m\")}\r\n                            </td>\r\n                            <td>{item.OfficerName}</td>\r\n                            <td>{item.CustomerCode}</td>\r\n                            <td>{item.CustomerName}</td>\r\n                            <td>{item.WareHouseCode}</td>\r\n                            <td>{item.WareHouseAreaCode}</td>\r\n                            <td>{item.TotalProducts}</td>\r\n                            <td>{item.TotalNumber}</td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={ViewDetail + \" card\"}>\r\n              <div className=\"card-header card-header-primary\">\r\n                <h4 className=\"card-title\">\r\n                  <i className=\"material-icons\">bubble_chart</i> CHI TIẾT CHUYỂN\r\n                  KHO\r\n                </h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"table-responsive\">\r\n                      <table id=\"dataTable\" className=\"table\">\r\n                        <thead className=\" text-primary\">\r\n                          <tr>\r\n                            <th>STT</th>\r\n                            <th>Mã sản phẩm</th>\r\n                            <th>Tên sản phẩm</th>\r\n                            <th>Số lượng nhập</th>\r\n                            <th>Gía sản phẩm</th>\r\n                            <th>Tên màu</th>\r\n                            <th>Tên kích thước</th>\r\n                            <th>Tên đơn vị tính</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {ReportDataDetail.map((item, index) => {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{item.ProductCode} </td>\r\n                                <td>{item.ProductName}</td>\r\n                                <td>{item.PackageNumber}</td>\r\n                                <td>{item.ProductPrice}</td>\r\n                                <td>{item.ColorName}</td>\r\n                                <td>{item.SizeName}</td>\r\n                                <td>{item.UnitName}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Reports\\OverViewReportComponent.js",["952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n  FormatDateJson,\r\n  FormatMoney,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\nimport { ReportAction } from \"../../Redux/Actions/Reports\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { ChartTemp, CanvasChart } from \"../../Common\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\n/* Load CSS */\r\n\r\nexport const OverViewReportComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const history = useHistory();\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [FromDate, bindFromDate, setFromDate] = useInput(new Date());\r\n  const [ToDate, bindToDate, setToDate] = useInput(new Date());\r\n  const FromDateRef = useRef();\r\n  const ToDateRef = useRef();\r\n\r\n  const [ReportData, setReportData] = useState([]);\r\n  const [DataChart, setDataChart] = useState([]);\r\n  const [ShowList, setShowList] = useState(\"\");\r\n  const [ShowData, setShowData] = useState(\"display-none\");\r\n  const [ShowDetail, setShowDetail] = useState(\"display-none\");\r\n  const [TitleDetail, setTitleDetail] = useState(\"\");\r\n  const [DataChartPie, setDataChartPie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n  }, []);\r\n\r\n  const changeFromDate = (item) => {\r\n    if (item !== null) {\r\n      setFromDate(item);\r\n      if (Math.abs(ToDate - item) / (1000 * 60 * 60 * 24) > 30)\r\n        setToDate(\r\n          new Date(item.getFullYear(), item.getMonth() + 1, item.getDate())\r\n        );\r\n    }\r\n  };\r\n\r\n  const changeToDate = (item) => {\r\n    if (item !== null) {\r\n      let a = ToDate - item;\r\n      if (Math.abs(ToDate - item) / (1000 * 60 * 60 * 24) > 30)\r\n        setFromDate(\r\n          new Date(item.getFullYear(), item.getMonth() - 1, item.getDate())\r\n        );\r\n      setToDate(item);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      accessor: \"item\",\r\n      Cell: (row) => (\r\n        <button\r\n          onClick={(e) => ViewChart(row)}\r\n          type=\"button\"\r\n          className=\"btn btn-info btn-xs\"\r\n        >\r\n          <i className=\"material-icons\">bar_chart</i>\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Ngày tạo\",\r\n      accessor: \"CreateDate\",\r\n      Cell: (obj) => FormatDate(obj.value, \"d-k-y\"),\r\n      // Cell: ({row})  => (<button className=\"btn btn-sm btn-danger\" onClick={e => clickRow({row})}>Edit</button>)\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"TongTien\",\r\n      Cell: (obj) => FormatMoney(obj.value) + \" đ\",\r\n    },\r\n    {\r\n      Header: \"Tổng bill\",\r\n      accessor: \"TongBill\",\r\n    },\r\n    {\r\n      Header: \"Mới tạo\",\r\n      accessor: \"MoiTao\",\r\n    },\r\n    {\r\n      Header: \"Đang lấy hàng\",\r\n      accessor: \"DangLayHang\",\r\n    },\r\n    {\r\n      Header: \"Đã lấy hàng\",\r\n      accessor: \"DaLayHang\",\r\n    },\r\n    {\r\n      Header: \"Đang trung chuyển\",\r\n      accessor: \"DangTrungChuyen\",\r\n    },\r\n    {\r\n      Header: \"Đã nhận lại\",\r\n      accessor: \"DaNhanLai\",\r\n    },\r\n    {\r\n      Header: \"Đang phát\",\r\n      accessor: \"DangPhat\",\r\n    },\r\n    {\r\n      Header: \"Phát thành công\",\r\n      accessor: \"ThanhCong\",\r\n    },\r\n    {\r\n      Header: \"Đang phát lại\",\r\n      accessor: \"PhatLai\",\r\n    },\r\n    {\r\n      Header: \"Hoàn gốc\",\r\n      accessor: \"HoanGoc\",\r\n    },\r\n    {\r\n      Header: \"Có hình\",\r\n      accessor: \"CoHinh\",\r\n    },\r\n  ];\r\n\r\n  const ExportToExcel = () => {\r\n    let dataExcel = ReportData.map((item, index) => {\r\n      return {\r\n        \"Ngày tạo\": FormatDate(item.CreateDate, \"k-d-y\"),\r\n        \"Tổng tiền\": FormatMoney(item.TongTien),\r\n        \"Tổng số vận đơn\": item.TongBill,\r\n        \"Mới tạo\": item.MoiTao,\r\n        \"Đang lấy hàng\": item.DangLayHang,\r\n        \"Đã lấy hàng\": item.DaLayHang,\r\n        \"Đang trung chuyển\": item.DangTrungChuyen,\r\n        \"Đã nhận lại chi nhánh phát\": item.DaNhanLai,\r\n        \"Đang phát\": item.DangPhat,\r\n        \"Thành công\": item.ThanhCong,\r\n        \"Đang phát lại\": item.PhatLai,\r\n        \"Hoàn gốc\": item.HoanGoc,\r\n        \"Vận đơn có hình\": item.CoHinh,\r\n      };\r\n    });\r\n    ExportExcel(\r\n      dataExcel,\r\n      \"Thống kê kết quả giao hàng từ ngày \" +\r\n      FormatDateJson(FromDate, 1) +\r\n      \" đến ngày \" +\r\n      FormatDateJson(ToDate, 1)\r\n    );\r\n  };\r\n\r\n  const ViewReport = async () => {\r\n    //ScrollTop();\r\n    setDisable(false);\r\n    if (FromDate === \"\") {\r\n      Alerterror(\"Chọn từ ngày\");\r\n      return false;\r\n    } else if (ToDate === \"\") {\r\n      Alerterror(\"Chọn đến ngày\");\r\n      return false;\r\n    }\r\n\r\n    let params = {\r\n      CustomerID: CustomerID,\r\n      FromDate: FromDate.toISOString(),\r\n      ToDate: ToDate.toISOString(),\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n    };\r\n    const pr = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spLadingReportDelivery_V1\",\r\n    };\r\n    // call redux saga\r\n    const data = await mainAction.API_spCallServer(pr, dispatch);\r\n    //\r\n    setReportData(data);\r\n    setShowDetail(\"display-none\");\r\n    setShowList(\"\");\r\n    setShowData(\"\");\r\n    setDisable(true);\r\n    if (data !== []) {\r\n      let chart = [];\r\n      data.forEach((element, index) => {\r\n        chart.push({\r\n          label: \"Ngày \" + FormatDate(element.CreateDate, \"d-k-y\"),\r\n          y: element.TongTien,\r\n        });\r\n      });\r\n      setDataChart([{\r\n        type: \"spline\",\r\n        name: \"Doanh thu\",\r\n        legendText: \"Doanh thu\",\r\n        showInLegend: true,\r\n        dataPoints: chart,\r\n      },]);\r\n    } else {\r\n      setDataChart([{\r\n        type: \"spline\",\r\n        name: \"Doanh thu\",\r\n        legendText: \"Doanh thu\",\r\n        showInLegend: true,\r\n        dataPoints: [],\r\n      }]);\r\n    }\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const ViewChart = async (row) => {\r\n    setShowList(\"display-none\");\r\n    setShowData(\"display-none\");\r\n    setShowDetail(\"\");\r\n    setTitleDetail(\"ngày \" + FormatDate(row.original.CreateDate, \"d-k-y\"));\r\n    setDataChartPie([\r\n      { title: \"Mới tạo\", value: row.original.MoiTao, color: \"#008d4c\" },\r\n      { title: \"Đang lấy hàng\", value: row.original.DangLayHang, color: \"#39cccc\" },\r\n      { title: \"Đã lấy hàng\", value: row.original.DaLayHang, color: \"#555299\" },\r\n      { title: \"Đang trung chuyển\", value: row.original.DangTrungChuyen, color: \"#01ff70\" },\r\n      { title: \"Đã nhận lại\", value: row.original.DaNhanLai, color: \"#ff851b\" },\r\n      { title: \"Đang phát\", value: row.original.DangPhat, color: \"#d81b60\" },\r\n      { title: \"Thành công\", value: row.original.ThanhCong, color: \"#005384\" },\r\n      { title: \"Phát lại\", value: row.original.PhatLai, color: \"#db8b0b\" },\r\n      { title: \"Hoàn gốc\", value: row.original.HoanGoc, color: \"#00a7d0\" },\r\n    ]);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12 HomeTitle\"> Kết quả giao hàng</div>\r\n          <div className={ShowList + \" col-md-12\"}>\r\n            <form className=\"form-horizontal\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\"></div>\r\n                <div className=\"col-md-3\">\r\n                  <label>Từ ngày</label>\r\n                  <div className=\"form-group mt0\">\r\n                    {/* <input type=\"date\" className=\"form-control\" format=\"dd/MM/yyyy\" value={FromDate} ref={FromDateRef} {...bindFromDate} /> */}\r\n                    <DateTimePicker className=\"form-control borradius3\" onChange={(date) => changeFromDate(date)} value={FromDate} format=\"dd/MM/yyyy\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <label>Đến ngày</label>\r\n                  <div className=\"form-group mt0\">\r\n                    {/* <input type=\"date\" className=\"form-control\" format=\"dd/MM/yyyy\" value={ToDate} ref={ToDateRef} {...bindToDate} /> */}\r\n                    <DateTimePicker className=\"form-control borradius3\" onChange={(date) => changeToDate(date)} value={ToDate} format=\"dd/MM/yyyy\" />\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n          <div className={ShowDetail + \" col-md-12\"}>\r\n            <div className=\"card-header card-header-primary\">\r\n              <h4 className=\"card-title\">\r\n                <i class=\"material-icons mt10\">insights</i> Chi tiết{\" \"}\r\n                {TitleDetail}\r\n                <button\r\n                  onClick={(e) => {\r\n                    setShowList(\"\");\r\n                    setShowData(\"\");\r\n                    setShowDetail(\"display-none\");\r\n                  }}\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm text-transform btn-refesh pull-right\"\r\n                >\r\n                  <i className=\"material-icons\">undo</i> Trở về\r\n                </button>\r\n              </h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <ChartTemp type=\"pie\" data={DataChartPie} />\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <p>\r\n                    <span className=\"chart-color bg-green\"> </span> Mới tạo\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-teal\"> </span> Đang lấy\r\n                    hàng\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-purple\"> </span> Đã lấy\r\n                    hàng\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-lime\"> </span> Đang trung\r\n                    chuyển\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-orange\"> </span> Đã nhận\r\n                    lại\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <p>\r\n                    <span className=\"chart-color bg-maroon\"> </span> Đang phát\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-blue\"> </span> Phát thành\r\n                    công\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-yellow\"> </span> Đang phát\r\n                    lại\r\n                  </p>\r\n                  <p>\r\n                    <span className=\"chart-color bg-aqua\"> </span> Hoàn gốc\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={ShowList + \" col-md-12 text-center margin-top-10\"}>\r\n          <button\r\n            disabled={!disable}\r\n            onClick={ViewReport}\r\n            type=\"button\"\r\n            className=\"btn btn-sm text-transform btn-save\"\r\n          >\r\n            <i className=\"material-icons\">search</i> Xem báo cáo\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={ExportToExcel}\r\n            className=\"btn btn-sm text-transform btn-refeshno margin-left-10\"\r\n          >\r\n            <img src=\"../assets/img/iconexcel.png\" className='iconex' />\r\n            Xuất Excel\r\n          </button>\r\n        </div>\r\n        <div className={ShowData + \" row cardcus margin-top-20\"}>\r\n          <div className=\"col-md-12\">\r\n            <div className=\"table-responsive\">\r\n              <DataTable data={ReportData} columns={columns} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 mt30\">\r\n            <p className=\"text-center bold\">\r\n              THỐNG KÊ DOANH THU THEO NGÀY\r\n            </p>\r\n            {/* <ChartTemp type=\"line\" data={DataChart} /> */}\r\n            <CanvasChart data={DataChart} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\V1LadingCreateComponent.js",["970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050"],"import React, { useState, useEffect, useRef, useDebugValue } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  SelectCity,\r\n  SelectService,\r\n  SelectDistrict,\r\n  SelectWard,\r\n  SelectSender,\r\n  LadingDetail,\r\n  SelectRecipient,\r\n  FormManagerAddress\r\n} from \"../../Common\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  Alertwarning,\r\n  FormatMoney,\r\n  FormatDateJson,\r\n  ValidPhone,\r\n  FormatNumber,\r\n  GetLatLngGoogle,\r\n  GetCookie,\r\n  RemoveAccents,\r\n  ValidNumber,\r\n  RegExpAddress,\r\n  RemoveExtraSpace\r\n} from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { Service } from \"../../Redux/Actions/Category\";\r\nimport { Lading } from \"../../Redux/Actions/Category\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport Barcode from \"react-barcode\";\r\nimport { Link } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\n\r\nexport const V1LadingCreateComponent = () => {\r\n  useEffect(() => {\r\n    if (Customer === null || Customer === {}) {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n  //#region ********** KHAI BÁO CÁC BIẾN DỮ LIỆU **********\r\n\r\n  //#region CÁC HÀM KHAI BÁO CHÍNH\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [Title, setTitle] = useState(\"TẠO ĐƠN HÀNG MỚI\");\r\n  const [Customer, setCustomer] = useState(GetCookie(\"All\"));\r\n\r\n  //#endregion CÁC HÀM KHAI BÁO CHÍNH\r\n\r\n  //#region KHAI BÁO CHO FORM TẠO ĐƠN\r\n\r\n  const [ShowSender, setShowSender] = useState(\"\");\r\n  const [ShowReceipient, setShowReceipient] = useState(\"\");\r\n\r\n  const [LadingId, setLadingId] = useState(0);\r\n  const [LadingCode, setLadingCode] = useState(\"\");\r\n\r\n  //#region Thông tin khách hàng\r\n\r\n  const [PostOfficeId, setPostOfficeId] = useState(Customer?.PostOfficeId);\r\n\r\n  //#endregion Thông tin khách hàng\r\n\r\n  //#region Người gửi thực tế\r\n  const [OnLoadSender, setOnloadSender] = useState(0);\r\n  const [SenderMeno, setSenderMeno] = useState({\r\n    value: 0,\r\n    label: Customer?.CustomerName + \" - \" + Customer?.Phone + \" - \" + Customer?.Address,\r\n    obj: {\r\n      NameSend: Customer?.CustomerName,\r\n      PhoneSend: Customer?.Phone,\r\n      AddressFull: Customer?.Address,\r\n      CityId: Customer?.City,\r\n      CityName: Customer?.CityName,\r\n      DistrictiId: Customer?.District,\r\n      DistrictyName: Customer?.DistrictName,\r\n      WarId: Customer?.Ward,\r\n      WarName: Customer?.WardName,\r\n      Street_Number: Customer?.Address.replaceAll(\", \" + Customer?.Ward, \"\").replaceAll(\", \" + Customer?.District, \"\").replaceAll(\", \" + Customer?.City, \"\")\r\n    }\r\n  });\r\n  const [SenderName, bindSenderName, setSenderName] = useInput(\r\n    Customer?.CustomerName\r\n  );\r\n  const [SenderPhone, bindSenderPhone, setSenderPhone] = useInput(\r\n    Customer?.Phone\r\n  );\r\n  const [SenderAddress, bindSenderAddress, setSenderAddress] = useInput(\r\n    Customer?.Address\r\n  );\r\n  const [SenderStreet, bindSenderStreet, setSenderStreet] = useInput(\r\n    Customer?.Address\r\n  );\r\n  const [CityFrom, setCityFrom] = useState(0);\r\n  const [CityFromName, setCityFromName] = useState(\r\n    Customer?.CityName\r\n  );\r\n  const [DistrictFrom, setDistrictFrom] = useState(\r\n    Customer?.District\r\n  );\r\n  const [DistrictFromName, setDistrictFromName] = useState(\r\n    Customer?.DistrictName\r\n  );\r\n  const [WardFrom, setWardFrom] = useState(\r\n    Customer?.Ward\r\n  );\r\n  const [WardFromName, setWardFromName] = useState(\r\n    Customer?.WardName\r\n  );\r\n\r\n  const SenderNameRef = useRef();\r\n  const SenderPhoneRef = useRef();\r\n  const SenderAddressRef = useRef();\r\n  const SenderStreetRef = useRef();\r\n\r\n  const [IsSaveSender, setIsSaveSender] = useState(false);\r\n  //#endregion Người gửi thực tế\r\n\r\n  //#region Người nhận\r\n  const [AddressSetupId, setAddressSetupId] = useState(0);\r\n  const [OnLoadRecipient, setOnLoadRecipient] = useState(0);\r\n  const [RecipientMeno, setRecipientMeno] = useState({});\r\n  const [RecipientName, bindRecipientName, setRecipientName] = useInput(\"\");\r\n  const [RecipientPhone, bindRecipientPhone, setRecipientPhone] = useInput(\"\");\r\n  const [RecipientAddress, bindRecipientAddress, setRecipientAddress] = useInput(\"\");\r\n  const [RecipientAddressOld, setRecipientAddressOld] = useState(\"\");\r\n  const [RecipientStreet, bindRecipientStreet, setRecipientStreet] = useInput(\"\");\r\n  const [RecipientCompany, bindRecipientCompany, setRecipientCompany] = useInput(\"\");\r\n  const [CityTo, setCityTo] = useState(0);\r\n  const [DistrictTo, setDistrictTo] = useState(0);\r\n  const [WardTo, setWardTo] = useState(0);\r\n  const [CityToName, setCityToName] = useState(\"\");\r\n  const [DistrictToName, setDistrictToName] = useState(\"\");\r\n  const [WardToName, setWardToName] = useState(\"\");\r\n  const [Lat, setLat] = useState(0);\r\n  const [Lng, setLng] = useState(0);\r\n\r\n  const RecipientNameRef = useRef();\r\n  const RecipientPhoneRef = useRef();\r\n  const RecipientAddressRef = useRef();\r\n  const RecipientStreetRef = useRef();\r\n  const RecipientCompanyRef = useRef();\r\n  //#endregion Người nhận\r\n\r\n  //#region Thông tin hàng hóa\r\n  const [Description, bindDescription, setDescription] = useInput(\"\");\r\n  const [ParnerCode, bindParnerCode, setParnerCode] = useInput(\"\");\r\n  const [Weight, bindWeight, setWeight] = useInput(\"\");\r\n  const [Width, bindWidth, setWidth] = useInput(\"\");\r\n  const [Noted, bindNoted, setNoted] = useInput(\"\");\r\n  const [NumberItem, bindNumberItem, setNumberItem] = useInput(\"1\");\r\n  const [Height, bindHeight, setHeight] = useInput(\"\");\r\n  const [Length, bindLength, setLength] = useInput(\"\");\r\n  const [Mass, bindMass, setMass] = useInput(\"\");\r\n  const DescriptionRef = useRef();\r\n  const ParnerCodeRef = useRef();\r\n  const WeightRef = useRef();\r\n  const WidthRef = useRef();\r\n  const NotedRef = useRef();\r\n  const NumberItemRef = useRef();\r\n  const HeightRef = useRef();\r\n  const LengthRef = useRef();\r\n  const MassRef = useRef();\r\n  //#endregion Thông tin hàng hóa\r\n\r\n  //#region Sản phẩm\r\n  const [ProductCode, bindProductCode, setProductCode] = useInput(\"\");\r\n  const [ProductName, bindProductName, setProductName] = useInput(\"\");\r\n  const [ProductQuality, bindProductQuality, setProductQuality] = useInput(\"\");\r\n  const [ProductDes, bindProductDes, setProductDes] = useInput(\"\");\r\n  const ProductCodeRef = useRef();\r\n  const ProductNameRef = useRef();\r\n  const ProductQualityRef = useRef();\r\n  const ProductDesRef = useRef();\r\n  //#endregion Sản phẩm\r\n\r\n  //#region Dịch vụ chính\r\n  const [ServiceID, setServiceID] = useState(0);\r\n  const [ServiceName, setServiceName] = useState(\"\");\r\n  //#endregion Dịch vụ chính\r\n\r\n  //#region Dịch vụ GTGT\r\n\r\n  const [PhuQuocIsLand, bindPhuQuocIsLand, setPhuQuocIsLand] = useInput(\"\");\r\n  const [IsProtocol, bindIsProtocol, setIsProtocol] = useInput(0);\r\n  const [IsHD, bindIsHD, setIsHD] = useInput(0);\r\n  const [HD, bindHD, setHD] = useInput(0);\r\n  const [IsDelivery, bindIsDelivery, setIsDelivery] = useInput(0);\r\n  const [NumberCoCheck, bindNumberCoCheck, setNumberCoCheck] = useInput(0); // same time check\r\n  const [IsNumberCoCheck, bindIsNumberCoCheck, setIsNumberCoCheck] = useInput(\r\n    0\r\n  ); // same time check\r\n  const [SupperMarket, bindSupperMarket, setSupperMarket] = useInput(\"\");\r\n  const HDRef = useRef();\r\n  const NumberCoCheckRef = useRef();\r\n\r\n  const [IsRunservice, setIsRunservice] = useState(1);\r\n\r\n  const [ServiceGTGTId, setServiceGTGTId] = useState(\"\");\r\n  const [ServiceGTGTName, setServiceGTGTName] = useState(\"\");\r\n  const [RecipientId, setRecipientId] = useState(0);\r\n\r\n  //#endregion Dịch vụ GTGT\r\n\r\n  //#region Hình thức thanh toán\r\n  const [PaymentType, setPaymentType] = useState(Customer?.Type === 1 ? 0 : 1);\r\n  const [PaymentTypeCode, setPaymentTypeCode] = useState(Customer?.Type === 1 ? \"TTCT\" : \"NNTT\");\r\n  //#endregion Hình thức thanh toán\r\n\r\n  //#region Thu hộ & khai giá\r\n  const [Cod, bindCod, setCod] = useInput(\"0\");\r\n  const [CODPrice, bindCODPrice, setCODPrice] = useInput(\"0\");\r\n  const [Insured, bindInsured, setInsured] = useInput(\"0\");\r\n  const [InsuredPrice, bindInsuredPrice, setInsuredPrice] = useInput(\"0\");\r\n\r\n  const CodRef = useRef();\r\n  const CODPriceRef = useRef();\r\n  const InsuredRef = useRef();\r\n  const InsuredPriceRef = useRef();\r\n  //#endregion Thu hộ & khai giá\r\n\r\n  //#region Chi tiết cước phí\r\n  const [PPXDPrice, bindPPXDPrice, setPPXDPrice] = useInput(\"\");\r\n  const [PriceMain, bindPriceMain, setPriceMain] = useInput(\"\");\r\n  const [THBBPrice, bindTHBBPrice, setTHBBPrice] = useInput(\"\");\r\n  const [HDPrice, bindHDPrice, setHDPrice] = useInput(\"\");\r\n  const [PTTPrice, bindPTTPrice, setPTTPrice] = useInput(\"\");\r\n  const [VATPrice, bindVATPrice, setVATPrice] = useInput(\"\");\r\n  const [BPPrice, bindBPPrice, setBPPrice] = useInput(\"\");\r\n  const [NPDKPrice, bindNPDKPrice, setNPDKPrice] = useInput(\"\");\r\n  const [HQKPrice, bindHQKPrice, setHQKPrice] = useInput(\"\");\r\n  const PPXDPriceRef = useRef();\r\n  const PriceMainRef = useRef();\r\n  const InsuredPricesRef = useRef();\r\n  const THBBPriceRef = useRef();\r\n  const HDPriceRef = useRef();\r\n  const PTTPriceRef = useRef();\r\n  const VATPriceRef = useRef();\r\n  const CODPricesRef = useRef();\r\n  const BPPriceRef = useRef();\r\n  const SearchcodeRef = useRef();\r\n  const NPDKPriceRef = useRef();\r\n  const HQKPriceRef = useRef();\r\n  const [OnSiteDeliveryPrice, setOnSiteDeliveryPrice] = useState(0);\r\n  const [OnSiteDeliveryPriceMoney, setOnSiteDeliveryPriceMoney] = useState(0);\r\n\r\n  const [Amount, bindAmount, setAmount] = useInput(\"\");\r\n  const AmountRef = useRef();\r\n\r\n  const [Dealine, bindDealine, setDealine] = useInput(\"\");\r\n  const DealineRef = useRef();\r\n  //#endregion  Chi tiết cước phí\r\n\r\n  //#endregion KHAI BÁO CHO FORM TẠO ĐƠN\r\n\r\n  //#region KHAI BÁO CÁC BIẾN ACTION ĐỂ LOAD DATA LÊN FORM\r\n\r\n  const [ServiceGTGT, setServiceGTGT] = useState([]);\r\n  const [getCustomerRecipientLoad, setCustomerRecipientLoad] = useState([]);\r\n  const [dataAddress, setdataAddress] = useState([]);\r\n  const [dataLading, setdataLading] = useState([]);\r\n\r\n  const [IsAcctive, setIsAcctive] = useState(0);\r\n  const [IsLoad, setIsLoad] = useState(false); // active input form when click button edit\r\n  const [IsLoadWardTo, setIsLoadWardTo] = useState(false); // active input form when click button edit\r\n  const [IsLoadDistrictTo, setIsLoadDistrictTo] = useState(false); // active input form when click button edit\r\n  //#endregion KHAI BÁO CÁC BIẾN ACTION ĐỂ LOAD DATA LÊN FORM\r\n\r\n  //#region KHAI BÁO CÁC BIẾN DISPLAY\r\n\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [disablerecipient, setdisablerecipient] = useState(false); // disable button\r\n  const [showinggtgt, setshowinggtgt] = useState(false); // display none div  gtgt\r\n  const [showingdetail, setshowingdetail] = useState(false); // display none\r\n\r\n  //#endregion KHAI BÁO CÁC BIẾN DISPLAY\r\n\r\n  //#region KHAI BÁO CÁC BIẾN CHO FORM IN\r\n\r\n  const [State, setState] = useState([]);\r\n  const [DataPrint, setDataPrint] = useState([]);\r\n  const [IsChecked, setIsChecked] = useState(false);\r\n  const [sheetprint, bindsheetprint, setsheetprint] = useInput(2);\r\n  const sheetprintRef = useRef();\r\n\r\n  //#endregion KHAI BÁO CÁC BIẾN CHO FORM IN\r\n\r\n  const [phoneReg, setPhoneReg] = useState(\"\");\r\n  const [phoneReg2, setPhoneReg2] = useState(\"\");\r\n  const [phoneReg3, setPhoneReg3] = useState(\"\");\r\n\r\n\r\n  //#endregion ********** KHAI BÁO CÁC BIẾN DỮ LIỆU **********\r\n\r\n  //#region ********** USE EFFECT **********\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    if (Customer === null || Customer === {}) {\r\n      history.push(\"/\");\r\n    }\r\n    APIC_spLadingGetMany();\r\n    APIC_spServiceGetMany();\r\n    setCityFrom(Customer?.City);\r\n    ReadLadingDraft();\r\n    //setIsChangeWard(1);\r\n  }, []);\r\n\r\n  //this for APIC_spServiceGetMany no run more time when click, is just one run\r\n  useEffect(() => {\r\n    IsRunservice === 1 ? APIC_spServiceGetMany() : Norun();\r\n  }, [IsRunservice]);\r\n\r\n  /* Chose item from select common province,district,ward*/\r\n\r\n  const Norun = () => {\r\n    console.log(\"No Run\");\r\n  };\r\n\r\n  //#endregion ********** USE EFFECT **********\r\n\r\n  //#region ********** THÔNG TIN ĐƠN HÀNG DANH SÁCH **********\r\n\r\n  //#region HÀM GET DANH SÁCH VẬN ĐƠN MỚI TẠO\r\n\r\n  //conveert date time for load list\r\n  const convert = (str) => {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  };\r\n\r\n  const APIC_spLadingGetMany = async () => {\r\n    let today = new Date(),\r\n      ToDate =\r\n        today.getFullYear() +\r\n        \"-\" +\r\n        (today.getMonth() + 1) +\r\n        \"-\" +\r\n        today.getDate(),\r\n      FromDate = convert(today.setDate(today.getDate() - 7));\r\n\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      LadingCode: \"\",\r\n      FromDate: FromDate,\r\n      ToDate: ToDate,\r\n      CustomerID: Customer?.CustomerID,\r\n      CustomerCode: Customer?.CustomerCode,\r\n      Status: 9,\r\n      Skip: 0,\r\n      Take: 5000,\r\n    };\r\n\r\n    try {\r\n      let prList = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spLadingGetManyJsonAuto\",\r\n        API_key: APIKey,\r\n      };\r\n      const data = await mainAction.API_spCallServer(prList, dispatch);\r\n      setdataLading(data);\r\n      //setDisable(false); // disable button\r\n      setIsRunservice(1);\r\n      mainAction.LOADING({ IsLoading: false }, dispatch);\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      //setDisable(false); // disable button\r\n    }\r\n  };\r\n\r\n  //#endregion HÀM GET DANH SÁCH VẬN ĐƠN MỚI TẠO\r\n\r\n  //#region HÀM XEM CHI TIẾT ĐƠN HÀNG\r\n  const [DetailId, setDetailId] = useState(0);\r\n  const GoToDetail = async (item) => {\r\n    let LadingDetail = item._original;\r\n    setDetailId(item._original.Id);\r\n  };\r\n\r\n  //#endregion HÀM XEM CHI TIẾT ĐƠN HÀNG\r\n\r\n  //#region HÀM XÓA VẬN ĐƠN\r\n\r\n  const APIC_spLadingRemove = async (item) => {\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      LadingId: parseInt(item._original.Id),\r\n      CustomerId: Customer?.CustomerID,\r\n      Notes: \"KHÁCH HÀNG HỦY BILL TRÊN WEBSITE CUSTOMER\",\r\n    };\r\n    try {\r\n      const data = await Lading.APIC_spLadingRemove(params, dispatch);\r\n      setdataLading(dataLading.filter((p) => p.Id !== item._original.Id));\r\n      Alertsuccess(data);\r\n      //APIC_spLadingGetMany();\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      //setDisable(false); // disable button\r\n    }\r\n  };\r\n\r\n  //#endregion HÀM XÓA VẬN ĐƠN\r\n\r\n  //#region HÀM DANH SÁCH VẬN ĐƠN\r\n\r\n  const columns = [\r\n    {\r\n      Cell: (row) => (\r\n        <div className=\"form-check\" style={{ padding: \"0 15px\" }}>\r\n          <label className=\"form-check-label\" style={{ position: \"unset\" }}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id={row.original.Id}\r\n              value={row.original.Id}\r\n              checked={row.original.Checked}\r\n              onChange={(e) => handleChange(row)}\r\n            />\r\n            <span className=\"form-check-sign\" htmlFor={row.original.Id}>\r\n              <span className=\"check\"></span>\r\n            </span>\r\n          </label>\r\n        </div>\r\n      ),\r\n      maxWidth: 40,\r\n      textAlign: \"center\",\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      Cell: ({ row }) => (\r\n        <span>\r\n          <i\r\n            className=\"fa fa-eye green button\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#modalDetail\"\r\n            onClick={() => GoToDetail(row)}\r\n            title=\"Chi tiết\"\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-edit yellow button\"\r\n            onClick={() => APIC_spLadingEdit(row)}\r\n            title=\"Sửa\"\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-trash red button\"\r\n            onClick={() =>\r\n              window.confirm(\"Xác nhận xóa vận đơn \" + row.Code + \"?\") &&\r\n              APIC_spLadingRemove(row)\r\n            }\r\n            title=\"Xóa\"\r\n          ></i>\r\n        </span>\r\n      ),\r\n      minWidth: 100,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Mã vận đơn\",\r\n      accessor: \"Code\",\r\n      minWidth: 150,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Mã đối tác\",\r\n      accessor: \"PartnerCode\",\r\n      minWidth: 150,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Thời gian gửi\",\r\n      accessor: \"CreateDate\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Ước tính nhận\",\r\n      accessor: \"DealineTime\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value, 1)}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Người nhận\",\r\n      accessor: \"RecipientName\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tỉnh đi\",\r\n      accessor: \"CitySendCode\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tỉnh đến\",\r\n      accessor: \"CityRecipientCode\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Dịch vụ\",\r\n      accessor: \"ServiceName\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Trọng lượng\",\r\n      accessor: \"Weight\",\r\n      Cell: (item) => <span>{FormatNumber(item.value)} (gram)</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Số kiện\",\r\n      accessor: \"Number\",\r\n      Cell: (item) => <span>{FormatNumber(item.value)}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Số khối\",\r\n      accessor: \"Mass\",\r\n      Cell: (item) => <span>{item.value} (cbm)</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Thu hộ\",\r\n      accessor: \"COD\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Khai giá\",\r\n      accessor: \"Insured\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"Amount\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Hình thức thanh toán\",\r\n      accessor: \"PaymentString\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  //#endregion HÀM DANH SÁCH VẬN ĐƠN\r\n\r\n  //#region HÀM IN BILL\r\n  const [pageprint, setpageprint] = useState([0, 1]);\r\n  const [HtmlPrint, setHtmlPrint] = useState(null);\r\n  const APIC_spLadingGetDataPrint = async () => {\r\n    if (DataPrint.length === 0) {\r\n      Alerterror(\"Vui lòng chọn vận đơn cần in\");\r\n      return;\r\n    }\r\n\r\n    //#region SET HTML PRINT\r\n    await setHtmlPrint(\r\n      DataPrint.map((item, index) => {\r\n        return (\r\n          <div>\r\n            {pageprint.map((detail, idele) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"bill\"\r\n                  style={{\r\n                    width: \"710px\",\r\n                    height: \"1050px\",\r\n                    pageBreakBefore: \"always\",\r\n                    border: \"2px solid #000\",\r\n                  }}\r\n                >\r\n                  {item.PaymentType === 1 && item.COD > 0 ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        zIndex: 10,\r\n                        opacity: 0.4,\r\n                        marginTop: \"35vh\",\r\n                        marginLeft: \"20vw\",\r\n                        fontSize: \"120px\",\r\n                        fontWeight: 600,\r\n                        transform: \"rotate(70deg)\",\r\n                        fontFamily: \"Arial\",\r\n                      }}\r\n                    >\r\n                      COD-TTĐN\r\n                    </div>\r\n                  ) : null}\r\n                  {item.PaymentType !== 1 && item.COD > 0 ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        zIndex: 10,\r\n                        opacity: 0.4,\r\n                        marginTop: \"35vh\",\r\n                        marginLeft: \"30vw\",\r\n                        fontSize: \"120px\",\r\n                        fontWeight: 600,\r\n                        transform: \"rotate(60deg)\",\r\n                        fontFamily: \"Arial\",\r\n                      }}\r\n                    >\r\n                      COD\r\n                    </div>\r\n                  ) : null}\r\n                  {item.PaymentType === 1 && item.COD === 0 ? (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        zIndex: 10,\r\n                        opacity: 0.4,\r\n                        marginTop: \"35vh\",\r\n                        marginLeft: \"30vw\",\r\n                        fontSize: \"120px\",\r\n                        fontWeight: 600,\r\n                        transform: \"rotate(60deg)\",\r\n                        fontFamily: \"Arial\",\r\n                      }}\r\n                    >\r\n                      TTĐN\r\n                    </div>\r\n                  ) : null}\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      fontWeight: \"600\",\r\n                      borderBottom: \"2px solid #ddd\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td style={{ width: \"180px\", verticalAlign: \"top\" }}>\r\n                          <img\r\n                            src=\"https://customer.netco.com.vn/assets/img/logonetco.jpg\"\r\n                            style={{ width: \"180px\", height: \"70px\" }}\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <div\r\n                            style={{\r\n                              width: \"100%\",\r\n                              position: \"relative\",\r\n                              display: \"inline-block\",\r\n                              height: \"40px\",\r\n                              marginBottom: \"5px\",\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              <Barcode value={item.Code} height=\"35\" />\r\n                            </div>\r\n                          </div>\r\n                          <br />\r\n                          <br />\r\n                          <p>\r\n                            BIÊN BẢN BÀN GIAO\r\n                            <br />\r\n                            (DELIVERY RECEIPTS)\r\n                          </p>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            width: \"160px\",\r\n                            verticalAlign: \"top\",\r\n                            marginRight: \"1px\",\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src=\"https://customer.netco.com.vn/assets/img/iso9001.jpg\"\r\n                            style={{ width: \"160px\", height: \"70px\" }}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      borderBottom: \"2px solid #ddd\",\r\n                    }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\"\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td rowspan=\"2\" style={{ borderRight: \"1px solid #ddd\" }}>\r\n                          <div\r\n                            style={{\r\n                              marginLeft: \"--20px\",\r\n                              writingMode: \"tb-rl\",\r\n                            }}\r\n                          >\r\n                            <b>INFORMATION</b>\r\n                          </div>\r\n                        </td>\r\n                        <td\r\n                          style={{\r\n                            borderBottom: \"2px solid #ddd\",\r\n                            width: \"350px\",\r\n                            borderRight: \"1px solid #ddd\",\r\n                          }}\r\n                        >\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            Ngày gửi hàng <i>(Date)</i>\r\n                          </b>{\": \"}\r\n                          {FormatDateJson(item.CreateDate, 1)}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            Số kiện <i>(Package)</i>\r\n                          </b>{\": \"}\r\n                          {FormatMoney(item.Number)}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            Nội dung hàng hóa <i>(Document,Goods)</i>\r\n                          </b>\r\n                          {\": \"}\r\n                          {item.Description !== undefined ? item.Description : \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            Dịch vụ bưu chính <i>((Postal services)</i>\r\n                          </b>\r\n                          : <span>{item.ServiceName}</span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            Dịch vụ cộng thêm <i>(Extra services)</i>\r\n                          </b>\r\n                          :{\" \"}\r\n                          {item.ServiceGTGTName !== undefined\r\n                            ? item.ServiceGTGTName\r\n                            : \"\"}\r\n                          <br />\r\n                        </td>\r\n                        <td colspan=\"\" style={{ borderBottom: \"2px solid #ddd\" }}>\r\n                          <lbl\r\n                            style={{ display: \"inline-block\", width: \"225px\" }}\r\n                          >\r\n                            {(item.Mass === 0 || item.Mass === undefined) ? \"Trọng lượng\" : \"Khối lượng\"}{\" \"}\r\n                            <i>{(item.Mass === 0 || item.Mass === undefined) ? \"(Weight)\" : \"(Mass)\"}</i>\r\n                          </lbl>\r\n                          :{\" \"}\r\n                          <b>\r\n                            {(item.Mass === 0 || item.Mass === undefined)\r\n                              ? FormatMoney(item.Weight)\r\n                              : item.Mass}{\" \"}\r\n                            {(item.Mass === 0 || item.Mass === undefined) ? \"(gram)\" : \"(CBM)\"}\r\n                          </b>\r\n                          <br />\r\n                          <lbl\r\n                            style={{ display: \"inline-block\", width: \"225px\" }}\r\n                          >\r\n                            HT thanh toán <i>(Payment)</i>\r\n                          </lbl>\r\n                          :{\" \"}\r\n                          <b>\r\n                            {item.PaymentString !== undefined\r\n                              ? item.PaymentString\r\n                              : \"Khác\"}\r\n                          </b>\r\n                          <br />\r\n                          <lbl\r\n                            style={{ display: \"inline-block\", width: \"220px\" }}\r\n                          >\r\n                            COD\r\n                          </lbl>\r\n                          : <b>{FormatMoney(item.COD)} đ</b>\r\n                          <br />\r\n                          <lbl\r\n                            style={{ display: \"inline-block\", width: \"220px\" }}\r\n                          >\r\n                            Số tiền phải thu <i>(Total receivables)</i>\r\n                          </lbl>\r\n                          :{\" \"}\r\n                          <b>\r\n                            {FormatMoney(\r\n                              item.PaymentType == 1 ? (item.COD + item.Amount) : item.COD\r\n                            )}{\" \"}\r\n                            đ\r\n                          </b>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colspan=\"4\" style={{ position: \"relative\" }}>\r\n                          <b>\r\n                            THÔNG TIN HÀNG HÓA <i>(PARCEL INFORMATION)</i>\r\n                          </b>\r\n                          : <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Mã sản phẩm <i>(Product Code)</i>\r\n                          </b>\r\n                          : {item.ProductCode ?? \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            <b>\r\n                              - Tên sản phẩm <i>((Product Name)</i>\r\n                            </b>\r\n                          </b>\r\n                          : {item.ProductName ?? \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Số lượng <i>(Number)</i>\r\n                          </b>{\": \"}\r\n                          {item.ProductQuanlity ?? \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Seri sản phẩm <i>(Product Seri)</i>\r\n                          </b>\r\n                          : <span>{item.ProductDes ?? \"\"}</span>\r\n                          <br />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colspan=\"4\">\r\n                          <u>\r\n                            <b>* LƯU Ý GIAO (DELIVERY NOTE):</b>\r\n                          </u>{\" \"}\r\n                          <span>\r\n                            {item.Noted !== undefined ? item.Noted : \"\"}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      borderBottom: \"2px solid #ddd\",\r\n                    }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\"\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td style={{ borderRight: \"1px solid #ddd\" }}>\r\n                          <div\r\n                            style={{\r\n                              marginLeft: \"--20px\",\r\n                              writingMode: \"tb-rl\",\r\n                            }}\r\n                          >\r\n                            <b>SENDER</b>\r\n                          </div>\r\n                        </td>\r\n                        <td style={{ position: \"relative\" }}>\r\n                          <b>THÔNG TIN NGƯỜI GỬI (SENDER INFORMATION)</b>: <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Mã khách hàng <i>(Customer code)</i>\r\n                          </b>\r\n                          : {item.CustomerCode}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Người gửi <i>(Sender's name)</i>\r\n                          </b>\r\n                          :{\" \"}\r\n                          {item.CustomerName_Reality !== undefined\r\n                            ? item.CustomerName_Reality\r\n                            : item.CustomerName}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Điện thoại <i>(Phone)</i>\r\n                          </b>\r\n                          :{\" \"}\r\n                          <span>\r\n                            {item.CustomerPhone_Reality !== undefined\r\n                              ? item.CustomerPhone_Reality\r\n                              : item.CustomerPhone}\r\n                          </span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Địa chỉ <i>(Address)</i>\r\n                          </b>\r\n                          :{\" \"}\r\n                          {item.CustomerAddress_Reality !== undefined\r\n                            ? item.CustomerAddress_Reality\r\n                            : item.CustomerAddress}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Tỉnh/TP <i>(Province/City)</i>\r\n                          </b>\r\n                          : {item.CitySendCode}\r\n                          <br />\r\n                          <span\r\n                            style={{\r\n                              padding: \"2px 10px\",\r\n                              fontWeight: \"bold\",\r\n                              fontSize: \"45px\",\r\n                              borderTop: \"2px solid #000\",\r\n                              borderBottom: \"2px solid #000\",\r\n                              borderLeft: \"2px solid #000\",\r\n                              top: \"-2px\",\r\n                              right: 0,\r\n                              position: \"absolute\",\r\n                            }}\r\n                          >\r\n                            {item.POCodeFrom}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      borderBottom: \"2px solid #ddd\",\r\n                    }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\"\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td style={{ borderRight: \"1px solid #ddd\" }}>\r\n                          <div\r\n                            style={{\r\n                              marginLeft: \"--20px\",\r\n                              writingMode: \"tb-rl\",\r\n                            }}\r\n                          >\r\n                            <b>RECEIVER</b>\r\n                          </div>\r\n                        </td>\r\n                        <td style={{ position: \"relative\" }}>\r\n                          <b>THÔNG TIN NGƯỜI NHẬN (RECEIVER'S INFORMATION)</b>:{\" \"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Người nhận <i>(Recipient’s name)</i>\r\n                          </b>\r\n                          : {item.RecipientName}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Điện thoại <i>(Phone)</i>\r\n                          </b>\r\n                          : {item.RecipientPhone}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Công ty nhận <i>(Recipient’s company)</i>\r\n                          </b>\r\n                          :{\" \"}\r\n                          <span>\r\n                            {item.RecipientCompany !== undefined\r\n                              ? item.RecipientCompany\r\n                              : \"\"}\r\n                          </span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Số nhà, đường <i>(No., Street)</i>\r\n                          </b>\r\n                          :{\" \"}\r\n                          {item.Street !== undefined\r\n                            ? item.Street\r\n                            : item.RecipientAddress}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Phường/Xã <i>(Ward/Commune)</i>\r\n                          </b>\r\n                          : {item.Wards}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>\r\n                            - Quận/Huyện <i>(District)</i>\r\n                          </b>\r\n                          : {item.District}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"255px\" }}>\r\n                            - Tỉnh/TP <i>(Province/City)</i>\r\n                          </b>\r\n                          : {item.CityRecipientCode}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <table style={{\r\n                    width: \"100%\", borderBottom: \"2px solid #ddd\",\r\n                    textAlign: \"center\",\r\n                    fontWeight: \"bold\", fontSize: \"45px\",\r\n                  }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\">\r\n                    <tbody><tr><td>{item.LocationTo}</td></tr></tbody>\r\n                  </table>\r\n                  <table\r\n                    style={{ width: \"100%\" }}\r\n                    cellspacing=\"0\"\r\n                    cellpadding=\"5\"\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td colspan=\"2\">\r\n                          Bên nhận hàng xác nhận Bên giao hàng đã giao cho Bên\r\n                          nhận hàng đúng, đủ nội dung như trên/\r\n                          <br />\r\n                          The consigneee confirms that the Delivery company has\r\n                          delivered to the consignee the correct and sufficient\r\n                          content as above.\r\n                          <br />\r\n                          Bên bản được lập thành 02 bản, mỗi bên giữ 01 bản có giá\r\n                          trị như nhau/\r\n                          <br />\r\n                          The Delivery record are made into 02 copies, each party\r\n                          keeps 01 copy with the same value.\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ textAlign: \"center\", width: \"50%\" }}>\r\n                          <br />\r\n                          <b>BÊN GIAO HÀNG</b> <br />\r\n                          <i>(Delivery Company)</i>\r\n                        </td>\r\n                        <td style={{ textAlign: \"center\", width: \"50%\" }}>\r\n                          Ngày (Date) ..... / ..... / 20.....\r\n                          <br />\r\n                          <b>BÊN NHẬN HÀNG</b>\r\n                          <br />\r\n                          <i>(Consignee)</i>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n    //#endregion SET HTML PRINT\r\n\r\n    //#region Khởi tạo form in\r\n    let _timeout = 1000;\r\n    if (DataPrint.length > 100 && DataPrint.length < 200) _timeout = 2000;\r\n    else if (DataPrint.length > 200) _timeout = 3000;\r\n    let html = $(\"#barcodeTarget\").html();\r\n    html += `<script type=\"text/javascript\">window.focus();setTimeout(function(){window.print();window.close();},${_timeout});</script>`;\r\n    var myWindow = window.open(\"\", \"_blank\");\r\n    myWindow.document.write(\r\n      '<html><head></head><body style=\"margin:0\">' + html + \"</body></html>\"\r\n    );\r\n    //#endregion Khởi tạo form in\r\n  };\r\n\r\n  const ChangeSheetPrint = (event) => {\r\n    const sheetNumber = event.target.value;\r\n    let db = [];\r\n    setpageprint([]);\r\n    if (sheetNumber !== \"\" && sheetNumber !== \"0\") {\r\n      //setshowpage(sheetNumber);\r\n      setsheetprint(sheetNumber);\r\n      for (var i = 0; i < parseInt(sheetNumber); i++) {\r\n        db.push(i);\r\n      }\r\n      setpageprint(db);\r\n    }\r\n  };\r\n\r\n  const handleChange = (row) => {\r\n    dataLading.find((p) => p.Id == row.original.Id).Checked =\r\n      row.original.Checked == false ? true : false;\r\n    setState({ list: dataLading });\r\n    setDataPrint(dataLading.filter((p) => p.Checked === true));\r\n  };\r\n\r\n  const handleCheckAll = (e) => {\r\n    let allChecked = IsChecked;\r\n    setIsChecked(!IsChecked);\r\n    dataLading.forEach((item) => {\r\n      item.Checked = e.target.checked;\r\n    });\r\n    setState({ list: dataLading });\r\n    setDataPrint(dataLading.filter((p) => p.Checked === true));\r\n  };\r\n  //#endregion HÀM IN BILL\r\n\r\n  //#endregion ********** THÔNG TIN ĐƠN HÀNG DANH SÁCH *********\r\n\r\n  //#region ********** FORM TẠO ĐƠN HÀNG **********\r\n\r\n  //#region HÀM VALIDATE CÁC GIÁ TRỊ NHẬP VÀO\r\n\r\n  const RegPhone = (e, key) => {\r\n    // setTimeout(function(){\r\n    let result = ValidPhone(e);\r\n    if (key == 1) {\r\n      setPhoneReg(result);\r\n      setSenderPhone(e);\r\n      // if (result === \"form-error\"){\r\n      //     SenderPhoneRef.current.focus();\r\n      // }\r\n    } else if (key == 2) {\r\n      setPhoneReg2(result);\r\n      setSenderPhone(e);\r\n    } else {\r\n      setPhoneReg3(result);\r\n      setRecipientPhone(e);\r\n    }\r\n\r\n    // },1000\r\n    //     )\r\n  };\r\n\r\n  //#endregion HÀM VALIDATE CÁC GIÁ TRỊ NHẬP VÀO\r\n\r\n  //#region HÀM CLEAR FORM KHI CLICK LÀM MỚI VÀ SAU KHI SAVE VẬN ĐƠN\r\n\r\n  const Clearform = async () => {\r\n    setLadingCode(\"\");\r\n    onChooseProvinceTo({});\r\n    // onChooseProvinceTo({ value: 0, label:'Chọn tỉnh thành'})\r\n    onChooseDistrictTo({});\r\n    onChooseWardTo({});\r\n    setTitle(\"TẠO ĐƠN HÀNG\");\r\n    APIC_spServiceGetMany();\r\n    setNumberCoCheck(0);\r\n    setSupperMarket(\"0\");\r\n    setPhuQuocIsLand(\"0\");\r\n    setIsNumberCoCheck(0);\r\n    setIsHD(0);\r\n    //Sender\r\n    setLadingId(0);\r\n    setServiceID(33);\r\n    setServiceName(\"Chuyển phát nhanh\");\r\n    IsLoadDistrictTo === false\r\n      ? setIsLoadDistrictTo(true)\r\n      : setIsLoadDistrictTo(false);\r\n    IsLoadWardTo === false ? setIsLoadWardTo(true) : setIsLoadWardTo(false);\r\n\r\n    setRecipientPhone(\"\");\r\n    setCityTo(0);\r\n    setWardTo(0);\r\n    setRecipientAddress(\"\");\r\n    setRecipientAddressOld(\"\");\r\n    setRecipientName(\"\");\r\n    setDistrictTo(0);\r\n    setRecipientStreet(\"\");\r\n    setRecipientCompany(\"\");\r\n    //goods\r\n    setDescription(\"\");\r\n    setParnerCode(\"\");\r\n    setWeight(\"\");\r\n    setWidth(\"\");\r\n    setNoted(\"\");\r\n    setNumberItem(\"1\");\r\n    setHeight(\"\");\r\n    setLength(\"\");\r\n    setMass(\"\");\r\n    //collecting money\r\n    setCod(\"\");\r\n    setCODPrice(\"\");\r\n    setInsured(\"\");\r\n    setInsuredPrice(\"\");\r\n    //service\r\n    //setPaymentType(\"\");\r\n    //setServiceGTGTs(\"\");\r\n    //info product\r\n    setProductCode(\"\");\r\n    setProductName(\"\");\r\n    setProductQuality(\"\");\r\n    setProductDes(\"\");\r\n    //Amount\r\n    setAmount(\"\");\r\n    setDealine(\"\");\r\n    //info Detail\r\n    setPPXDPrice(\"\");\r\n    setPriceMain(\"\");\r\n    setTHBBPrice(\"\");\r\n    setHDPrice(\"\");\r\n    setHD(0);\r\n    setPTTPrice(\"\");\r\n    setVATPrice(\"\");\r\n    setBPPrice(\"\");\r\n    setNPDKPrice(\"\");\r\n    setHQKPrice(\"\");\r\n    setServiceGTGTId(\"\");\r\n    setServiceGTGTName(\"\");\r\n    setOnloadSender(1);\r\n    setOnLoadRecipient(1);\r\n    setLat(0);\r\n    setLng(0);\r\n  };\r\n\r\n  //#endregion HÀM CLEAR FORM KHI CLICK LÀM MỚI VÀ SAU KHI SAVE VẬN ĐƠN\r\n\r\n  //#region HÀM LOAD DATA CHÍNH SHOW LÊN FORM TẠO ĐƠN HÀNG\r\n\r\n  //#region Hàm load dịch vụ GTGT\r\n  const APIC_spServiceGetMany = async () => {\r\n    let params1 = {\r\n      AppAPIKey: APIKey,\r\n      Type: 1,\r\n    };\r\n    const dataGTGT = await Service.APIC_spServiceGetMany(params1, dispatch); // this is service GTGT\r\n    let arrGTGT = [];\r\n    dataGTGT.map((item, index) => {\r\n      item.checkboxGTGT = false;\r\n      arrGTGT.push(item);\r\n    });\r\n    setServiceGTGT(arrGTGT);\r\n    setIsRunservice(0);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n  //#endregion Hàm load dịch vụ GTGT\r\n\r\n  //#region Hàm load thông tin vận đơn nháp\r\n\r\n  const ReadLadingDraft = async () => {\r\n    let editStr = localStorage.getItem(\"LadingEdit\");\r\n    let draftStr = localStorage.getItem(\"LadingDraft\");\r\n    if (editStr !== null && editStr !== undefined && editStr !== \"\") {\r\n      Clearform();\r\n      let ladingEdit = JSON.parse(editStr);\r\n      APIC_spLadingEdit({ _original: { Id: ladingEdit.Id } });\r\n      localStorage.setItem(\"LadingEdit\", \"\");\r\n    } else if (draftStr !== \"\" && draftStr !== undefined) {\r\n      let draft = JSON.parse(draftStr);\r\n      if (draft?.AddressFromId !== undefined) {\r\n        onSelectSender({ value: draft.AddressFromId, label: draft.AddressFrom, obj: draft.objFrom });\r\n        setShowSender(\" show active\");\r\n      }\r\n      else if (draft?.AddressToId !== undefined) {\r\n        onSelectRecipient({ value: draft.AddressToId, label: draft.AddressTo, obj: draft.objTo });\r\n        setShowReceipient(\" show active\");\r\n      }\r\n      else { //Mở từ form ước tính cước phí\r\n        onChooseProvinceFrom({ value: parseInt(draft?.CityFrom), label: draft?.CityFromName });\r\n        onChooseDistrictFrom({ value: parseInt(draft?.DistrictFrom), label: draft?.DistrictFromName });\r\n        onChooseWardFrom({ value: 0, label: \"\" });\r\n        setSenderStreet(\"\");\r\n        setSenderName(\"\");\r\n        setSenderPhone(\"\");\r\n        setSenderAddress(draft?.DistrictFromName + \", \" + draft?.CityFromName);\r\n        onChooseProvinceTo({ value: parseInt(draft?.CityTo), label: draft?.CityToName });\r\n        onChooseDistrictTo({ value: parseInt(draft?.DistrictTo), label: draft?.DistrictToName });\r\n        onChooseWardTo({ value: parseInt(draft?.WardTo), label: draft?.WardToName });\r\n        setRecipientStreet(\"\");\r\n        setRecipientPhone(\"\");\r\n        setRecipientName(\"\");\r\n        setRecipientCompany(\"\");\r\n        setRecipientAddress(draft?.WardToName + \", \" + draft?.DistrictToName + \", \" + draft?.CityToName);\r\n        changeServiceId({ value: draft?.ServiceID, label: draft?.ServiceName });\r\n        setServiceID(draft?.ServiceID);\r\n        setServiceName(draft?.ServiceName);\r\n        setWeight(draft?.Weight);\r\n        setIsChangeWard(1);\r\n        setIsChangePriceMain(1);\r\n        setShowSender(\" show active\");\r\n        setShowReceipient(\" show active\");\r\n      }\r\n      localStorage.setItem(\"LadingDraft\", \"\");\r\n    } else {\r\n      changeServiceId({ value: 33, label: \"Chuyển phát nhanh\" });\r\n      setServiceID(33);\r\n      setServiceName(\"Chuyển phát nhanh\");\r\n      /* onSelectRecipient({\r\n        value: 0,\r\n        label: \"Chọn địa chỉ\",\r\n        obj: {\r\n          Name: \"\",\r\n          Phone: \"\",\r\n          CityId: 0,\r\n          City: \"Chọn tỉnh thành\",\r\n          DistrictId: 0,\r\n          District: \"Chọn quận huyện\",\r\n          WardId: 0,\r\n          Ward: \"Chọn phường xã\",\r\n          Street: \"\",\r\n          Address: \"\",\r\n          Company: \"\"\r\n        }\r\n      }); */\r\n    }\r\n  };\r\n  //#endregion Hàm load thông tin vận đơn nháp\r\n\r\n  //#endregion HÀM LOAD DATA CHÍNH SHOW LÊN FORM TẠO ĐƠN HÀNG\r\n\r\n  //#region XỬ LÝ TRÊN FROM TẠO ĐƠN HÀNG\r\n\r\n  //#region Chọn địa chỉ gửi\r\n  const onSelectSender = async (item) => {\r\n    setSenderMeno(item);\r\n    setSenderName(item.obj.NameSend);\r\n    setSenderPhone(item.obj.PhoneSend);\r\n    onChooseProvinceFrom({ value: item.obj.CityId, label: item.obj.CityName,Code_Local:item.obj.Code_Local });\r\n    onChooseDistrictFrom({\r\n      value: item.obj.DistrictiId,\r\n      label: item.obj.DistrictyName,\r\n    });\r\n    onChooseWardFrom({\r\n      value: item.obj.WarId,\r\n      label: item.obj.WarName,\r\n    });\r\n\r\n    setSenderStreet(item.obj.Street_Number);\r\n    setSenderAddress(item.obj.AddressFull);\r\n\r\n    setIsChangePriceMain(1);\r\n  };\r\n\r\n  const changeStreetFrom = (e) => {\r\n    setSenderStreet(e);\r\n    setSenderAddress(e + \", \" + WardFromName + \", \" + DistrictFromName + \", \" + CityFromName);\r\n  };\r\n\r\n  //#endregion Chọn địa chỉ gửi\r\n\r\n  //#region Chọn địa chỉ nhận\r\n  const [StreetSlect, setStreetSelect] = useState(0);\r\n  const onSelectRecipient = async (item) => {\r\n    //active select\r\n    setRecipientId(item.value);\r\n    setRecipientMeno(item);\r\n    onChooseProvinceTo({ value: item.obj.CityId, label: item.obj.City });\r\n    onChooseDistrictTo({ value: item.obj.DistrictId, label: item.obj.District });\r\n    onChooseWardTo({ value: item.obj.WardId, label: item.obj.Ward });\r\n\r\n    setRecipientStreet(item.obj.Street);\r\n    setRecipientPhone(item.obj.Phone);\r\n    setRecipientName(item.obj.Name);\r\n    setRecipientCompany(item.obj.Company);\r\n    setRecipientAddress(item.obj.Address);\r\n    setRecipientAddressOld(item.obj.Address);\r\n    setLat(item.obj.Lat);\r\n    setLng(item.obj.Lng);\r\n\r\n    setStreetSelect(item.obj.Street);\r\n\r\n    setIsChangePriceMain(1);\r\n    setShowReceipient(\" show active\");\r\n    RecipientAddressRef.current.focus();\r\n\r\n    CPN_spLocationCheckCustomer(GetCookie(\"CustomerID\"), item.obj.WardId, 0);// Check phần trăm ngoại tuyến\r\n    CPN_spManagerAddress_Check();\r\n  };\r\n\r\n  const onSelectedRecipient = (item) => {\r\n    setIsAcctiveRecipient(0);\r\n    if (item != 0) {\r\n      let data = ListDataRecipient.filter(a => a.AddressSetUpId === item)[0];\r\n      if (data != undefined) {\r\n        setRecipientId(data.Id);\r\n        setAddressSetupId(item);\r\n        setLat(data.Lat);\r\n        setLng(data.Lng);\r\n        setDistrictTo(data.DistrictId);\r\n        setDistrictToName(data.District)\r\n        setWardTo(data.WardId);\r\n        setWardToName(data.Ward);\r\n        setCityTo(data.CityId);\r\n        setCityToName(data.CityName);\r\n        setRecipientPhone(data.Phone == undefined ? RecipientPhone : data.Phone);\r\n        setRecipientName(data.Name == undefined ? RecipientName : data.Name);\r\n        setRecipientCompany(data.Company == undefined ? RecipientCompany : data.Company);\r\n        setRecipientStreet(data.Street);\r\n        setRecipientAddress(data.Address);\r\n        CPN_spLocationCheckCustomer(GetCookie(\"CustomerID\"), data.WardId, 0);// Check phần trăm ngoại tuyến\r\n        CPN_spManagerAddress_Check();\r\n      }\r\n    }\r\n  }\r\n\r\n  //#endregion Chọn địa chỉ nhận\r\n\r\n  //#region Chọn phường xã, quận huyện, tỉnh thành\r\n  const [CityCode, setCityCode] = useState(\"\");\r\n  const [DistrictCode, setDistrictCode] = useState(\"\");\r\n  const [WardCode, setWardCode] = useState(\"\");\r\n\r\n  const [CityCodeTo, setCityCodeTo] = useState(\"\");\r\n  const [DistrictCodeTo, setDistrictCodeTo] = useState(\"\");\r\n  const [WardCodeTo, setWardCodeTo] = useState(\"\");\r\n\r\n  const onChooseProvinceFrom = (item) => {\r\n    setCityFromName(item.label);\r\n    setCityFrom(item.value);\r\n    setSenderAddress(\r\n      RecipientStreet + \", \" +\r\n      item.label\r\n    );\r\n    setCityCode(item.Code_Local);\r\n  };\r\n  const onChooseDistrictFrom = (item) => {\r\n    setDistrictFromName(item.label);\r\n    setDistrictFrom(item.value);\r\n    setSenderAddress(\r\n      RecipientStreet + \", \" +\r\n      item.label + \", \" +\r\n      CityFromName\r\n    );\r\n    setDistrictCode(item.code);\r\n  };\r\n\r\n  const onChooseWardFrom = (item) => {\r\n    setWardFromName(item.label);\r\n    setWardFrom(item.value);\r\n    setSenderAddress(\r\n      RecipientStreet + \", \" +\r\n      item.label + \", \" +\r\n      DistrictFromName + \", \" +\r\n      CityFromName\r\n    );\r\n    setWardCode(item.code);\r\n  };\r\n  //\r\n  const onChooseProvinceTo = (item) => {\r\n    setCityToName(item.label);\r\n    setCityTo(item.value);\r\n    setRecipientAddress(RecipientStreet + \", \" + item.label);\r\n    setCityCodeTo(item.Code_Local);\r\n  };\r\n  const onChooseDistrictTo = (item) => {\r\n    setDistrictToName(item.label);\r\n    setDistrictTo(item.value);\r\n    setRecipientAddress(\r\n      RecipientStreet + \", \" +\r\n      (item.label) + \", \" +\r\n      CityToName\r\n    );\r\n    setIsChangeWard(0);\r\n    setDistrictCodeTo(item.code);\r\n  };\r\n  const [StreetList, setStreetList] = useState([]);\r\n  const onChooseWardTo = async (item) => {\r\n    setWardToName(item.label);\r\n    setWardTo(item.value);\r\n    setIsChangeWard(1); // Để gọi useEffect tính ngoại tuyến\r\n\r\n    setRecipientAddress(\r\n      RecipientStreet + \", \" +\r\n      item.label + \", \" +\r\n      DistrictToName + \", \" +\r\n      CityToName\r\n    );\r\n    setWardCodeTo(item.code);\r\n  };\r\n\r\n  //#endregion  Chọn phường xã, quận huyện, tỉnh thành\r\n\r\n  //#region Chọn dịch vụ chính\r\n  const [IsWeight, setIsWeight] = useState(false);\r\n  const changeServiceId = (item) => {\r\n    if (item.label.indexOf(\"theo khối\") !== -1) {\r\n      setIsWeight(true);\r\n      setWeight(0);\r\n    }\r\n    else {\r\n      setIsWeight(false);\r\n      setMass(0);\r\n    }\r\n    setServiceName(item.label);\r\n    setServiceID(item.value);\r\n    setIsChangePriceMain(1);\r\n  };\r\n\r\n  //#endregion Chọn dịch vụ chính\r\n\r\n  //#region Chọn hình thức thanh toán\r\n\r\n  const changePaymentType = (item) => {\r\n    setPaymentType(item.target.value); // set values for save\r\n    setPaymentTypeCode(item.target.attributes.code.value);\r\n  };\r\n\r\n  //#endregion Chọn hình thức thanh toán\r\n\r\n  //#region Chọn dịch vụ GTGT\r\n\r\n  const onChooseServiceGTGT = (item, element) => {\r\n    if (element.target.checked === true) {\r\n      setServiceGTGTId(ServiceGTGTId + element.target.value + \";\");\r\n      setServiceGTGTName(ServiceGTGTName + item.ServiceCode + \";\");\r\n      ServiceGTGT.find(\r\n        (e) => parseInt(e.ServiceID) == parseInt(element.target.value)\r\n      ).checkboxGTGT = true;\r\n    } else {\r\n      let a = (\";\" + ServiceGTGTId + \";\")\r\n        .replaceAll(\";\", \";;\")\r\n        .replaceAll(\";\" + element.target.value + \";\", \"\")\r\n        .replaceAll(\";;\", \";\");\r\n      let b = (\";\" + ServiceGTGTName + \";\")\r\n        .replaceAll(\";\", \";;\")\r\n        .replaceAll(\";\" + item.ServiceCode + \";\", \"\")\r\n        .replaceAll(\";;\", \";\");\r\n      setServiceGTGTId(a.substring(1, a.length));\r\n      setServiceGTGTName(b.substring(1, b.length));\r\n      ServiceGTGT.find(\r\n        (e) => parseInt(e.ServiceID) == parseInt(element.target.value)\r\n      ).checkboxGTGT = false;\r\n    }\r\n    if (parseInt(element.target.value) === 7 && element.target.checked === true)\r\n      setIsHD(1);\r\n    else if (\r\n      parseInt(element.target.value) === 7 &&\r\n      element.target.checked === false\r\n    )\r\n      setIsHD(0);\r\n\r\n    if (parseInt(element.target.value) === 9 && element.target.checked === true)\r\n      setIsNumberCoCheck(1);\r\n    else if (\r\n      parseInt(element.target.value) === 9 &&\r\n      element.target.checked === false\r\n    )\r\n      setIsNumberCoCheck(0);\r\n\r\n    if (\r\n      parseInt(element.target.value) === 13 &&\r\n      element.target.checked === true\r\n    )\r\n      setSupperMarket(1);\r\n    else if (\r\n      parseInt(element.target.value) === 13 &&\r\n      element.target.checked === false\r\n    )\r\n      setSupperMarket(0);\r\n\r\n    if (\r\n      parseInt(element.target.value) === 14 &&\r\n      element.target.checked === true\r\n    )\r\n      setPhuQuocIsLand(1);\r\n    else if (\r\n      parseInt(element.target.value) === 14 &&\r\n      element.target.checked === false\r\n    )\r\n      setPhuQuocIsLand(0);\r\n\r\n    setIsChangeVatPpxd(1);\r\n  };\r\n\r\n  //#endregion Chọn dịch vụ GTGT\r\n\r\n  //#region Hàm save lading\r\n\r\n  const SaveLading = async () => {\r\n    //#region VALIDATE FUNCTION BEFORE SAVE\r\n    if (Customer?.Verification !== 1 && Customer?.Type === 2) {\r\n      Alerterror(\"Vui lòng xác thực tài khoản trước khi tạo đơn hàng\");\r\n      return\r\n    }\r\n    if (SenderName == \"\") {\r\n      Alerterror(\"Nhập tên người gửi\");\r\n      SenderNameRef.current.focus();\r\n      return;\r\n    }\r\n    if (SenderPhone === \"\") {\r\n      Alerterror(\"Nhập số điện thoại người gửi\");\r\n      SenderPhoneRef.current.focus();\r\n      return;\r\n    }\r\n    if (SenderPhone.length < 8) {\r\n      Alerterror(\"Kiểm tra SĐT người gửi\");\r\n      SenderPhoneRef.current.focus();\r\n      return;\r\n    }\r\n    if (CityFrom === 0) {\r\n      Alerterror(\"Chọn tỉnh thành người gửi\");\r\n      return;\r\n    }\r\n    if (\r\n      DistrictFrom === 0 ||\r\n      DistrictFrom == undefined\r\n    ) {\r\n      Alerterror(\"Chọn quận huyện người gửi\");\r\n      return;\r\n    }\r\n    if (SenderAddress == \"\") {\r\n      Alerterror(\"Nhập địa chỉ người gửi thực tế\");\r\n      SenderAddressRef.current.focus();\r\n      return;\r\n    }\r\n    //\r\n    if (RecipientName === \"\") {\r\n      Alerterror(\"Nhập tên người nhận\");\r\n      RecipientNameRef.current.focus();\r\n      return;\r\n    }\r\n    if (RecipientPhone === \"\") {\r\n      Alerterror(\"Nhập số điện thoại người nhận\");\r\n      RecipientPhoneRef.current.focus();\r\n      return;\r\n    }\r\n    if (RecipientPhone.length < 8) {\r\n      Alerterror(\"Nhập SĐT người nhận\");\r\n      RecipientPhoneRef.current.focus();\r\n      return;\r\n    }\r\n    if (\r\n      CityTo === 0 ||\r\n      CityTo === undefined\r\n    ) {\r\n      Alerterror(\"Chọn tỉnh/thành người nhận\");\r\n      return;\r\n    }\r\n    if (\r\n      DistrictTo === 0 ||\r\n      DistrictTo === undefined\r\n    ) {\r\n      Alerterror(\"Chọn quận/huyện người nhận\");\r\n      return;\r\n    }\r\n    if (\r\n      WardTo === 0 ||\r\n      WardTo === undefined\r\n    ) {\r\n      Alerterror(\"Chọn phường/xã người nhận\");\r\n      return;\r\n    }\r\n    if (RecipientStreet === \"\") {\r\n      Alerterror(\"Nhập số nhà/đường người nhận\");\r\n      RecipientStreetRef.current.focus();\r\n      return;\r\n    }\r\n    if (Description === \"\") {\r\n      Alerterror(\"Nhập nội dung hàng hóa\");\r\n      DescriptionRef.current.focus();\r\n      return;\r\n    }\r\n    if ((Weight === \"\" || Weight === \"0\") && IsWeight === false) {\r\n      Alerterror(\"Nhập trọng lượng hàng hóa\");\r\n      WeightRef.current.focus();\r\n      return;\r\n    }\r\n    if ((Mass === \"\" || Mass === \"0\") && IsWeight === true) {\r\n      Alerterror(\"Nhập khối lượng hàng hóa\");\r\n      MassRef.current.focus();\r\n      return;\r\n    }\r\n    if (NumberItem < 1 || NumberItem === \"\") {\r\n      Alerterror(\"Nhập Số kiện !\");\r\n      NumberItemRef.current.focus();\r\n      return;\r\n    }\r\n    if (ServiceID === 0) {\r\n      Alerterror(\"Chọn dịch vụ\");\r\n      return;\r\n    }\r\n    if (IsHD === 1 && (HD === 0 || HD === \"\")) {\r\n      Alerterror(\"Nhập số lượng hóa đơn\");\r\n      HDRef.current.focus();\r\n      return;\r\n    }\r\n    if (NPDKPrice === 1 && (NumberCoCheck === 0 || NumberCoCheck === \"\")) {\r\n      Alerterror(\"Nhập số lượng đồng kiểm\");\r\n      NumberCoCheckRef.current.focus();\r\n      return;\r\n    }\r\n    let GetLat = Lat, GetLng = Lng, RecipientIdNew = RecipientId;\r\n    /* if (Lat === 0 || Lng === 0 || Lat === \"\" || Lng === \"\" || Lat === \"0\" || Lng === \"0\"\r\n      || ((LadingId > 0 && RecipientAddress !== RecipientAddressOld))) {\r\n      const res = await GetLatLngGoogle(RecipientAddress)\r\n      if (res) {\r\n        GetLat = res[0].lat\r\n        GetLng = res[0].lng\r\n      }\r\n      RecipientIdNew = 0;\r\n    } */\r\n\r\n    //#endregion VALIDATE FUNCTION BEFORE SAVE\r\n\r\n    //#region Lưu mã địa chỉ\r\n    await CPN_spManagerAddress_Check();\r\n    //#endregion\r\n\r\n    //#region SET PARAMETER\r\n    setDisable(true); // disable button\r\n    let pr = await {\r\n      // TokenDevices:TOKEN_DEVICE,\r\n      Id: LadingId,\r\n      Code: LadingCode,\r\n      Partnercode: ParnerCode,\r\n      SenderId: Customer?.CustomerID,\r\n      CustomerCode: Customer?.CustomerCode,\r\n      CustomerName: Customer?.CustomerName,\r\n      CustomerPhone: Customer?.Phone,\r\n      CustomerAddress: Customer?.Address,\r\n      CustomerCompany: Customer?.Company,\r\n      AddressSetupId: AddressSetupId, // Thêm mới địa chỉ định vị\r\n      CitySendId: CityFrom,\r\n      CitySendCode: CityFromName,\r\n      DistrictID_From: DistrictFrom,\r\n      DistrictName_From: DistrictFromName,\r\n      WardID_From: WardFrom,\r\n      WardName_From: WardFromName,\r\n      Street_From: SenderStreet,\r\n      CustomerName_Reality: SenderName,\r\n      CustomerAddress_Reality: SenderAddress,\r\n      CustomerPhone_Reality: SenderPhone,\r\n      RecipientId: RecipientIdNew,\r\n      RecipientName: RecipientName,\r\n      RecipientPhone: RecipientPhone,\r\n      RecipientAddress: RecipientAddress,\r\n      RecipientCompany: RecipientCompany,\r\n      Street: RecipientStreet,\r\n      CityRecipientId: CityTo,\r\n      CityRecipientCode: CityToName,\r\n      DistrictID_To: DistrictTo,\r\n      District: DistrictToName,\r\n      WardId: WardTo,\r\n      Wards: WardToName,\r\n      ServiceId: ServiceID,\r\n      ServiceName: ServiceName,\r\n      ServiceGTGTId: AnotherPriceSave.ListServiceGTGTId,\r\n      ServiceGTGTName: AnotherPriceSave.ListServiceGTGTName,\r\n      PaymentType: PaymentType,\r\n      PaymentTypeName: PaymentTypeCode,\r\n      COD: parseFloat(Cod.toString().replaceAll(\",\", \"\")),\r\n      CODPrice: parseFloat(AnotherPriceSave.CODMoney),\r\n      PackId: 0, ////\r\n      PackPrice: 0, /////\r\n      PercentHD: HD, //////////\r\n      HDPrice: AnotherPriceSave.HDMoney,\r\n      Insured: parseFloat(Insured.toString().replaceAll(\",\", \"\")),\r\n      InsuredPrice: AnotherPriceSave.HHKGMoney,\r\n      PercentPDK: NumberCoCheck,\r\n      NPDKPrice: AnotherPriceSave.NPDKMoney,\r\n      PSTPrice: AnotherPriceSave.PSTMoney,\r\n      PDPQPrice: AnotherPriceSave.PDPQMoney,\r\n      PTTPrice: AnotherPriceSave.PTTMoney,\r\n      HQKPrice: AnotherPriceSave.HQKMoney,\r\n      THBBPrice: AnotherPriceSave.THBBMoney,\r\n      BPPrice: AnotherPriceSave.BPMoney,\r\n      IsBP: IsDelivery,\r\n      IsTHBB: IsProtocol,\r\n      Weight: parseFloat(Weight.toString().replaceAll(\".\", \"\")),\r\n      Number: parseFloat(NumberItem.toString().replaceAll(\".\", \"\")),\r\n      Length: parseFloat(Length.toString().replaceAll(\".\", \"\")),\r\n      Height: parseFloat(Height.toString().replaceAll(\".\", \"\")),\r\n      Width: parseFloat(Width.toString().replaceAll(\".\", \"\")),\r\n      Mass: parseFloat(Mass.toString()),\r\n      Noted: Noted,\r\n      Description: Description,\r\n      OnSiteDeliveryPrice: OutlineSave.OnSiteDeliveryPrice,\r\n      OnSiteDeliveryMoney: OutlineSave.OnSiteDeliveryPriceMoney,\r\n      Discount: 0,\r\n      DiscountMoney: 0,\r\n      PriceMain: AnotherPriceSave.PriceMain,\r\n      Allowance: 0,\r\n      PPXDPercent: 0,\r\n      PPXDMoney: AnotherPriceSave.PPXDMoney,\r\n      PPXDPercent: AnotherPriceSave.PPXDPercent,\r\n      IsPPXD: 1,\r\n      VATPercent: AnotherPriceSave.VATPercent,\r\n      VATMoney: AnotherPriceSave.VATMoney,\r\n      TotalMoney: AnotherPriceSave.Amount,\r\n      IsVAT: 1,\r\n      Amount: AnotherPriceSave.Amount,\r\n      TypeLading: 9,\r\n      DealineTime: AnotherPriceSave.DealineTime,\r\n      Status: 9,\r\n      IsSaveSender: IsSaveSender,\r\n      ProductCode: ProductCode,\r\n      ProductName: ProductName,\r\n      ProductDescription: ProductDes,\r\n      Quanlity: ProductQuality,\r\n      Lat_Recipient: GetLat,\r\n      Lng_Recipient: GetLng,\r\n    };\r\n    //#endregion SET PARAMETER\r\n\r\n    //#region GỌI HÀM SAVE\r\n    try {\r\n      const params = {\r\n        Json: JSON.stringify(pr),\r\n        func: \"CPN_spLading_Save_V2\",\r\n        API_key: APIKey,\r\n      };\r\n      // call redux saga\r\n      const result = await mainAction.API_spCallServer(params, dispatch);\r\n      Alertsuccess(\"Thành công\");\r\n      Clearform();\r\n      APIC_spLadingGetMany();\r\n      setOnloadSender(1);\r\n      setOnLoadRecipient(1);\r\n      //Gọi send notify\r\n      if ((pr.Id ?? 0) === 0) { //Kiểm tra nếu thêm mới thì gửi notify\r\n        const NotifiParam = {\r\n          Json: JSON.stringify({\r\n            CustomerId: parseInt(Customer?.CustomerID),\r\n            FuncSend: \"LadingCreate\",\r\n            SendFrom: \"WEB CUSTOMER\",\r\n            JsonData: [\r\n              {\r\n                LadingCode: result.LadingCode,\r\n                TotalLading: 1,\r\n              },\r\n            ],\r\n          }),\r\n          func: \"APIC_spSendNotification\",\r\n          API_key: APIKey,\r\n        };\r\n        const resultNotify = await mainAction.API_spCallServer(\r\n          NotifiParam,\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      setDisable(false); // disable button\r\n    }\r\n    //#endregion GỌI HÀM SAVE\r\n  };\r\n\r\n  //#endregion Hàm save lading\r\n\r\n  //#region Load thông tin đơn hàng để sửa\r\n\r\n  const APIC_spLadingEdit = async (row) => {\r\n    try {\r\n      //Lấy thông tin vận đơn\r\n      let pr = {\r\n        Json: \"{\\\"LadingId\\\":\" + row._original.Id + \",\\\"CustomerID\\\":\" + Customer?.CustomerID + \"}\",\r\n        func: \"APIC_spLading_Find\",\r\n        API_key: APIKey,\r\n        TokenDevices: TOKEN_DEVICE,\r\n      };\r\n      const result = await mainAction.API_spCallServer(pr, dispatch);\r\n      let data = result.Detail[0];\r\n      setshowingdetail(true); // open detail view\r\n      setdisablerecipient();\r\n      setIsAcctive(1);\r\n      setLadingId(data.Id);\r\n      setLadingCode(data.Code);\r\n\r\n      setOnSiteDeliveryPrice(data.OnSiteDeliveryPrice);\r\n      setOnSiteDeliveryPriceMoney(data.OnSiteDeliveryMoney);\r\n\r\n      //#region SHOW THÔNG TIN DỊCH VỤ\r\n      setServiceID(data.ServiceId); // active service\r\n      setServiceName(data.ServiceName); // active service\r\n\r\n      //HÌNH THỨC THANH TOÁN\r\n      setPaymentType(data.PaymentType);\r\n      setPaymentTypeCode(data.PaymentString);\r\n\r\n      //checked box service\r\n      setshowinggtgt(true); // onpen part\r\n      setServiceGTGTId(data.ServiceGTGTId);\r\n      setServiceGTGTName(data.ServiceGTGTName);\r\n      if (data.ServiceGTGTId !== \"\" && data.ServiceGTGTId !== null) {\r\n        let arr = data.ServiceGTGTId.substring(\r\n          0,\r\n          data.ServiceGTGTId.length - 1\r\n        ).split(\";\");\r\n        //bỏ chọn tất cả dv gtgt\r\n        ServiceGTGT.filter(i => arr.indexOf(i.ServiceID) === -1).checkboxGTGT = false;\r\n\r\n        // check chọn dv gtgt\r\n        arr.forEach((element) => {\r\n          ServiceGTGT.filter(i => i.ServiceID === parseInt(element)).checkboxGTGT = true;\r\n          if (parseInt(element) === 7) {\r\n            setIsHD(1);\r\n            setHD(data.PercentHD);\r\n          }\r\n          if (parseInt(element) === 9) {\r\n            setIsNumberCoCheck(1);\r\n            setNumberCoCheck(data.NumberCoCheck);\r\n          }\r\n          if (parseInt(element) === 13) setSupperMarket(1);\r\n          if (parseInt(element) === 14) setPhuQuocIsLand(1);\r\n        });\r\n      }\r\n\r\n      //#endregion SHOW THÔNG TIN DỊCH VỤ\r\n\r\n      //#region SHOW THÔNG TIN SẢN PHẨM\r\n\r\n      setProductCode(data.ProductCode);\r\n      setProductName(data.ProductName);\r\n      setProductQuality(data.ProductNum);\r\n      setProductDes(data.ProductDesc);\r\n\r\n      //#endregion SHOW THÔNG TIN SẢN PHẨM\r\n\r\n      //#region THÔNG TIN ĐƠN HÀNG\r\n\r\n      setDescription(data.Description);\r\n      setParnerCode(data.PartnerCode);\r\n      setWeight(data.Weight ?? 0);\r\n      setWidth(data.Width ?? 0);\r\n      setNoted(data.Noted);\r\n      setNumberItem(data.Number ?? 1);\r\n      setHeight(data.Height ?? 0);\r\n      setLength(data.Length ?? 0);\r\n      setMass(data.Mass ?? 0);\r\n      setDealine(FormatDateJson(data.DealineTime));\r\n\r\n      //#endregion THÔNG TIN ĐƠN HÀNG\r\n\r\n      //#region SHOW THÔNG TIN CƯỚC PHÍ\r\n\r\n      // 4 CỘT NHẬP ĐẶC BIỆT\r\n\r\n      //collecting money\r\n      setCod(data.COD ?? 0);\r\n      setCODPrice(data.CODPrice ?? 0);\r\n      setInsured(data.Insured ?? 0);\r\n      setInsuredPrice(data.InsuredPrice ?? 0);\r\n\r\n      setAmount(data.Amount ?? 0);\r\n      setPriceMain(data.PriceMain ?? 0);\r\n      setVATPrice(data.VATMoney ?? 0);\r\n      setPPXDPrice(data.PDPQPrice ?? 0);\r\n\r\n      //#endregion SHOW THÔNG TIN CƯỚC PHÍ\r\n\r\n      //#region THÔNG TIN NGƯỜI GỬI\r\n      onSelectSender({\r\n        value: 0,\r\n        label: data.CustomerName_Reality + \" - \" + data.CustomerPhone_Reality + \" - \" + data.CustomerAddress_Reality,\r\n        obj: {\r\n          NameSend: data.CustomerName_Reality,\r\n          PhoneSend: data.CustomerPhone_Reality,\r\n          CityId: parseInt(data.CitySendId),\r\n          CityName: data.CitySendCode,\r\n          DistrictiId: parseInt(data.DistrictID_Fom),\r\n          DistrictyName: data.DistrictName_From,\r\n          WarId: parseInt(data.WardId_From),\r\n          WarName: data.WardName_From,\r\n          Street_Number: data.CustomerAddress_Reality.replaceAll(\", \" + data.WardName_From + \", \", \"\").replaceAll(data.DistrictName_From + \", \", \"\").replaceAll(data.CitySendCode, \"\"),\r\n          AddressFull: data.CustomerAddress_Reality\r\n        }\r\n      });\r\n\r\n      //#endregion\r\n\r\n      //#region THÔNG TIN NGƯỜI NHẬN\r\n\r\n      onSelectRecipient({\r\n        value: data.RecipientId,\r\n        label: data.RecipientName + \" - \" + data.RecipientPhone + \" - \" + data.RecipientAddress,\r\n        obj: {\r\n          Name: data.RecipientName,\r\n          Phone: data.RecipientPhone,\r\n          CityId: parseInt(data.CityRecipientId),\r\n          City: data.CityRecipientCode,\r\n          DistrictId: parseInt(data.DistrictID_To),\r\n          District: data.District,\r\n          WardId: parseInt(data.WardId),\r\n          Ward: data.Wards,\r\n          Street: data.Street,\r\n          Address: data.RecipientAddress,\r\n          Company: data.RecipientCompany,\r\n          Lat: data.Lat_Recipient,\r\n          Lng: data.Lng_Recipient\r\n        }\r\n      });\r\n      setLat(data.Lat_Recipient);\r\n      setLng(data.Lng_Recipient);\r\n\r\n      //#endregion THÔNG TIN NGƯỜI NHẬN\r\n\r\n      setTitle(\"SỬA THÔNG TIN ĐƠN HÀNG\");\r\n\r\n      setIsChangePriceMain(1);\r\n      setIsChangeVatPpxd(1);\r\n\r\n      setShowCreateTab(\"show active\");\r\n      setShowListTab(\"\");\r\n    } catch (err) {\r\n      setTitle(\"TẠO ĐƠN HÀNG\");\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      setDisable(false); // disable button\r\n    }\r\n  };\r\n\r\n  //#endregion Load thông tin đơn hàng để sửa\r\n\r\n  //#endregion XỬ LÝ TRÊN FROM TẠO ĐƠN HÀNG\r\n\r\n  //#region Search theo địa chỉ hoặc sdt nhân\r\n  const [IsAcctiveRecipient, setIsAcctiveRecipient] = useState(0);\r\n  const [ListDataRecipient, setListDataRecipient] = useState([]);\r\n  const [ListRecipientPhone, setListRecipientPhone] = useState([]);\r\n  const [ListDataaddress, setListDataaddress] = useState([]);\r\n  const [IsAcctivePhone, setIsAcctivePhone] = useState(0)\r\n\r\n  const onClickSelectRecipient = (e) => {\r\n    setRecipientAddress(e.target.value);\r\n    setIsAcctiveRecipient(1);\r\n\r\n    if (e.target.value.length >= 4) {\r\n      CPN_spRecipientAddress_Like(e.target.value.trim(), 1) // 1 search ở ô địa chỉ\r\n    }\r\n    else {\r\n      if (e.target.value.length === 0) {\r\n        let ListRecipientAddress = JSON.parse(localStorage.getItem(\"ListRecipientAddress\"))\r\n        setListDataRecipient(ListRecipientAddress);\r\n      } else {\r\n        let local = localStorage.getItem(\"ListRecipientAddress\")\r\n        if (local != \"\") {\r\n          let ListRecipientAddress = JSON.parse(local)\r\n          let found = [];\r\n\r\n          for (let i = 0; i < ListRecipientAddress?.length; i++) {\r\n            if (RemoveAccents(ListRecipientAddress[i]['Address']).toLowerCase().includes(RemoveAccents(e.target.value.toLowerCase()))) {\r\n              found.unshift(ListRecipientAddress[i]);\r\n            }\r\n          }\r\n          setListDataRecipient(found);\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const CPN_spRecipientAddress_Like = async (data, key) => {\r\n    setDisable(false);\r\n    const pr = {\r\n      DataLike: data,\r\n      CustomerId: GetCookie(\"CustomerID\")\r\n    }\r\n    const params = {\r\n      Json: JSON.stringify(pr),\r\n      func: \"CPN_spRecipientAddress_Like_V2\"\r\n    }\r\n    try {\r\n      const result = await mainAction.API_spCallServer(params, dispatch);\r\n      if (key === 1) {\r\n        if (result.length > 0) {\r\n          setListDataRecipient(result);\r\n        } else {\r\n          setListDataRecipient([]);\r\n        }\r\n      } else {\r\n        if (result.length > 0) {\r\n          setListRecipientPhone(result)\r\n        }\r\n        else {\r\n          setListRecipientPhone([]);\r\n        }\r\n      }\r\n      setDisable(true);\r\n    } catch (e) {\r\n      Alerterror(\"Lỗi dữ liệu tìm kiếm, Vui lòng liên hệ IT Netco!\");\r\n      setDisable(true);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region Chọn SĐT nhận load ra thông tin\r\n\r\n  // Save \r\n  const [KeySetUpId, setKeySetUpId] = useState(0);\r\n  const [CodeAddress, setCodeAddress] = useState('');\r\n  const CPN_spManagerAddress_Save = async (_lat, _lng) => {\r\n    try {\r\n      debugger\r\n      const params = {\r\n        Json: JSON.stringify({\r\n          Id: KeySetUpId,\r\n          CodeAddress: 'K-' + DistrictCodeTo + WardCodeTo + DistrictTo + WardTo,\r\n          NameAddress: RecipientName,\r\n          ProvinceId: CityTo,\r\n          ProvinceName: CityToName,\r\n          DistrictId: DistrictTo,\r\n          DistrictName: DistrictToName,\r\n          WardId: WardTo,\r\n          WardName: WardToName,\r\n          TypeAddress: \"Khác\",\r\n          TimeDown: 10,\r\n          TimeSlotFrom: \"06:00\",\r\n          TimeSlotTo: \"23:59\",\r\n          CreateId: 0,\r\n          CreateName: \"Khách hàng tạo\",\r\n          Streets: RemoveExtraSpace(RecipientStreet),\r\n          FullAddress: RecipientAddress.trim(),\r\n          Lat: _lat+'',\r\n          Lng: _lng+'',\r\n          TypeAddressCode: \"K\",\r\n          TonTimeDown: 30,\r\n          CustomerId: GetCookie(\"CustomerID\"),\r\n          CustomerRecipientId: RecipientId\r\n        }),\r\n        func: \"CPN_spManagerAddress_Save_Test\"\r\n      }\r\n\r\n      setCodeAddress('K-' + DistrictCodeTo + WardCodeTo + DistrictTo + WardTo);\r\n      const result = await mainAction.API_spCallServer(params, dispatch);\r\n      debugger\r\n      if (result.Status === \"OK\") {\r\n        Alertsuccess(result.ReturnMess);\r\n        //setDisableBtn(false)\r\n        setCodeAddress(\"\");\r\n        //ClearFormSetUp();\r\n        // setShowMap(true)\r\n        // setLat(_lat)\r\n        // setLng(_lng)\r\n        _ReturnMess(result)\r\n\r\n        //tuan anh them \r\n        //onGetAddress({ id: result.Id, name: FullAddress, lat: _lat, lng: _lng, oldAddress: _FullAddress, reserveAddress: oldAddress })\r\n\r\n      } else {\r\n        //Alertwarning(result.ReturnMess);\r\n        //setDisableBtn(false)\r\n      }\r\n    } catch (error) {\r\n      //Alerterror(\"Error !\")\r\n      //setDisableBtn(false);\r\n      console.log(error, \"CPN_spManagerAddress_Save\")\r\n    }\r\n  }\r\n\r\n  //Check address exists\r\n  const CPN_spManagerAddress_Check = async () => {\r\n    if (CityTo === 0) {\r\n      Alertwarning(\"Vui lòng chọn tỉnh thành !\");\r\n      return;\r\n    }\r\n    if (DistrictTo === 0) {\r\n      Alertwarning(\"Vui lòng chọn quận/huyện !\");\r\n      return;\r\n    }\r\n    if (WardTo === 0) {\r\n      Alertwarning(\"Vui lòng chọn phường/xã !\");\r\n      return;\r\n    }\r\n    if (RecipientStreet === \"\") {\r\n      Alertwarning(\"Vui lòng nhập số nhà/tên đường !\");\r\n      RecipientStreetRef.current.focus();\r\n      return;\r\n    }\r\n    if (RegExpAddress(RecipientAddress) === false) {\r\n      Alertwarning(\"Sai định dạng địa chỉ VD: Số nhà tên đường,phường xã,Quận huyện,Tỉnh thành !\");\r\n      RecipientAddressRef.current.focus();\r\n      return;\r\n    }\r\n    if (RecipientName === \"\") {\r\n      Alertwarning(\"Vui lòng nhập tên người nhận !\");\r\n      RecipientNameRef.current.focus();\r\n      return;\r\n    }\r\n    try {\r\n      const params = {\r\n        Json: JSON.stringify({ FullAddress: RecipientAddress, CustomerID: GetCookie(\"CustomerID\"), CustomerRecipientId: RecipientId }),\r\n        func: \"CPN_spManagerAddress_Check\"\r\n      }\r\n      debugger\r\n      const result = await mainAction.API_spCallServer(params, dispatch);\r\n      debugger\r\n      if (result.Status === \"OK\") {\r\n        //setreturnm(\"\")\r\n        const _GetLatLngGoogle = await GetLatLngGoogle(RecipientAddress);\r\n        let provinceGoogle = RemoveExtraSpace(RemoveAccents(_GetLatLngGoogle[0].AddressReturn).toUpperCase())\r\n        let province = RemoveExtraSpace(RemoveAccents(CityToName.toUpperCase()))\r\n\r\n        if (provinceGoogle.includes(province) === true) {\r\n          await CPN_spManagerAddress_Save(_GetLatLngGoogle[0].lat, _GetLatLngGoogle[0].lng)\r\n          //callReload = callReload(true)\r\n          setAddressSetupId(0);\r\n        } else {\r\n          //setreturnm(\"Sai địa chỉ định vị ,sau khi định vị là : \" + _GetLatLngGoogle[0].AddressReturn + '. Vui lòng kiểm tra lại cột số nhà/tên đường !')\r\n          //setDisableBtn(false)\r\n          RecipientStreetRef.current.focus();\r\n        }\r\n\r\n        //if (window.confirm('Địa chỉ sau khi lấy định vị là : ' + _GetLatLngGoogle[0].AddressReturn + '. Vui lòng kiểm tra lại, nếu đúng OK tiến hành lưu, nếu sai,chọn HỦY và chỉnh sửa lại cột số nhà/tên đường !'))\r\n        //CPN_spManagerAddress_Save(_GetLatLngGoogle[0].lat, _GetLatLngGoogle[0].lng);\r\n      }// else {\r\n        //Alertwarning(result.ReturnMess)\r\n        //setDisableBtn(false)\r\n      //}\r\n    } catch (error) {\r\n      //Alerterror(\"Error !\")\r\n      //setDisableBtn(false);\r\n      console.log(error, \"CPN_spManagerAddress_Check\")\r\n    }\r\n  }\r\n\r\n  const ClearFormSetUp = () => {\r\n    debugger\r\n    //setreturnm(\"\")\r\n    setAddressSetupId(0);\r\n    setDistrictTo(0);\r\n    setDistrictToName(\"Chọn quận huyện\")\r\n    setWardTo(0);\r\n    setWardToName(\"Chọn phường xã\");\r\n    setCityTo(0);\r\n    setCityToName(\"Chọn tỉnh thành\");\r\n    setRecipientName(\"\");\r\n    setRecipientStreet('');\r\n    RecipientAddress(\"\");\r\n    setLat(\"\");\r\n    setLng(\"\");\r\n    setCodeAddress(\"\");\r\n    setListDataaddress([]);\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region TÍNH CƯỚC PHÍ\r\n\r\n  //#region Tính ngoại tuyến\r\n\r\n  const [IsChangeWard, setIsChangeWard] = useState(0);\r\n  const [OutlineSave, setOutlineSave] = useState({});\r\n\r\n  useEffect(() => {\r\n    IsChangeWard === 1 ? CPN_spLocationCheckCustomer() : Norun();\r\n  }, [IsChangeWard]);\r\n\r\n  const CPN_spLocationCheckCustomer = async () => {\r\n    if (WardTo === 0) return;\r\n    const pr = {\r\n      CustomerId: parseInt(Customer?.CustomerID),\r\n      WardId: WardTo, //WardTo\r\n    };\r\n\r\n    const params = {\r\n      Json: JSON.stringify(pr),\r\n      func: \"CPN_spLocationCheckCustomer\",\r\n    };\r\n    const result = await mainAction.API_spCallServer(params, dispatch);\r\n\r\n    await setOutlineSave(result);\r\n    await setOnSiteDeliveryPrice(result.OnSiteDeliveryPrice);\r\n    await setOnSiteDeliveryPriceMoney(result.OnSiteDeliveryPriceMoney);\r\n\r\n    if (result.Status !== \"\") {\r\n      Alertsuccess(result.Status);\r\n    }\r\n\r\n    setIsChangeWard(0);\r\n    setIsChangePriceMain(1);\r\n  };\r\n\r\n  //#endregion TÍNH NGOẠI TUYẾN KHI CHỌN PHƯỜNG XÃ NHẬN\r\n\r\n  //#region TÍNH CƯỚC TRẮNG KHI CHỌN TỈNH, DỊCH VỤ, TRỌNG LƯỢNG\r\n\r\n  const [IsChangePriceMain, setIsChangePriceMain] = useState(0);\r\n  const [PriceMainSave, setPriceMainSave] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (IsChangePriceMain === 1) {\r\n      CPN_spLading_PriceMain();\r\n      setIsChangePriceMain(0);\r\n    } else Norun();\r\n  }, [IsChangePriceMain]);\r\n\r\n  const CPN_spLading_PriceMain = async () => {\r\n    if (\r\n      CityFrom === 0 ||\r\n      CityTo === 0 ||\r\n      ((Weight === \"\" || Weight === \"0\") && !IsWeight) ||\r\n      ((Mass === \"\" || Mass === \"0\") && IsWeight) ||\r\n      ServiceID === 0 || ServiceID === undefined\r\n    ) {\r\n      return;\r\n    }\r\n    let pr = {\r\n      CustomerId: Customer?.CustomerID,\r\n      ServiceId: ServiceID,\r\n      Weight: Weight === \"\" ? 0 : parseInt(Weight),\r\n      Mass: Mass === \"\" ? 0 : parseFloat(Mass),\r\n      Number: NumberItem === \"\" ? 1 : parseInt(NumberItem),\r\n      ProvinceID_From: CityFrom,\r\n      DistrictID_From: DistrictFrom,\r\n      ProvinceID_To: CityTo,\r\n      DistrictID_To: DistrictTo,\r\n      Keykl: 0,\r\n      IsAPI: 1,\r\n    };\r\n    try {\r\n      const params = {\r\n        API_key: APIKey,\r\n        Json: JSON.stringify(pr),\r\n        func: \"CPN_spLading_PriceMain\",\r\n      };\r\n      // call redux saga\r\n      const data = await mainAction.API_spCallServer(params, dispatch);\r\n      let pricemain = data.length === 0 ? 18000 : parseInt(data);\r\n      let PriceNT = pricemain * OnSiteDeliveryPrice / 100;\r\n      await setOutlineSave({ OnSiteDeliveryPrice: OnSiteDeliveryPrice, OnSiteDeliveryPriceMoney: PriceNT });\r\n      await setOnSiteDeliveryPriceMoney(PriceNT);\r\n      await setPriceMainSave(pricemain);\r\n      await setPriceMain(FormatMoney(pricemain + PriceNT, 0));\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n    setIsChangeVatPpxd(1);\r\n    setIsChangePriceMain(0);\r\n  };\r\n\r\n  //#endregion TÍNH CƯỚC TRẮNG KHI CHỌN TỈNH, DỊCH VỤ, TRỌNG LƯỢNG\r\n\r\n  //#region TÍNH GIÁ DỊCH VỤ GTGT VÀ VAT PPXD\r\n\r\n  const [IsChangeVatPpxd, setIsChangeVatPpxd] = useState(0);\r\n  useEffect(() => {\r\n    if (IsChangeVatPpxd === 1) {\r\n      CPN_spLadingGetAnotherServiceMoney();\r\n      setIsChangeVatPpxd(0);\r\n    } else Norun();\r\n  }, [IsChangeVatPpxd]);\r\n\r\n  const [AnotherPriceSave, setAnotherPriceSave] = useState([]);\r\n  const CPN_spLadingGetAnotherServiceMoney = async () => {\r\n    let _listServiceSelect = \";\" + ServiceGTGTId;\r\n    let pr = {\r\n      CustomerId: Customer?.CustomerID, // đây là í của customer đăng nhập\r\n      ServiceId: ServiceID, // đây là id dịch vụ vd như CPN,\r\n      PostOfficeId: PostOfficeId, //Bưu cục của KH\r\n      THBB: _listServiceSelect.indexOf(\";1;\") !== -1 ? 1 : 0, // thu hồi biên bản\r\n      BP: _listServiceSelect.indexOf(\";2;\") !== -1 ? 1 : 0, //báo phát\r\n      HD: HD > 1 || _listServiceSelect.indexOf(\";7;\") !== -1 ? HD : 0, //hóa đơn Important\r\n      NPDK:\r\n        NumberCoCheck > 1 || _listServiceSelect.indexOf(\";9;\") !== -1\r\n          ? NumberCoCheck\r\n          : 0, //Số lượng đồng kiểm  Important\r\n      PTT: _listServiceSelect.indexOf(\";10;\") !== -1 ? 1 : 0, // phát tận tay\r\n      HQK: _listServiceSelect.indexOf(\";12;\") !== -1 ? 1 : 0, // hàng quá khổ\r\n      PST:\r\n        SupperMarket > 1 || _listServiceSelect.indexOf(\";13;\") !== -1\r\n          ? SupperMarket\r\n          : 0, // phát siêu thị  Important\r\n      PDPQ:\r\n        PhuQuocIsLand > 1 || _listServiceSelect.indexOf(\";14;\") !== -1\r\n          ? PhuQuocIsLand\r\n          : 0, // phát đảo phú quốc  Important\r\n      COD:\r\n        Cod.toString() !== \"\"\r\n          ? parseFloat(Cod.toString().replaceAll(\",\", \"\"))\r\n          : 0, // Tiền thu hộ\r\n      HHKG:\r\n        Insured.toString() !== \"\"\r\n          ? parseFloat(Insured.toString().replaceAll(\",\", \"\"))\r\n          : 0, // Khai giá\r\n      PriceMain: PriceMainSave,\r\n      Width: parseFloat(Width),\r\n      Height: parseFloat(Height),\r\n      Length: parseFloat(Length),\r\n      //PackType:0\r\n      //IsPPXD:PPXDPercent>0?1:0,\r\n      //IsVAt:VAT>0?1:0,\r\n      IsPPXD: 1,\r\n      IsVAT: 1,\r\n      OnSiteDeliveryPrice: OnSiteDeliveryPrice,\r\n      OnSiteDeliveryPriceMoney: OnSiteDeliveryPriceMoney,\r\n      //PercentDiscount:0\r\n      Allowance: 0,\r\n      TypeElec: 0, //Loại khách hàng TMĐT & KHTT\r\n      CitySendId: CityFrom,\r\n      CityRecipientId: CityTo,\r\n      //WardTo: WardTo,\r\n    };\r\n\r\n    try {\r\n      const params = {\r\n        API_key: APIKey,\r\n        Json: JSON.stringify([pr]),\r\n        func: \"CPN_spLadingGetAnotherServiceMoney\",\r\n      };\r\n      const result = await mainAction.API_spCallServer(params, dispatch);\r\n      const data = result[0];\r\n      setDealine(FormatDateJson(data.DealineTime));\r\n      setTHBBPrice(FormatMoney(data.THBBMoney, 0)); //  thu hồi bb\r\n      setBPPrice(FormatMoney(data.BPMoney, 0)); //báo phát\r\n      setHDPrice(FormatMoney(data.HDMoney, 0));\r\n      setNPDKPrice(FormatMoney(data.NPDKMoney, 0));\r\n      setPTTPrice(FormatMoney(data.PTTMoney, 0)); //\r\n      setHQKPrice(FormatMoney(data.HQKMoney, 0));\r\n      setCODPrice(FormatMoney(data.CODMoney, 0));\r\n      setInsuredPrice(FormatMoney(data.HHKGMoney, 0)); // hvae two InsuredMoney\r\n      setPPXDPrice(FormatMoney(data.PPXDMoney, 0)); // pp xăng dầu\r\n      setVATPrice(FormatMoney(data.VATMoney, 0));\r\n      setAnotherPriceSave(data); //data này dùng để save lading\r\n\r\n      //setOnSiteDeliveryPrice(data.OnSiteDeliveryPrice);\r\n      //setOnSiteDeliveryPriceMoney(data.OnSiteDeliveryPriceMoney);\r\n\r\n      setPriceMain(FormatMoney(data.PriceMain, 0));\r\n      setPriceMainSave(data.PriceMain);\r\n      setAmount(FormatMoney(data.Amount, 0));\r\n      if (data.Amount <= 1000000000) setDisable(false);\r\n      else {\r\n        setDisable(true);\r\n        Alerterror(\r\n          \"Cước phí lớn hơn 1.000.000.000đ. Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco để được hỗ trợ\"\r\n        );\r\n      }\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n  };\r\n\r\n  //#endregion TÍNH GIÁ DỊCH VỤ GTGT VÀ VAT PPXD\r\n\r\n  //#endregion TÍNH CƯỚC PHÍ\r\n\r\n  //#endregion ******** FORM TẠO ĐƠN HÀNG **********\r\n\r\n  //#region ********** HÀM LOAD HTML **********\r\n  const [_ReturnMess, set_ReturnMess] = useState(\"\");\r\n  const HtmlAddress = (\r\n    <div className=\"container\">\r\n      <div className=\"modal fade\" id=\"address\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-body\">\r\n              <FormManagerAddress\r\n                Type={'other'}\r\n                _ReturnMess={e => set_ReturnMess(e)}\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button type=\"button\" className=\"btn btn-warning btn-xs\" data-dismiss=\"modal\">X Đóng</button>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n  const CreateLading = (\r\n    <form className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        {/*    Thông tin người gửi */}\r\n        <div className=\"margin-top-10\">\r\n          <div className='title'>\r\n            Thông tin giao nhận{\" \"}\r\n          </div>\r\n          <div className=\"margin-top-10\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <label>Bên gửi <span className=\"red\">*</span></label>\r\n                <SelectSender\r\n                  onActive={SenderMeno.value}\r\n                  defaultLabel={SenderMeno.label}\r\n                  onSelected={(item) => {\r\n                    onSelectSender(item);\r\n                  }}\r\n                  onLoad={OnLoadSender}\r\n                />\r\n              </div>\r\n              <a\r\n                className=\"pull-left Blue margin-top-10 margin-bottom-10\"\r\n                data-toggle=\"collapse\"\r\n                data-parent=\"#accordion\"\r\n                href=\"#collapseSender\"\r\n              >\r\n                <span className='margin-left-15'>\r\n                  <i className=\"fa fa-edit\"></i>  Nhập địa chỉ mới\r\n                </span>\r\n              </a>\r\n            </div>\r\n            <div\r\n              className={\"panel-collapse collapse mt15 in\" + ShowSender}\r\n              id=\"collapseSender\"\r\n            >\r\n              <div className=\"row margin-top-10\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Họ tên <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={SenderNameRef}\r\n                      value={SenderName}\r\n                      {...bindSenderName}\r\n                      title=\"Họ tên bắt buộc nhập !\"\r\n                      minLength=\"0\"\r\n                      maxLength=\"250\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Điện thoại <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className={\"form-control \" + phoneReg2}\r\n                      ref={SenderPhoneRef}\r\n                      value={SenderPhone}\r\n                      {...bindSenderPhone}\r\n                      title=\"Điện thoại bắt buộc nhập !\"\r\n                      onChange={(e) => {\r\n                        setSenderPhone(e.target.value);\r\n                      }}\r\n                      minLength=\"8\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group mt0\">\r\n                    <label className=\"mb0 font-weight500\">\r\n                      Tỉnh thành <span className=\"red\">*</span>\r\n                    </label>\r\n                    <SelectCity\r\n                      onActive={CityFrom}\r\n                      onSelected={(item) => {\r\n                        onChooseProvinceFrom(item);\r\n                      }}\r\n                      onBlur={(e) => setIsChangePriceMain(1)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group mt0\">\r\n                    <label className=\"mb0 font-weight500\">\r\n                      Quận huyện <span className=\"red\">*</span>\r\n                    </label>\r\n                    <SelectDistrict\r\n                      key=\"DistrictFrom\"\r\n                      onActive={DistrictFrom}\r\n                      ParentID={CityFrom}\r\n                      onSelected={(item) => {\r\n                        onChooseDistrictFrom(item);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group mt0\">\r\n                    <label className=\"mb0 font-weight500\">\r\n                      Phường xã <span className=\"red\">*</span>\r\n                    </label>\r\n                    <SelectWard\r\n                      key=\"WardFrom\"\r\n                      onActive={WardFrom}\r\n                      ParentID={DistrictFrom}\r\n                      onSelected={(item) => {\r\n                        onChooseWardFrom(item);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"form-group\" style={{ marginTop: \"27px\" }}>\r\n                    <label>\r\n                      Số nhà/ đường <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={SenderStreetRef}\r\n                      value={SenderStreet}\r\n                      {...bindSenderStreet}\r\n                      minLength=\"0\"\r\n                      maxLength=\"500\"\r\n                      onBlur={(e) => {\r\n                        changeStreetFrom(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12 margin-top-20\">\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Địa chỉ gửi <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={SenderAddressRef}\r\n                      value={SenderAddress}\r\n                      {...bindSenderAddress}\r\n                      title=\"Địa chỉ gửi bắt buộc nhập !\"\r\n                      minLength=\"0\"\r\n                      maxLength=\"500\"\r\n                      disabled=\"disabled\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12 text-center\">\r\n                  <div\r\n                    className=\"form-check\"\r\n                    title=\"Thêm vào địa chỉ gửi thường xuyên\"\r\n                  >\r\n                    <label className=\"form-check-label\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        value=\"1\"\r\n                        onClick={() => { setIsSaveSender(!IsSaveSender); setShowSender(\"\"); }}\r\n                      />\r\n                      Thêm vào địa chỉ gửi thường xuyên\r\n                      <span className=\"form-check-sign\">\r\n                        <span className=\"check\"></span>\r\n                      </span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='col-md-12 margin-top-10 border-bottom-dash'>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Thông tin người nhận */}\r\n        <div className=\"\">\r\n          <div className=\"margin-top-10\" >\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <label>Bên Nhận <span className=\"red\">*</span></label>\r\n                <SelectRecipient\r\n                  onActive={RecipientId}\r\n                  onSelected={(item) => {\r\n                    onSelectRecipient(item);\r\n                  }}\r\n                  onLoad={OnLoadRecipient}\r\n                />\r\n              </div>\r\n              <a\r\n                className=\"pull-left Blue margin-top-10 margin-bottom-10\"\r\n                data-toggle=\"collapse\"\r\n                data-parent=\"#accordion\"\r\n                href=\"#collapseReceipient\"\r\n              >\r\n                <span className='margin-left-15'>\r\n                  <i className=\"fa fa-edit\"></i> Nhập địa chỉ nhận\r\n                </span>\r\n               {/*  <span title=\"Thêm mới địa chỉ\" className=\"input-group-search cursor\" data-toggle=\"modal\" data-target=\"#address\"><i className=\"fa fa-edit\"></i></span> */}\r\n              </a>\r\n            </div>\r\n            <div className=\"mt15\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 display-none\">Lat {Lat} Lng {Lng}</div>\r\n              </div>\r\n              <div className={\"panel-collapse collapse in \" + ShowReceipient} id=\"collapseReceipient\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 mb10\">\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        Địa chỉ nhận <span className=\"red\">*</span>\r\n                      </label>\r\n                      <div class=\"input-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          ref={RecipientAddressRef}\r\n                          value={RecipientAddress}\r\n                          {...bindRecipientAddress}\r\n                          minLength=\"0\"\r\n                          maxLength=\"500\"\r\n                          onChange={e => onClickSelectRecipient(e)}\r\n                          placeholder=\"Nhập địa chỉ để tìm kiếm\"\r\n                        />\r\n                        {/* <div class=\"input-group-prepend\" >\r\n                          <a data-toggle=\"collapse\"\r\n                            data-parent=\"#accordion\"\r\n                            href=\"#collapseReceipient\" title=\"Thêm mới địa chỉ\" style={{ padding: \"10px\", marginTop: \"0\" }} className=\"btn btn-info btn-sm input-group-search cursor\"><i className=\"fa fa-edit\"></i> Nhập địa chỉ nhận</a>\r\n                        </div> */}\r\n                      </div>\r\n                    </div>\r\n                    <div id=\"div-sender-master\" class={IsAcctiveRecipient === 0 ? \"display-none\" : \"\"} style={{ position: \"absolute\", zIndex: 10, backgroundColor: \"#fff\", border: \"1px solid #ddd\", marginTop: \"-15px\" }}>\r\n                      <div id=\"div-sender\" class=\"col-md-12 col-sm-12 col-xs-12 div-sender\">\r\n                        {\r\n                          ListDataRecipient.length > 0 ?\r\n                            (\r\n                              ListDataRecipient.map((item, index) => {\r\n                                return (\r\n                                  <div className=\"select-option-like\" title={item.Address} key={index} value={item.AddressSetUpId} onClick={e => onSelectedRecipient(item.AddressSetUpId)}>{item.Address}</div>\r\n                                )\r\n                              })\r\n                            ) :\r\n                            (\r\n                              <div className=\"select-option-like\" key={0}>{RecipientAddress}</div>\r\n                            )\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        Họ tên <span className=\"red\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        ref={RecipientNameRef}\r\n                        value={RecipientName}\r\n                        {...bindRecipientName}\r\n                        minLength=\"0\"\r\n                        maxLength=\"250\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        Điện thoại <span className=\"red\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={\"form-control \" + phoneReg3}\r\n                        ref={RecipientPhoneRef}\r\n                        value={RecipientPhone}\r\n                        {...bindRecipientPhone}\r\n                        onChange={(e) => {\r\n                          setRecipientPhone(e.target.value);\r\n                        }}\r\n                        minLength=\"8\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group mt0\">\r\n                      <label className=\"mb0\">\r\n                        Tỉnh thành <span className=\"red\">*</span>\r\n                      </label>\r\n                      <SelectCity\r\n                        onActive={CityTo}\r\n                        IsLoad={IsLoad}\r\n                        onSelected={(item) => {\r\n                          onChooseProvinceTo(item);\r\n                        }}\r\n                        onBlur={(e) => setIsChangePriceMain(1)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group mt0\">\r\n                      <label className=\"mb0\">\r\n                        Quận huyện <span className=\"red\">*</span>\r\n                      </label>\r\n                      <SelectDistrict\r\n                        key=\"DistrictTo\"\r\n                        onActive={DistrictTo}\r\n                        ParentID={CityTo}\r\n                        onSelected={(item) => {\r\n                          onChooseDistrictTo(item);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group mt0\">\r\n                      <label className=\"mb0\">\r\n                        Phường xã <span className=\"red\">*</span>\r\n                      </label>\r\n                      <SelectWard\r\n                        key=\"WardTo\"\r\n                        onActive={WardTo}\r\n                        ParentID={DistrictTo}\r\n                        onSelected={(item) => {\r\n                          onChooseWardTo(item);\r\n                        }}\r\n                        onBlur={(e) => {\r\n                          CPN_spLocationCheckCustomer(e);\r\n                          setIsChangePriceMain(1);\r\n                          setRecipientId(0);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group StreetToArea\" style={{ marginTop: \"27px\" }}>\r\n                      <label>\r\n                        Số nhà /Đường <span className=\"red\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        ref={RecipientStreetRef}\r\n                        value={RecipientStreet}\r\n                        {...bindRecipientStreet}\r\n                        minLength=\"0\"\r\n                        maxLength=\"500\"\r\n                      /* onBlur={(e) => {\r\n                        changeStreetTo(e.target.value);\r\n                        setRecipientId(0);\r\n                      }} */\r\n                      />\r\n                      {/* <div className=\"ListStreet\">\r\n                        {StreetHtml}\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12 margin-top-20\">\r\n                    <div className=\"form-group\">\r\n                      <label>Công ty nhận</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        ref={RecipientCompanyRef}\r\n                        value={RecipientCompany}\r\n                        {...bindRecipientCompany}\r\n                        minLength=\"0\"\r\n                        maxLength=\"250\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <div\r\n                      className=\"form-check\"\r\n                      title=\"Thêm vào địa chỉ nhận thường xuyên\"\r\n                    >\r\n                      <label className=\"form-check-label\">\r\n                        <input\r\n                          className=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          value=\"1\"\r\n                          onChange={(element) => { setShowReceipient(\"\"); }}\r\n                        />\r\n                        Thêm vào địa chỉ nhận thường xuyên\r\n                        <span className=\"form-check-sign\">\r\n                          <span className=\"check\"></span>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col-md-12 border-bottom-dash'>\r\n        </div>\r\n        <div className=\"\">\r\n          <div className='title'>\r\n            Gói dịch vụ {\" \"}\r\n          </div>\r\n          <div className=\"margin-top-10\">\r\n            <SelectService\r\n              onActive={ServiceID}\r\n              onSelected={(item) => {\r\n                changeServiceId(item);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='col-md-12 margin-top-10 border-bottom-dash'>\r\n        </div>\r\n        {/* Thông tin hàng hóa */}\r\n        <div className=\"margin-top-10\">\r\n          <div className='title'>\r\n            Thông tin hàng hóa {\" \"}\r\n          </div>\r\n          <div className=\"row margin-top-20\">\r\n            <div className=\"col-md-6 margin-bottom-10\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Nội dung <span className=\"red\"> *</span>\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  ref={DescriptionRef}\r\n                  value={Description}\r\n                  {...bindDescription}\r\n                  minLength=\"0\"\r\n                  maxLength=\"500\"\r\n                  rows=\"1\"\r\n                  placeholder='Nội dung gửi hàng'\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 margin-bottom-10\">\r\n              <div className=\"form-group\">\r\n                <label> Ghi chú </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  ref={NotedRef}\r\n                  value={Noted}\r\n                  {...bindNoted}\r\n                  minLength=\"0\"\r\n                  maxLength=\"250\"\r\n                  rows=\"1\"\r\n                  placeholder='VD: Giao giờ hành chính ...'\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 margin-top-10\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Trọng lượng (gram)\r\n                  {IsWeight === false ? (<span className=\"red\"> *</span>) : (<></>)}\r\n                </label>\r\n                <div className=\"input-group mb-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder='Nhập trọng lượng kiện hàng'\r\n                    ref={WeightRef}\r\n                    value={FormatMoney(Weight)}\r\n                    {...bindWeight}\r\n                    onChange={(e) => {\r\n                      setWeight(e.target.value);\r\n                    }}\r\n                    onBlur={(e) => { setMass(0); setIsChangePriceMain(1); }}\r\n                    disabled={IsWeight}\r\n                  />\r\n                  {/*  <div className=\"input-group-append\">\r\n                    <div className=\"input-group-text\">gram</div>\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 margin-top-10\">\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Số kiện<span className=\"red\"> *</span>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder='Nhập số kiện'\r\n                  className=\"form-control\"\r\n                  ref={NumberItemRef}\r\n                  value={FormatMoney(NumberItem)}\r\n                  {...bindNumberItem}\r\n                  min=\"1\"\r\n                  max=\"1000\"\r\n                  onChange={(e) => {\r\n                    setNumberItem(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='col-md-12'>\r\n              <label>\r\n                Kích thước (Dài x Rộng x Cao)\r\n              </label>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-group\">\r\n                {/*   <label>Dài</label> */}\r\n                <div className=\"input-group mb-2\">\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder='Dài (mm)'\r\n                    className=\"form-control\"\r\n                    ref={WidthRef}\r\n                    value={FormatMoney(Width)}\r\n                    {...bindWidth}\r\n                    minLength=\"0\"\r\n                    maxLength=\"15\"\r\n                    onChange={(e) => {\r\n                      setWidth(e.target.value);\r\n                    }}\r\n                  />\r\n                  {/*  <div className=\"input-group-append\">\r\n                    <div className=\"input-group-text\">cm</div>\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-group\">\r\n                {/*   <label>Rộng</label> */}\r\n                <div className=\"input-group mb-2\">\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder='Rộng (mm)'\r\n                    className=\"form-control\"\r\n                    ref={HeightRef}\r\n                    value={FormatMoney(Height)}\r\n                    {...bindHeight}\r\n                    minLength=\"0\"\r\n                    maxLength=\"15\"\r\n                    onChange={(e) => {\r\n                      setHeight(e.target.value);\r\n                    }}\r\n                  />\r\n                  {/*   <div className=\"input-group-append\">\r\n                    <div className=\"input-group-text\">cm</div>\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-group\">\r\n                {/*   <label>Cao</label> */}\r\n                <div className=\"input-group mb-2\">\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder='Cao (mm)'\r\n                    className=\"form-control\"\r\n                    ref={LengthRef}\r\n                    value={FormatMoney(Length)}\r\n                    {...bindLength}\r\n                    minLength=\"0\"\r\n                    maxLength=\"15\"\r\n                    onChange={(e) => {\r\n                      setLength(e.target.value);\r\n                    }}\r\n                  />\r\n                  {/*  <div className=\"input-group-append\">\r\n                    <div className=\"input-group-text\">cm</div>\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-group\">\r\n                <label>Khối lượng {IsWeight ? (<span className=\"red\"> *</span>) : (<></>)}</label>\r\n                <div className=\"input-group mb-2\">\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder='Khối lượng (cbm)'\r\n                    className=\"form-control\"\r\n                    ref={MassRef}\r\n                    value={FormatMoney(Mass)}\r\n                    {...bindMass}\r\n                    minLength=\"0\"\r\n                    maxLength=\"15\"\r\n                    onChange={(e) => {\r\n                      setMass(e.target.value);\r\n                    }}\r\n                    onBlur={(e) => { setWeight(0); setIsChangePriceMain(1); }}\r\n                    disabled={!IsWeight}\r\n                  />\r\n                  {/*  <div className=\"input-group-append\">\r\n                    <div className=\"input-group-text\">cbm</div>\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col-md-12 border-bottom-dash'>\r\n        </div>\r\n        {/* Thông tin sản phẩm */}\r\n        <div className=\"margin-top-10\">\r\n          <div className='title'>\r\n            Thông tin sản phẩm {\" \"}\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseTwo\"\r\n              className=\"white pull-right\"\r\n            >\r\n              <i className=\"fa fa-angle-down\"></i>\r\n            </a>\r\n          </div>\r\n\r\n          <div className=\"panel-collapse collapse in margin-top-10\" id=\"collapseTwo\">\r\n            <div className=\"row margin-top-10\">\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Mã sản phẩm</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={ProductCodeRef}\r\n                    value={ProductCode}\r\n                    {...bindProductCode}\r\n                    minLength=\"0\"\r\n                    maxLength=\"250\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Tên sản phẩm</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={ProductNameRef}\r\n                    value={ProductName}\r\n                    {...bindProductName}\r\n                    minLength=\"0\"\r\n                    maxLength=\"250\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Số lượng</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    ref={ProductQualityRef}\r\n                    value={ProductQuality}\r\n                    {...bindProductQuality}\r\n                    minLength=\"0\"\r\n                    maxLength=\"250\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Số seri</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    ref={ProductDesRef}\r\n                    value={ProductDes}\r\n                    {...bindProductDes}\r\n                    minLength=\"0\"\r\n                    maxLength=\"250\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col-md-12 margin-top-10 border-bottom-dash'>\r\n        </div>\r\n      </div>\r\n      {/*    dịch vụ */}\r\n      <div className=\"col-md-12\">\r\n        {/*  người trả cước */}\r\n        <div className=\"margin-top-10\">\r\n          <div className='title'>\r\n            Người trả cước {\" \"}\r\n          </div>\r\n          <div className=\"row margin-top-10\">\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-check\" title={\"Người gửi thanh toán\"}>\r\n                <label className=\"form-check-label font-size-12px\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    defaultChecked={PaymentType === 2}\r\n                    onClick={(e) => changePaymentType(e)}\r\n                    code=\"DTT\"\r\n                    value={2}\r\n                    name=\"Payment\"\r\n                  />\r\n                  Người gửi TT (ĐTT)\r\n                  <span className=\"circle\">\r\n                    <span className=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-check\" title={\"Người nhận thanh toán\"}>\r\n                <label className=\"form-check-label font-size-11px\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    defaultChecked={PaymentType === 1}\r\n                    onClick={(e) => changePaymentType(e)}\r\n                    code=\"NNTT\"\r\n                    value={1}\r\n                    name=\"Payment\"\r\n                  />\r\n                  Người nhận TT\r\n                  <span className=\"circle\">\r\n                    <span className=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-check\" title={\"Thanh toán cuối tháng\"}>\r\n                <label className=\"form-check-label font-size-11px\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    defaultChecked={PaymentType === 0}\r\n                    onClick={(e) => changePaymentType(e)}\r\n                    code=\"TTCT\"\r\n                    value={0}\r\n                    name=\"Payment\"\r\n                  />\r\n                  TT cuối tháng\r\n                  <span className=\"circle\">\r\n                    <span className=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-check\" title={\"Khác\"}>\r\n                <label className=\"form-check-label font-size-11px\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    defaultChecked={PaymentType === 3}\r\n                    onClick={(e) => changePaymentType(e)}\r\n                    code=\"KHAC\"\r\n                    value={3}\r\n                    name=\"Payment\"\r\n                  />\r\n                  Khác\r\n                  <span className=\"circle\">\r\n                    <span className=\"check\"></span>\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col-md-12 margin-top-10 border-bottom-dash'>\r\n        </div>\r\n\r\n        {/*  dịch vụ gia tăng */}\r\n        <div className=\"margin-top-10\">\r\n          <div className='title'>\r\n            Dịch vụ GTGT {\" \"}\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseGTGT\"\r\n              className=\"white pull-right\"\r\n            >\r\n              <i className=\"fa fa-angle-down\"></i>\r\n            </a>\r\n          </div>\r\n          <div className=\"panel-collapse collapse in\" id=\"collapseGTGT\">\r\n            <div className=\"margin-top-10\">\r\n              <div className=\"row\">\r\n                {ServiceGTGT.map((item, index) => {\r\n                  if (\r\n                    item.ServiceID !== 4 &&\r\n                    item.ServiceID !== 6 &&\r\n                    item.ServiceID !== 3 &&\r\n                    item.ServiceID !== 8\r\n                  )\r\n                    return (\r\n                      <div className=\"col-md-2\" key={index}>\r\n                        <div className=\"form-check\" title={item.ServiceName}>\r\n                          <label className=\"form-check-label font-size-11px\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              name=\"ServiceGTGT\"\r\n                              value={item.ServiceID}\r\n                              checked={item.checkboxGTGT}\r\n                              onChange={(element) => {\r\n                                onChooseServiceGTGT(item, element);\r\n                              }}\r\n                            />\r\n                            {item.ServiceCode}\r\n                            <span className=\"form-check-sign\">\r\n                              <span className=\"check\"></span>\r\n                            </span>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                })}\r\n              </div>\r\n              <div className=\"row mt10\">\r\n                <div className={IsHD === 1 ? \"col-md-6\" : \"col-md-6 display-none\"}>\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Số lượng hóa đơn <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      ref={HDRef}\r\n                      value={HD}\r\n                      {...bindHD}\r\n                      onChange={(e) => {\r\n                        setHD(e.target.value);\r\n                      }}\r\n                      onBlur={(e) => setIsChangeVatPpxd(1)}\r\n                      title=\"Số lượng hóa đơn bắt buộc nhập !\"\r\n                      minLength=\"0\"\r\n                      maxLength=\"20\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={IsNumberCoCheck === 1 ? \"col-md-6\" : \"col-md-6 display-none\"}\r\n                >\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Số lượng đồng kiểm <span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      ref={NumberCoCheckRef}\r\n                      value={NumberCoCheck}\r\n                      {...bindNumberCoCheck}\r\n                      onChange={(e) => {\r\n                        setNumberCoCheck(e.target.value);\r\n                      }}\r\n                      onBlur={(e) => setIsChangeVatPpxd(1)}\r\n                      title=\"Số lượng đồng kiểm bắt buộc nhập !\"\r\n                      minLength=\"0\"\r\n                      maxLength=\"20\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col-md-12 margin-top-10 border-bottom-dash'>\r\n        </div>\r\n        {/*  COD */}\r\n        <div className=\"margin-top-10\">\r\n          <div className='title'>\r\n            Thu hộ - Khai giá {\" \"}\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseCOD\"\r\n              className=\"white pull-right\"\r\n            >\r\n              <i className=\"fa fa-angle-down\"></i>\r\n            </a>\r\n          </div>\r\n          <div className=\"panel-collapse collapse in margin-top-10\" id=\"collapseCOD\">\r\n            <div className=\"row margin-top-10\">\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Tiền thu hộ</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      value={FormatMoney(Cod)}\r\n                      onChange={(e) => {\r\n                        setCod(e.target.value);\r\n                      }}\r\n                      onBlur={(e) => setIsChangeVatPpxd(1)}\r\n                      minLength=\"0\"\r\n                      maxLength=\"15\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Phí thu hộ</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={CODPriceRef}\r\n                      value={CODPrice}\r\n                      {...bindCODPrice}\r\n                      minLength=\"0\"\r\n                      maxLength=\"15\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Khai giá</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={FormatMoney(Insured)}\r\n                      onChange={(e) => {\r\n                        setInsured(e.target.value);\r\n                      }}\r\n                      onBlur={(e) => setIsChangeVatPpxd(1)}\r\n                      minLength=\"0\"\r\n                      maxLength=\"20\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Phí khai giá</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={InsuredPriceRef}\r\n                      value={InsuredPrice}\r\n                      {...bindInsuredPrice}\r\n                      minLength=\"0\"\r\n                      maxLength=\"250\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className='col-md-12 margin-top-10 border-bottom-dash'>\r\n        </div>\r\n        <div className=\"margin-top-10 row\">\r\n          <div className='title col-md-12'>\r\n            Chi tiết cước phí {\" \"}\r\n            <a\r\n              data-toggle=\"collapse\"\r\n              data-parent=\"#accordion\"\r\n              href=\"#collapseOne\"\r\n              className=\"white pull-right\"\r\n            >\r\n              <i className=\"fa fa-angle-down\"></i>\r\n            </a>\r\n          </div>\r\n          <div className=\"panel-collapse collapse in col-md-12\" id=\"collapseOne\">\r\n            <div className=\"margin-top-10 row\">\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Phụ phí xăng dầu</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={PPXDPriceRef}\r\n                      value={PPXDPrice}\r\n                      {...bindPPXDPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 margin-top-10\">\r\n                <div className=\"form-group\">\r\n                  <label>Phí VAT</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={VATPriceRef}\r\n                      value={VATPrice}\r\n                      {...bindVATPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Cước phí</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={PriceMainRef}\r\n                      value={PriceMain}\r\n                      {...bindPriceMain}\r\n                    />{\" \"}\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phí thu hộ</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={CODPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phí khai giá</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={InsuredPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Báo phát</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={BPPriceRef}\r\n                      value={BPPrice}\r\n                      {...bindBPPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phần trăm ngoại tuyến</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={OnSiteDeliveryPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">%</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phí phát ngoại tuyến</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={FormatMoney(OnSiteDeliveryPriceMoney, 0)}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Thu hồi BB</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={THBBPriceRef}\r\n                      value={THBBPrice}\r\n                      {...bindTHBBPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Hóa đơn</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={HDPriceRef}\r\n                      value={HDPrice}\r\n                      {...bindHDPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phát đồng kiểm</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={NPDKPriceRef}\r\n                      value={NPDKPrice}\r\n                      {...bindNPDKPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group\">\r\n                  <label>Phát tận tay</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={PTTPriceRef}\r\n                      value={PTTPrice}\r\n                      {...bindPTTPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"form-group\">\r\n                  <label>Hàng quá khổ</label>\r\n                  <div className=\"input-group mb-2\">\r\n                    <input\r\n                      disabled=\"disabled\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      ref={HQKPriceRef}\r\n                      value={HQKPrice}\r\n                      {...bindHQKPrice}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                      <div className=\"input-group-text\">đ</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='col-md-12 margin-top-10 border-bottom-dash'>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row margin-top-10 Fee\">\r\n          <div className=\"col-md-6 margin-top-10\">\r\n            <div className=\"form-group\">\r\n              <label>Tổng cước phí (VND)</label>\r\n              <div className=\"input-group mb-2\">\r\n                <input\r\n                  disabled=\"disabled\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  ref={AmountRef}\r\n                  value={Amount}\r\n                  {...bindAmount}\r\n                />{\" \"}\r\n                {/*  <div className=\"input-group-append\">\r\n                  <div className=\"input-group-text\">đ</div>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 margin-top-10\">\r\n            <div className=\"form-group\">\r\n              <label>Thời gian ước tính giao</label>\r\n              <input\r\n                disabled=\"disabled\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                ref={DealineRef}\r\n                value={Dealine}\r\n                {...bindDealine}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-12 text-center margin-top-10\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-refesh text-transform btn-sm\"\r\n          onClick={Clearform}\r\n        >\r\n          <span>\r\n            <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i> Làm mới\r\n          </span>\r\n        </button>\r\n        <button\r\n          disabled={disable}\r\n          type=\"button\"\r\n          className=\"btn btn-save text-transform btn-sm margin-left-10\"\r\n          onClick={SaveLading}\r\n        >\r\n          <span>\r\n            {\" \"}\r\n            <i class=\"fa fa-floppy-o\" aria-hidden=\"true\"></i> Lưu\r\n          </span>\r\n        </button>\r\n        {/* <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning pull-right btn-sm\"\r\n          onClick={WriteLadingDraft}\r\n        >\r\n          <span>\r\n            <i className=\"material-icons Iconsize18\">save</i> Lưu nháp\r\n          </span>\r\n        </button> */}\r\n\r\n        {Customer?.Verification !== 1 && Customer?.Type === 2 &&\r\n          (<Link to=\"/xac-thuc-tai-khoan\" className=\"btn btn-warning btn-sm pull-right\"><i className=\"fa fa-check\"></i> Xác thực tài khoản</Link>)}\r\n      </div>\r\n      <div className=\"clearfix\"></div>\r\n    </form>\r\n  );\r\n\r\n  const ListLading = (\r\n    <form className=\"row\">\r\n      {/* <div className=\"main-title bg-light-green\">\r\n        <i className=\"fa fa-list\"></i> VẬN ĐƠN MỚI TẠO TRONG TUẦN\r\n      </div> */}\r\n      <div className=\"col-md-12 margin-top-10\">\r\n        <div className=\"pull-left\">\r\n          <div className=\"form-check margin-top-10\">\r\n            <label className=\"form-check-label\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                value=\"checkAll\"\r\n                checked={IsChecked}\r\n                onChange={handleCheckAll}\r\n              />\r\n              <span className=\"form-check-sign\">\r\n                <span className=\"check\"> </span>\r\n              </span>\r\n              Chọn tất cả\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"pull-right\">\r\n          <div className=\"input-group text-right\">\r\n            <div\r\n              className=\"input-group-prepend\"\r\n              style={{ marginRight: \"5px\", marginTop: \"5px\" }}\r\n            >\r\n              Số liên cần in{\" \"}\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              value={sheetprint}\r\n              ref={sheetprintRef}\r\n              {...bindsheetprint}\r\n              onChange={(event) => ChangeSheetPrint(event)}\r\n              min=\"1\"\r\n              max=\"10\"\r\n              className=\"form-control maxwidth100\"\r\n              placeholder=\"Số liên in\"\r\n              style={{ height: \"35px\" }}\r\n            />\r\n            <div className=\"form-group-append\">\r\n              <button\r\n                onClick={() => {\r\n                  APIC_spLadingGetDataPrint();\r\n                }}\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-save text-transform\"\r\n                style={{ margin: 0, marginLeft: '10px' }}\r\n              >\r\n                <i className=\"material-icons\">print</i>\r\n                &nbsp; In\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-12 margin-top-10\">\r\n        <DataTable data={dataLading} columns={columns} />\r\n      </div>\r\n    </form>\r\n  );\r\n  const [ShowCreateTab, setShowCreateTab] = useState(\"show active\");\r\n  const [ShowListTab, setShowListTab] = useState(\"\");\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row Formlading\">\r\n          <div className=\"col-md-12\">\r\n            <div className='row border-bottom'>\r\n              <ul className=\"nav nav-pills col-md-12 nav-pills-warning hide-sm big-nav nav-pillss\" style={{ display: \"inline-flex\" }}>\r\n                <li className=\"nav-item col-md-6 whiteSpace\">\r\n                  <a\r\n                    className={\"nav-link \" + ShowCreateTab}\r\n                    data-toggle=\"tab\"\r\n                    href=\"#link1\"\r\n                    onClick={(e) => {\r\n                      setShowCreateTab(\"show active\");\r\n                      setShowListTab(\"\");\r\n                    }}\r\n                    style={{ padding: \"10px 15px !important\" }}\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i> {Title}\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item col-md-6 whiteSpace\">\r\n                  <a\r\n                    className={\"nav-link \" + ShowListTab}\r\n                    data-toggle=\"tab\"\r\n                    href=\"#link2\"\r\n                    onClick={(e) => {\r\n                      setShowCreateTab(\"\");\r\n                      setShowListTab(\"show active\");\r\n                    }}\r\n                    style={{ padding: \"10px 15px !important\" }}\r\n                  >\r\n                    <i className=\"fa fa-list\"></i> VẬN ĐƠN MỚI TẠO TRONG TUẦN\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"tab-content\" id=\"nav-tabContent\">\r\n              <div className={\"tab-pane fade \" + ShowCreateTab}>{CreateLading}</div>\r\n              <div className={\"tab-pane fade \" + ShowListTab}>{ListLading}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <img\r\n        src=\"https://customer.netco.com.vn/assets/img/LogoNetco.jpg\"\r\n        style={{ display: \"none\" }}\r\n      />\r\n      <img\r\n        src=\"https://customer.netco.com.vn/assets/img/iso9001.jpg\"\r\n        style={{ display: \"none\" }}\r\n      />\r\n\r\n      <div id=\"barcodeTarget\" style={{ display: \"none\" }}>{HtmlPrint}</div>\r\n      <div\r\n        className=\"modal\"\r\n        id=\"modalDetail\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"modalDetail\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">Chi tiết vận đơn</h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <LadingDetail LadingCode=\"\" LadingId={DetailId} />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-default btn-sm\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                <i className=\"fa fa-close\"></i> Đóng\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {HtmlAddress}\r\n    </div>\r\n  );\r\n\r\n  //#endregion *********** HÀM LOAD HTML ***********\r\n\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\SearchLading.js",["1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport Barcode from \"react-barcode\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\nimport { Lading } from \"../../Redux/Actions/Category\";\r\nimport { LadingDetail } from \"../../Common\";\r\nimport $ from \"jquery\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  FormatDate,\r\n  DecodeString,\r\n  FormatMoney,\r\n  FormatNumber,\r\n  FormatDateJson,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\n\r\nexport const SearchLading = () => {\r\n  //#region Khai báo biến\r\n  const config = {\r\n    background: \"white\",\r\n    marginTop: \"1px\",\r\n    marginBottom: \"5px\",\r\n    fontOptions: \"italic\",\r\n    width: 1,\r\n    height: 40,\r\n  };\r\n  const [ModalImg, setModalImg] = useState(\"\");\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [Fromdate, setFromdate] = useState(new Date());\r\n  const [Todate, setTodate] = useState(new Date());\r\n  const [dataLading, setdataLading] = useState([]);\r\n  const [Status, setStatus] = useState(9);\r\n  const [StatusName, setStatusName] = useState(`Đơn hàng mới tạo`);\r\n  const [Disable, setDisable] = useState(false);\r\n  const [Checked, setChecked] = useState(false);\r\n  const [DataPrint, setDataPrint] = useState([]);\r\n  const [IsChecked, setIsChecked] = useState(false);\r\n  const [sheetprint, bindsheetprint, setsheetprint] = useInput(2);\r\n  const sheetprintRef = useRef();\r\n  const [State, setState] = useState([]);\r\n  const [Ladingcode, bindLadingcode, setLadingcode] = useInput(\"\");\r\n  const LadingcodeRef = useRef();\r\n  //#endregion Khai báo biến\r\n\r\n  useEffect(() => {\r\n    if (CustomerID === null) {\r\n      history.push(\"/\");\r\n    }\r\n    APIC_spLadingGetMany(Status);\r\n  }, []);\r\n\r\n  //#region Form tìm kiếm vận đơn\r\n\r\n  //#region Trạng thái vận đơn\r\n  const [Status1, setStatus1] = useState(0);\r\n  const [Status2, setStatus2] = useState(0);\r\n  const [Status3, setStatus3] = useState(0);\r\n  const [Status4, setStatus4] = useState(0);\r\n  const [Status5, setStatus5] = useState(0);\r\n  const [Status6, setStatus6] = useState(0);\r\n  const [Status7, setStatus7] = useState(0);\r\n  const [Status8, setStatus8] = useState(0);\r\n  const [Status9, setStatus9] = useState(0);\r\n  const [Status50, setStatus50] = useState(0);\r\n  //#endregion Trạng thái vận đơn\r\n\r\n  const FromDate = (item) => {\r\n    setFromdate(item);\r\n  };\r\n\r\n  const ToDate = (item) => {\r\n    setTodate(item);\r\n  };\r\n\r\n  const ExportToExcel = () => {\r\n    if (dataLading.length > 0) {\r\n      let dataExcel = dataLading.map((item, index) => {\r\n        return {\r\n          \"Mã vận đơn\": item.Code,\r\n          \"Mã đối tác\": item.PartnerCode,\r\n          \"Trạng thái\": item.StatusName,\r\n          \"Trọng lượng (gram)\": FormatMoney(item.Weight),\r\n          \"Số kiện\": item.Number,\r\n          \"Số khối (cbm)\": item.Mass,\r\n          \"Tiền thu hộ\": FormatMoney(item.COD),\r\n          \"Tổng cước phí\": FormatMoney(item.Amount),\r\n          \"Thời gian tạo\": FormatDateJson(item.CreateDate),\r\n          \"Ngày phát thành công\": item.FinishDate === undefined ? \"\" : FormatDateJson(item.FinishDate),\r\n          \"Ước tính nhận\": FormatDateJson(item.DealineTime, 1),\r\n          \"Hình thức thanh toán\": item.PaymentString,\r\n          \"Tỉnh đi\": item.CitySendCode,\r\n          \"Tỉnh đến\": item.CityRecipientCode,\r\n          \"Dịch vụ\": item.ServiceName,\r\n          \"Người nhận\": item.RecipientName,\r\n          \"SĐT người nhận\": item.RecipientPhone,\r\n          \"Công ty nhận\": item.RecipientCompany,\r\n          \"Địa chỉ người nhận\": item.RecipientAddress,\r\n          \"Người nhận thực tế\": item.Recipient_reality\r\n        }\r\n      });\r\n      ExportExcel(\r\n        dataExcel,\r\n        \"Danh sách \" +\r\n        StatusName +\r\n        \" từ ngày \" +\r\n        FormatDateJson(Fromdate, 1) +\r\n        \" đến ngày \" +\r\n        FormatDateJson(Todate, 1)\r\n      );\r\n    } else {\r\n      Alerterror(\"Không có dữ liệu để xuất. Vui lòng tìm kiếm trước !\");\r\n    }\r\n  };\r\n\r\n  const ExportAllToExcel = async () => {\r\n    setdataLading([]);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      LadingCode: Ladingcode,\r\n      FromDate: Fromdate.toISOString(),\r\n      ToDate: Todate.toISOString(),\r\n      CustomerID: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      CustomerCode: GetCookie(\"CustomerCode\"),\r\n      Status: 0,\r\n      Skip: 0,\r\n      Take: 15000,\r\n    };\r\n    let prList = {\r\n      Json: JSON.stringify(params),\r\n      func: \"APIC_spLadingGetManyJsonAuto\",\r\n      API_key: APIKey,\r\n    };\r\n    const data = await mainAction.API_spCallServer(prList, dispatch);\r\n    debugger;\r\n    if (data.length > 0) {\r\n      let dataExcel = data.map((item, index) => {\r\n        return {\r\n          \"Mã vận đơn\": item.Code,\r\n          \"Mã đối tác\": item.PartnerCode,\r\n          \"Trạng thái\": item.StatusName,\r\n          \"Trọng lượng (gram)\": FormatMoney(item.Weight),\r\n          \"Số kiện\": item.Number,\r\n          \"Số khối (cbm)\": item.Mass,\r\n          \"Tiền thu hộ\": FormatMoney(item.COD),\r\n          \"Tổng cước phí\": FormatMoney(item.Amount),\r\n          \"Thời gian tạo\": FormatDateJson(item.CreateDate),\r\n          \"Ngày phát thành công\": item.FinishDate === undefined ? \"\" : FormatDateJson(item.FinishDate),\r\n          \"Ước tính nhận\": FormatDateJson(item.DealineTime, 1),\r\n          \"Hình thức thanh toán\": item.PaymentString,\r\n          \"Tỉnh đi\": item.CitySendCode,\r\n          \"Tỉnh đến\": item.CityRecipientCode,\r\n          \"Dịch vụ\": item.ServiceName,\r\n          \"Người nhận\": item.RecipientName,\r\n          \"SĐT người nhận\": item.RecipientPhone,\r\n          \"Công ty nhận\": item.RecipientCompany,\r\n          \"Địa chỉ người nhận\": item.RecipientAddress,\r\n          \"Ngưởi nhận thực tế\": item.Recipient_reality\r\n        }\r\n      });\r\n      ExportExcel(\r\n        dataExcel,\r\n        \"Danh sách vận đơn từ ngày \" +\r\n        FormatDateJson(Fromdate, 1) +\r\n        \" đến ngày \" +\r\n        FormatDateJson(Todate, 1)\r\n      );\r\n    } else {\r\n      Alerterror(\"Không có dữ liệu để xuất. Vui lòng tìm kiếm trước !\");\r\n    }\r\n  };\r\n\r\n  const GoToComplain = (item) => {\r\n    window.location.href = \"/ho-tro-don-hang?code=\" + item.Code;\r\n  };\r\n\r\n  //#region HÀM XÓA VẬN ĐƠN\r\n\r\n  const CPN_spLading_Delete_All = async (item) => {\r\n    const params = {\r\n      json: \"[{\\\"Id\\\":\" + item._original.Id + \",\\\"IsDelete\\\":1}]\",\r\n      func: \"CPN_spLading_Delete_All\",\r\n    };\r\n    try {\r\n      const result = await mainAction.API_spCallServer(params, dispatch);\r\n      setdataLading(dataLading.filter((p) => p.Id !== item._original.Id));\r\n      Alertsuccess(result.ReturnMess);\r\n      //APIC_spLadingGetMany();\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      //setDisable(false); // disable button\r\n    }\r\n  };\r\n\r\n  //#endregion HÀM XÓA VẬN ĐƠN\r\n\r\n  const [ViewDetail, setViewDetail] = useState(null);\r\n  const [DetailId, setDetailId] = useState(0);\r\n  const GoToDetail = async (item) => {\r\n    //window.location.href = \"/tra-cuu-van-don?code=\" + item.Code;\r\n    let LadingDetail = item._original;\r\n    setDetailId(item._original.Id);\r\n  };\r\n\r\n  const APIC_spLadingGetMany = async (stt) => {\r\n    setIsChecked(false);\r\n    setChecked(false);\r\n    setdataLading([]);\r\n    let params = {\r\n      AppAPIKey: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      LadingCode: Ladingcode,\r\n      FromDate: Fromdate.toISOString(),\r\n      ToDate: Todate.toISOString(),\r\n      CustomerID: CustomerID,\r\n      CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      CustomerCode: GetCookie(\"CustomerCode\"),\r\n      Status: stt,\r\n      Skip: 0,\r\n      Take: 5000,\r\n    };\r\n    setStatus(stt);\r\n    setDisable(true); // disable button\r\n    try {\r\n      //#region Set status name cho tiêu đề\r\n\r\n      if (stt === 9) setStatusName(`Đơn hàng mới tạo`);\r\n      else if (stt === 1) setStatusName(`Đơn hàng đang lấy hàng`);\r\n      else if (stt === 2) setStatusName(`Đơn hàng đã lấy hàng`);\r\n      else if (stt === 3) setStatusName(`Đơn hàng đang trung chuyển`);\r\n      else if (stt === 4) setStatusName(`Đơn hàng nhận tại chi nhánh phát`);\r\n      else if (stt === 5) setStatusName(`Đơn hàng đang phát`);\r\n      else if (stt === 50) setStatusName(`Đơn hàng đang phát lại`);\r\n      else if (stt === 6) setStatusName(`Đơn hàng phát thành công`);\r\n      else if (stt === 7) setStatusName(`Đơn hàng khai thác lại`);\r\n      else if (stt === 8) setStatusName(`Đơn hàng hoàn gốc`);\r\n      else setStatusName(\"Danh sách Đơn hàng\");\r\n\r\n      //#endregion Set status name cho tiêu đề\r\n\r\n      //#region Đếm vận đơn theo Status\r\n      let pr = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spLading_SumByStatus\",\r\n        API_key: APIKey,\r\n      };\r\n      const _count = await mainAction.API_spCallServer(pr, dispatch);\r\n      debugger;\r\n      _count.map((item, index) => {\r\n        if (item.Status === 1) setStatus1(item.Total);\r\n        if (item.Status === 2) setStatus2(item.Total);\r\n        if (item.Status === 3) setStatus3(item.Total);\r\n        if (item.Status === 4) setStatus4(item.Total);\r\n        if (item.Status === 5) setStatus5(item.Total);\r\n        if (item.Status === 6) setStatus6(item.Total);\r\n        if (item.Status === 7) setStatus7(item.Total);\r\n        if (item.Status === 8) setStatus8(item.Total);\r\n        if (item.Status === 9) setStatus9(item.Total);\r\n        if (item.Status === 50) setStatus50(item.Total);\r\n      });\r\n\r\n      //#endregion Đếm vận đơn theo Status\r\n\r\n      //#region Get danh sách vận đơn\r\n      let prList = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spLadingGetManyJsonAuto\",\r\n        API_key: APIKey,\r\n      };\r\n      const data = await mainAction.API_spCallServer(prList, dispatch);\r\n      setdataLading(data);\r\n      setDataPrint([]);\r\n      setViewDetail(null);\r\n      setModalImg(\"\");\r\n      setDisable(false); // disable button\r\n      mainAction.LOADING({ IsLoading: false }, dispatch);\r\n      //#endregion Get danh sách vận đơn\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      setDisable(false); // disable button\r\n    }\r\n  };\r\n\r\n  //#endregion Form tìm kiếm vận đơn\r\n\r\n  //#region In vận đơn\r\n\r\n  const [pageprint, setpageprint] = useState([0, 1]);\r\n  const [HtmlPrint, setHtmlPrint] = useState([]);\r\n\r\n  const GetPrintMask = (form, PayType, COD) => {\r\n    if (form === \"A5\") {\r\n      if (PayType === 1 && COD > 0)\r\n        return (\r\n          <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.4, marginTop: \"35vh\", marginLeft: \"20vw\", fontSize: \"120px\", fontWeight: 600, transform: \"rotate(70deg)\", fontFamily: \"Arial\" }}>COD-TTĐN</div>\r\n        )\r\n      else if (PayType !== 1 && COD > 0)\r\n        return (\r\n          <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.4, marginTop: \"35vh\", marginLeft: \"30vw\", fontSize: \"120px\", fontWeight: 600, transform: \"rotate(60deg)\", fontFamily: \"Arial\" }}>COD</div>\r\n        )\r\n      else if (PayType === 1 && COD === 0)\r\n        return (\r\n          <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.4, marginTop: \"35vh\", marginLeft: \"30vw\", fontSize: \"120px\", fontWeight: 600, transform: \"rotate(60deg)\", fontFamily: \"Arial\" }}>TTĐN</div>\r\n        )\r\n      else return (<></>)\r\n    }\r\n    else if (form === \"A6\") {\r\n      if (PayType === 1 && COD > 0)\r\n        return (\r\n          <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.25, marginTop: \"32vh\", fontSize: \"80px\", fontWeight: 600, transform: \"rotate(-40deg)\", fontFamily: \"Arial\" }}>COD-TTĐN</div>\r\n        )\r\n      else if (PayType !== 1 && COD > 0)\r\n        return (\r\n          <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.25, marginTop: \"26vh\", marginLeft: \"15vw\", fontSize: \"103px\", fontWeight: 600, transform: \"rotate(-38deg)\", fontFamily: \"Arial\" }}>COD</div>\r\n        )\r\n      else if (PayType === 1 && COD === 0)\r\n        return (\r\n          <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.25, marginTop: \"28vh\", marginLeft: \"10vw\", fontSize: \"100px\", fontWeight: 600, transform: \"rotate(-40deg)\", fontFamily: \"Arial\" }}>TTĐN</div>\r\n        )\r\n      else return (<></>)\r\n    }\r\n  }\r\n\r\n  const APIC_spLadingGetDataPrint = async (Keys) => {\r\n    if (DataPrint.length === 0) {\r\n      Alerterror(\"Vui lòng chọn vận đơn cần in\");\r\n      return;\r\n    }\r\n    debugger\r\n    let db = [],\r\n      NumberPack = 0;\r\n    await setHtmlPrint([]);\r\n    //#region SET HTML PRINT\r\n\r\n    //#region in bill  A5+ A4\r\n    if (Keys === 1) {\r\n      await setHtmlPrint(\r\n        DataPrint.map((item, index) => {\r\n          return (\r\n            <div>\r\n              {pageprint.map((detail, idele) => {\r\n                return (\r\n                  <div key={index} className=\"bill\" style={{ width: \"710px\", height: \"1050px\", pageBreakBefore: \"always\", border: \"2px solid #000\"}} >\r\n                    {GetPrintMask(\"A5\", item.PaymentType, item.COD)}\r\n                    <table style={{ width: \"100%\", fontWeight: \"600\", borderBottom: \"2px solid #ddd\", textAlign: \"center\" }}>\r\n                      <tr>\r\n                        <td style={{ width: \"180px\", verticalAlign: \"top\" }}>\r\n                          <img src=\"https://customer.netco.com.vn/assets/img/logonetco.jpg\" style={{ width: \"180px\", height: \"70px\" }} />\r\n                        </td>\r\n                        <td>\r\n                          <div style={{ width: \"100%\", position: \"relative\", display: \"inline-block\", height: \"40px\", marginBottom: \"5px\"}}>\r\n                            <div><Barcode value={item.Code} height=\"35\" /></div>\r\n                          </div>\r\n                          <br />\r\n                          <br />\r\n                          <p>BIÊN BẢN BÀN GIAO<br />(DELIVERY RECEIPTS)</p>\r\n                        </td>\r\n                        <td style={{  width: \"160px\", verticalAlign: \"top\", marginRight: \"1px\" }} >\r\n                          <img src=\"https://customer.netco.com.vn/assets/img/iso9001.jpg\" style={{ width: \"160px\", height: \"70px\" }} />\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\"}} cellspacing=\"0\" cellpadding=\"5\" >\r\n                      <tr>\r\n                        <td rowspan=\"2\" style={{ borderRight: \"1px solid #ddd\", width: \"20px\" }}>\r\n                          <div style={{ marginLeft: \"--20px\", writingMode: \"tb-rl\"}}><b>INFORMATION</b></div>\r\n                        </td>\r\n                        <td style={{ borderBottom: \"2px solid #ddd\", width: \"340px\", borderRight: \"1px solid #ddd\", }} >\r\n                          <b style={{ display: \"inline-block\", width: \"240px\" }}>Ngày gửi hàng <i>(Date)</i></b>: {FormatDateJson(item.CreateDate, 1)}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"240px\" }}>Số kiện <i>(Package)</i></b>: {FormatMoney(item.Number)}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"240px\" }}>Nội dung hàng hóa <i>(Document,Goods)</i></b>: {item.Description !== undefined ? item.Description : \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"240px\" }}>Dịch vụ bưu chính <i>((Postal services)</i></b>: <span>{item.ServiceName}</span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"240px\" }}>Dịch vụ cộng thêm <i>(Extra services)</i></b>: \r\n                          {item.ServiceGTGTName !== undefined ? item.ServiceGTGTName : \"\"}\r\n                          <br />\r\n                        </td>\r\n                        <td colspan=\"\" style={{ borderBottom: \"2px solid #ddd\" }}>\r\n                          <lbl style={{ display: \"inline-block\", width: \"210px\" }}>{(item.Mass === 0 || item.Mass === undefined) ? \"Trọng lượng \" : \"Khối lượng \"} <i>{(item.Mass === 0 || item.Mass === undefined) ? \"(Weight): \" : \"(Mass): \"}</i></lbl>: \r\n                          <b>{(item.Mass === 0 || item.Mass === undefined) ? FormatNumber(item.Weight) : item.Mass} {(item.Mass === 0 || item.Mass === undefined) ? \" (gram)\" : \" (CBM)\"}</b>\r\n                          <br />\r\n                          <lbl style={{ display: \"inline-block\", width: \"210px\" }}>HT thanh toán <i>(Payment)</i></lbl>: <b>{item.PaymentString !== undefined ? item.PaymentString : \"Khác\"}</b>\r\n                          <br />\r\n                          <lbl style={{ display: \"inline-block\", width: \"210px\" }} >COD</lbl>: <b>{FormatMoney(item.COD)} đ</b>\r\n                          <br />\r\n                          <lbl style={{ display: \"inline-block\", width: \"210px\" }}>Số tiền phải thu <i>(Total receivables)</i></lbl>: \r\n                          <b>{FormatMoney(item.PaymentType == 1 ? (item.COD + item.Amount) : item.COD)} đ</b>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colspan=\"4\" style={{ position: \"relative\" }}>\r\n                          <b>THÔNG TIN HÀNG HÓA <i>(PARCEL INFORMATION)</i></b> : <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Mã sản phẩm 1<i>(Product Code 1)</i></b>: {item.ProductCode ?? \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Tên sản phẩm 1 <i>((Product Name 1)</i></b>: {item.ProductName ?? \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Seri sản phẩm 1<i>(Product Seri 1)</i></b>: <span>{item.ProductDes ?? \"\"}</span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Tổng SP <i>(Total product)</i></b>: {item.TotalProduct ?? \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Danh sách SP <i>(List of product)</i></b>: {item.ListProductCode ?? \"\"}\r\n                          <br />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colspan=\"4\">\r\n                          <u><b>* LƯU Ý GIAO (DELIVERY NOTE): </b></u><span>{item.Noted !== undefined ? item.Noted : \"\"}</span>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\", }} cellspacing=\"0\" cellpadding=\"5\" >\r\n                      <tr>\r\n                        <td style={{ borderRight: \"1px solid #ddd\", width: \"20px\" }}>\r\n                          <div style={{ marginLeft: \"--20px\", writingMode: \"tb-rl\", }} ><b>DO</b></div>\r\n                        </td>\r\n                        <td style={{ textAlign: \"center\" }}>\r\n                          <div><Barcode value={item.PartnerCode} height=\"35\" /></div>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\", }} cellspacing=\"0\" cellpadding=\"5\" >\r\n                      <tr>\r\n                        <td style={{ borderRight: \"1px solid #ddd\", width: \"20px\" }}>\r\n                          <div style={{ marginLeft: \"--20px\", writingMode: \"tb-rl\", }}><b>SENDER</b> </div>\r\n                        </td>\r\n                        <td style={{ position: \"relative\" }}>\r\n                          <b>THÔNG TIN NGƯỜI GỬI (SENDER INFORMATION)</b>: <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Mã khách hàng <i>(Customer code)</i></b>: {item.CustomerCode}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Người gửi <i>(Sender's name)</i></b>: {item.CustomerNamePrint}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Điện thoại <i>(Phone)</i></b>: <span>{item.CustomerPhonePrint}\r\n                          </span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Địa chỉ <i>(Address)</i></b>: {item.CustomerAddressPrint}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Tỉnh/TP <i>(Province/City)</i></b>: {item.CitySendCode}\r\n                          <br />\r\n                          <span style={{padding: \"2px 10px\",fontWeight: \"bold\",fontSize: \"45px\",borderTop: \"2px solid #000\",borderBottom: \"2px solid #000\",borderLeft: \"2px solid #000\",top: \"-2px\",right: 0,position: \"absolute\",}}>{item.POCodeFrom}</span>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\", }} cellspacing=\"0\" cellpadding=\"5\">\r\n                      <tr>\r\n                        <td style={{ borderRight: \"1px solid #ddd\", width: \"20px\" }}>\r\n                          <div style={{ marginLeft: \"--20px\", writingMode: \"tb-rl\", }}><b>RECEIVER</b></div>\r\n                        </td>\r\n                        <td style={{ position: \"relative\" }}>\r\n                          <b>THÔNG TIN NGƯỜI NHẬN (RECEIVER'S INFORMATION)</b>: \r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Người nhận <i>(Recipient’s name)</i></b>: {item.RecipientName}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Điện thoại <i>(Phone)</i></b>: {item.RecipientPhonePrint}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Công ty nhận <i>(Recipient’s company)</i></b>: <span>{item.RecipientCompany !== undefined ? item.RecipientCompany : \"\"}</span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Số nhà, đường <i>(No., Street)</i></b>: {item.Street !== undefined ? item.Street : item.RecipientAddress}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Phường/Xã <i>(Ward/Commune)</i></b>: {item.Wards}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Quận/Huyện <i>(District)</i></b>: {item.District}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"255px\" }}>- Tỉnh/TP <i>(Province/City)</i></b>: {item.CityRecipientCode}\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\", textAlign: \"center\", fontWeight: \"bold\", fontSize: \"45px\",  }} cellspacing=\"0\" cellpadding=\"5\">\r\n                      <tr><td>{item.LocationTo}</td></tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\" }} cellspacing=\"0\" cellpadding=\"5\" >\r\n                      <tr>\r\n                        <td colspan=\"2\">\r\n                          Bên nhận hàng xác nhận Bên giao hàng đã giao cho Bên nhận hàng đúng, đủ nội dung như trên/\r\n                          <br />\r\n                          The consigneee confirms that the Delivery company has delivered to the consignee the correct and sufficient content as above.\r\n                          <br />\r\n                          Biên bản được lập thành 02 bản, mỗi bên giữ 01 bản có giá trị như nhau/\r\n                          <br />\r\n                          The Delivery record are made into 02 copies, each party keeps 01 copy with the same value.\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ textAlign: \"center\", width: \"50%\" }}>\r\n                          <br />\r\n                          <b>BÊN GIAO HÀNG</b> <br />\r\n                          <i>(Delivery Company)</i>\r\n                        </td>\r\n                        <td style={{ textAlign: \"center\", width: \"50%\" }}>\r\n                          Ngày (Date) ..... / ..... / 20.....\r\n                          <br />\r\n                          <b>BÊN NHẬN HÀNG</b>\r\n                          <br />\r\n                          <i>(Consignee)</i>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })\r\n      );\r\n    }\r\n    //#endregion\r\n\r\n    //#region in kiện A5+A4\r\n    else\r\n      if (Keys === 2) {\r\n        const params = {\r\n          Json: JSON.stringify(DataPrint),\r\n          func: \"CPN_spLading_List_Detail\"\r\n        }\r\n        debugger\r\n        const result = await mainAction.API_spCallServer(params, dispatch);\r\n        debugger\r\n        await setHtmlPrint(\r\n          DataPrint.map((v, index) => {\r\n            let TotalNumber = result.filter(e => e.Code === v.Code);\r\n            return (\r\n              <div key={\"L\" + index}>\r\n                {pageprint.map((detail, ideles) => {\r\n                  return (\r\n                    TotalNumber.map((v2, idele) => {//đặt biến trùng nhau nhiều\r\n                      NumberPack++;\r\n                      if (NumberPack === 4)\r\n                        NumberPack = 1;\r\n                      debugger\r\n                      return (\r\n                        <div key={\"N\" + index + \"_\" + idele + \"_\" + ideles} class=\"bill\" style={NumberPack === 3 ? { width: \"720px\", height: \"300px\", marginTop: \"45px\", border: \"2px solid #000\", pageBreakAfter: \"always\" } : (NumberPack === 1 ? { width: \"720px\", height: \"300px\", marginTop: \"0px\", border: \"2px solid #000\" } : { width: \"720px\", height: \"300px\", marginTop: \"45px\", border: \"2px solid #000\" })}>\r\n                          {GetPrintMask(\"A5\", v2.PaymentType, v2.COD)}\r\n                          <table style={{ width: \"100%\", height: \"60px\", borderBottom: \"2px solid #000\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                            <tr>\r\n                              <td colspan=\"2\" style={{ width: \"50%\", paddingLeft: \"5px\", textAlign: \"center\", borderRight: \"2px solid #000\" }}>\r\n                                <img src=\"https://customer.netco.com.vn/assets/img/logonetco.jpg\" style={{ height: \"40px\" }} />\r\n                              </td>\r\n                              <td colspan=\"2\" style={{ width: \"50%\", paddingLeft: \"5px\" }}>\r\n                                <div style={{ padding: \"2px 20px\", fontWeight: \"bold\", fontSize: \"18px\", borderBottom: \"1px solid #000\", marginTop: \"-8px\" }}> MÃ KIỆN: <span style={{ fontSize: \"20px\" }}><b>{idele + 1}/{v2.Number}</b></span></div>\r\n                                <div style={{ padding: \"2px 20x\", fontWeight: \"bold\", fontSize: \"14px\" }}>Ngày tạo đơn : {FormatDateJson(v2.CreateDate, 1)}</div>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n\r\n                          <table style={{ width: \"100%\", height: \"90px\", textAlign: \"center\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                            <tr >\r\n\r\n                              <td colspan=\"2\" style={{ borderBottom: \"2px solid black\" }}>\r\n                                <div class=\"doCode\" style={{ padding: \"0px 8px\", fontWeight: \"bold\", fontSize: \"45px\", right: \"0\", textAlign: \"right\", marginRight: \"0\", height: \"75px\", padding: 0, position: \"relative\", display: \"inline-block\" }}><Barcode value={v2.NumberCode} height=\"35\" />\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n\r\n                          </table>\r\n\r\n                          <table style={{ width: \"100%\", height: \"110px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                            <tr >\r\n\r\n                              <td colspan=\"3\" style={{ width: \"25%\", paddingLeft: \"5px\", textAlign: \"center\", borderBottom: \"2px solid #000\", borderRight: \"2px solid #000\" }}>\r\n                                <div style={{ padding: \"2px 20px\", fontWeight: \"bold\", fontSize: \"19px\" }}>{v2.POCodeFrom}</div></td>\r\n                              <td colspan=\"3\" style={{ width: \"25%\", paddingLeft: \"5px\", textAlign: \"center\", borderBottom: \"2px solid #000\", borderRight: \"2px solid #000\" }}>\r\n                                <div style={{ padding: \"2px 20x\", fontWeight: \"bold\", fontSize: \"19px\" }}>{v2.POCodeTo}</div>\r\n                              </td>\r\n                              <td colspan=\"3\" style={{ width: \"50%\", paddingLeft: \"5px\", borderBottom: \"2px solid #000\" }}>\r\n                                <div style={{ padding: \"2px 20x\", fontSize: \"17px\", marginTop: \"-5px\" }}>Địa chỉ nhận: {v2.Street}</div>\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n\r\n                          <table style={{ width: \"100%\", height: \"40px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                            <tr>\r\n                              <td colspan=\"4\" style={{ width: \"20%\", paddingLeft: \"5px\" }}>\r\n                                <lbl style={{ display: \"inline-block\", fontSize: \"16px\" }}><b> Trọng lượng:</b></lbl><br />\r\n                              </td>\r\n                              <td colspan=\"4\" style={{ width: \"30%\", paddingLeft: \"5px\", borderRight: \"2px solid #000\" }}>\r\n                                <span style={{ fontSize: \"16px\" }}><b>{FormatNumber(v2.Weight)} (gram)</b></span> <br />\r\n                              </td>\r\n                              <td colspan=\"4\" style={{ width: \"20%\", paddingLeft: \"5px\" }}>\r\n                                <lbl style={{ display: \"inline-block\", fontSize: \"16px\" }}><b>Loại dịch vụ:</b></lbl>\r\n                              </td>\r\n                              <td colspan=\"4\" style={{ width: \"30%\", paddingLeft: \"5px\" }}>\r\n                                <span style={{ fontSize: \"16px\" }}> <b>{v2.ServiceCode}</b></span><br />\r\n                              </td>\r\n                            </tr>\r\n                          </table>\r\n\r\n                        </div>\r\n                      );\r\n                    })\r\n                  );\r\n                })\r\n                }\r\n              </div>\r\n            )\r\n          }));\r\n      }\r\n      //#endregion\r\n\r\n      //#region  in bill và kiện  A5+A4\r\n      else if (Keys === 0) {\r\n\r\n        const params = {\r\n          Json: JSON.stringify(DataPrint),\r\n          func: \"CPN_spLading_List_Detail\"\r\n        }\r\n        const result = await mainAction.API_spCallServer(params, dispatch);\r\n        await setHtmlPrint(\r\n          DataPrint.map((item, index) => {\r\n            let TotalNumber = result.filter(e => e.Code === item.Code);\r\n            return (\r\n              <div key={\"L\" + index}>\r\n                {pageprint.map((detail, ideles) => {\r\n                  NumberPack = 0;\r\n                  return (\r\n                    TotalNumber.map((v2, idele) => {\r\n                      if ((idele === 0)) {\r\n                        return (\r\n                          <div key={index} className=\"bill\" style={{ width: \"710px\", height: \"1050px\", pageBreakBefore: \"always\", border: \"2px solid #000\"}} >\r\n                    {GetPrintMask(\"A5\", item.PaymentType, item.COD)}\r\n                    <table style={{ width: \"100%\", fontWeight: \"600\", borderBottom: \"2px solid #ddd\", textAlign: \"center\" }}>\r\n                      <tr>\r\n                        <td style={{ width: \"180px\", verticalAlign: \"top\" }}>\r\n                          <img src=\"https://customer.netco.com.vn/assets/img/logonetco.jpg\" style={{ width: \"180px\", height: \"70px\" }} />\r\n                        </td>\r\n                        <td>\r\n                          <div style={{ width: \"100%\", position: \"relative\", display: \"inline-block\", height: \"40px\", marginBottom: \"5px\"}}>\r\n                            <div><Barcode value={item.Code} height=\"35\" /></div>\r\n                          </div>\r\n                          <br />\r\n                          <br />\r\n                          <p>BIÊN BẢN BÀN GIAO<br />(DELIVERY RECEIPTS)</p>\r\n                        </td>\r\n                        <td style={{  width: \"160px\", verticalAlign: \"top\", marginRight: \"1px\" }} >\r\n                          <img src=\"https://customer.netco.com.vn/assets/img/iso9001.jpg\" style={{ width: \"160px\", height: \"70px\" }} />\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\"}} cellspacing=\"0\" cellpadding=\"5\" >\r\n                      <tr>\r\n                        <td rowspan=\"2\" style={{ borderRight: \"1px solid #ddd\", width: \"20px\" }}>\r\n                          <div style={{ marginLeft: \"--20px\", writingMode: \"tb-rl\"}}><b>INFORMATION</b></div>\r\n                        </td>\r\n                        <td style={{ borderBottom: \"2px solid #ddd\", width: \"340px\", borderRight: \"1px solid #ddd\", }} >\r\n                          <b style={{ display: \"inline-block\", width: \"240px\" }}>Ngày gửi hàng <i>(Date)</i></b>: {FormatDateJson(item.CreateDate, 1)}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"240px\" }}>Số kiện <i>(Package)</i></b>: {FormatMoney(item.Number)}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"240px\" }}>Nội dung hàng hóa <i>(Document,Goods)</i></b>: {item.Description !== undefined ? item.Description : \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"240px\" }}>Dịch vụ bưu chính <i>((Postal services)</i></b>: <span>{item.ServiceName}</span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"240px\" }}>Dịch vụ cộng thêm <i>(Extra services)</i></b>: \r\n                          {item.ServiceGTGTName !== undefined ? item.ServiceGTGTName : \"\"}\r\n                          <br />\r\n                        </td>\r\n                        <td colspan=\"\" style={{ borderBottom: \"2px solid #ddd\" }}>\r\n                          <lbl style={{ display: \"inline-block\", width: \"210px\" }}>{(item.Mass === 0 || item.Mass === undefined) ? \"Trọng lượng \" : \"Khối lượng \"} <i>{(item.Mass === 0 || item.Mass === undefined) ? \"(Weight): \" : \"(Mass): \"}</i></lbl>: \r\n                          <b>{(item.Mass === 0 || item.Mass === undefined) ? FormatNumber(item.Weight) : item.Mass} {(item.Mass === 0 || item.Mass === undefined) ? \" (gram)\" : \" (CBM)\"}</b>\r\n                          <br />\r\n                          <lbl style={{ display: \"inline-block\", width: \"210px\" }}>HT thanh toán <i>(Payment)</i></lbl>: <b>{item.PaymentString !== undefined ? item.PaymentString : \"Khác\"}</b>\r\n                          <br />\r\n                          <lbl style={{ display: \"inline-block\", width: \"210px\" }} >COD</lbl>: <b>{FormatMoney(item.COD)} đ</b>\r\n                          <br />\r\n                          <lbl style={{ display: \"inline-block\", width: \"210px\" }}>Số tiền phải thu <i>(Total receivables)</i></lbl>: \r\n                          <b>{FormatMoney(item.PaymentType == 1 ? (item.COD + item.Amount) : item.COD)} đ</b>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colspan=\"4\" style={{ position: \"relative\" }}>\r\n                          <b>THÔNG TIN HÀNG HÓA <i>(PARCEL INFORMATION)</i></b> : <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Mã sản phẩm 1<i>(Product Code 1)</i></b>: {item.ProductCode ?? \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Tên sản phẩm 1 <i>((Product Name 1)</i></b>: {item.ProductName ?? \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Seri sản phẩm 1<i>(Product Seri 1)</i></b>: <span>{item.ProductDes ?? \"\"}</span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Tổng SP <i>(Total product)</i></b>: {item.TotalProduct ?? \"\"}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Danh sách SP <i>(List of product)</i></b>: {item.ListProductCode ?? \"\"}\r\n                          <br />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td colspan=\"4\">\r\n                          <u><b>* LƯU Ý GIAO (DELIVERY NOTE): </b></u><span>{item.Noted !== undefined ? item.Noted : \"\"}</span>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\", }} cellspacing=\"0\" cellpadding=\"5\" >\r\n                      <tr>\r\n                        <td style={{ borderRight: \"1px solid #ddd\", width: \"20px\" }}>\r\n                          <div style={{ marginLeft: \"--20px\", writingMode: \"tb-rl\", }} ><b>DO</b></div>\r\n                        </td>\r\n                        <td style={{ textAlign: \"center\" }}>\r\n                          <div><Barcode value={item.PartnerCode} height=\"35\" /></div>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\", }} cellspacing=\"0\" cellpadding=\"5\" >\r\n                      <tr>\r\n                        <td style={{ borderRight: \"1px solid #ddd\", width: \"20px\" }}>\r\n                          <div style={{ marginLeft: \"--20px\", writingMode: \"tb-rl\", }}><b>SENDER</b> </div>\r\n                        </td>\r\n                        <td style={{ position: \"relative\" }}>\r\n                          <b>THÔNG TIN NGƯỜI GỬI (SENDER INFORMATION)</b>: <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Mã khách hàng <i>(Customer code)</i></b>: {item.CustomerCode}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Người gửi <i>(Sender's name)</i></b>: {item.CustomerNamePrint}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Điện thoại <i>(Phone)</i></b>: <span>{item.CustomerPhonePrint}\r\n                          </span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Địa chỉ <i>(Address)</i></b>: {item.CustomerAddressPrint}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Tỉnh/TP <i>(Province/City)</i></b>: {item.CitySendCode}\r\n                          <br />\r\n                          <span style={{padding: \"2px 10px\",fontWeight: \"bold\",fontSize: \"45px\",borderTop: \"2px solid #000\",borderBottom: \"2px solid #000\",borderLeft: \"2px solid #000\",top: \"-2px\",right: 0,position: \"absolute\",}}>{item.POCodeFrom}</span>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\", }} cellspacing=\"0\" cellpadding=\"5\">\r\n                      <tr>\r\n                        <td style={{ borderRight: \"1px solid #ddd\", width: \"20px\" }}>\r\n                          <div style={{ marginLeft: \"--20px\", writingMode: \"tb-rl\", }}><b>RECEIVER</b></div>\r\n                        </td>\r\n                        <td style={{ position: \"relative\" }}>\r\n                          <b>THÔNG TIN NGƯỜI NHẬN (RECEIVER'S INFORMATION)</b>: \r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Người nhận <i>(Recipient’s name)</i></b>: {item.RecipientName}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Điện thoại <i>(Phone)</i></b>: {item.RecipientPhonePrint}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Công ty nhận <i>(Recipient’s company)</i></b>: <span>{item.RecipientCompany !== undefined ? item.RecipientCompany : \"\"}</span>\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Số nhà, đường <i>(No., Street)</i></b>: {item.Street !== undefined ? item.Street : item.RecipientAddress}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Phường/Xã <i>(Ward/Commune)</i></b>: {item.Wards}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"250px\" }}>- Quận/Huyện <i>(District)</i></b>: {item.District}\r\n                          <br />\r\n                          <b style={{ display: \"inline-block\", width: \"255px\" }}>- Tỉnh/TP <i>(Province/City)</i></b>: {item.CityRecipientCode}\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\", borderBottom: \"2px solid #ddd\", textAlign: \"center\", fontWeight: \"bold\", fontSize: \"45px\",  }} cellspacing=\"0\" cellpadding=\"5\">\r\n                      <tr><td>{item.LocationTo}</td></tr>\r\n                    </table>\r\n                    <table style={{ width: \"100%\" }} cellspacing=\"0\" cellpadding=\"5\" >\r\n                      <tr>\r\n                        <td colspan=\"2\">\r\n                          Bên nhận hàng xác nhận Bên giao hàng đã giao cho Bên nhận hàng đúng, đủ nội dung như trên/\r\n                          <br />\r\n                          The consigneee confirms that the Delivery company has delivered to the consignee the correct and sufficient content as above.\r\n                          <br />\r\n                          Biên bản được lập thành 02 bản, mỗi bên giữ 01 bản có giá trị như nhau/\r\n                          <br />\r\n                          The Delivery record are made into 02 copies, each party keeps 01 copy with the same value.\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td style={{ textAlign: \"center\", width: \"50%\" }}>\r\n                          <br />\r\n                          <b>BÊN GIAO HÀNG</b> <br />\r\n                          <i>(Delivery Company)</i>\r\n                        </td>\r\n                        <td style={{ textAlign: \"center\", width: \"50%\" }}>\r\n                          Ngày (Date) ..... / ..... / 20.....\r\n                          <br />\r\n                          <b>BÊN NHẬN HÀNG</b>\r\n                          <br />\r\n                          <i>(Consignee)</i>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                  </div>\r\n                        );\r\n                      }\r\n                      else {\r\n                        NumberPack++;\r\n                        if (NumberPack === 4)\r\n                          NumberPack = 1;\r\n                        debugger\r\n                        return (\r\n                          <div key={\"N\" + index + \"_\" + idele + \"_\" + ideles} class=\"bill\" style={NumberPack === 3 ? { width: \"720px\", height: \"300px\", marginTop: \"45px\", border: \"2px solid #000\", pageBreakAfter: \"always\" } : (NumberPack === 1 ? { width: \"720px\", height: \"300px\", marginTop: \"0px\", border: \"2px solid #000\", pageBreakBefore: \"always\" } : { width: \"720px\", height: \"300px\", marginTop: \"45px\", border: \"2px solid #000\" })}>\r\n                            {\r\n                              v2.PaymentType === 1 && v2.COD > 0 ? (\r\n                                <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.4, marginTop: \"35vh\", marginLeft: \"20vw\", fontSize: \"120px\", fontWeight: 600, transform: \"rotate(70deg)\", fontFamily: \"Arial\" }}>COD-TTĐN</div>) : (null)\r\n                            }\r\n                            {\r\n                              v2.PaymentType !== 1 && v2.COD > 0 ? (\r\n                                <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.4, marginTop: \"35vh\", marginLeft: \"30vw\", fontSize: \"120px\", fontWeight: 600, transform: \"rotate(60deg)\", fontFamily: \"Arial\" }}>COD</div>) : (null)\r\n                            }\r\n                            {\r\n                              v2.PaymentType === 1 && v2.COD === 0 ? (\r\n                                <div style={{ position: \"absolute\", zIndex: 10, opacity: 0.4, marginTop: \"35vh\", marginLeft: \"30vw\", fontSize: \"120px\", fontWeight: 600, transform: \"rotate(60deg)\", fontFamily: \"Arial\" }}>TTĐN</div>) : (null)\r\n                            }\r\n                            <table style={{ width: \"100%\", height: \"60px\", borderBottom: \"2px solid #000\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                              <tr>\r\n                                <td colspan=\"2\" style={{ width: \"50%\", paddingLeft: \"5px\", textAlign: \"center\", borderRight: \"2px solid #000\" }}>\r\n                                  <img src=\"https://customer.netco.com.vn/assets/img/logonetco.jpg\" style={{ height: \"40px\" }} />\r\n                                </td>\r\n                                <td colspan=\"2\" style={{ width: \"50%\", paddingLeft: \"5px\" }}>\r\n                                  <div style={{ padding: \"2px 20px\", fontWeight: \"bold\", fontSize: \"18px\", borderBottom: \"1px solid #000\", marginTop: \"-8px\" }}> MÃ KIỆN: <span style={{ fontSize: \"20px\" }}><b>{idele + 1}/{v2.Number}</b></span></div>\r\n                                  <div style={{ padding: \"2px 20x\", fontWeight: \"bold\", fontSize: \"14px\" }}>Ngày tạo đơn : {FormatDateJson(v2.CreateDate, 1)}</div>\r\n                                </td>\r\n                              </tr>\r\n                            </table>\r\n\r\n                            <table style={{ width: \"100%\", height: \"90px\", textAlign: \"center\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                              <tr >\r\n\r\n                                <td colspan=\"2\" style={{ borderBottom: \"2px solid black\" }}>\r\n                                  <div class=\"doCode\" style={{ padding: \"0px 8px\", fontWeight: \"bold\", fontSize: \"45px\", right: \"0\", textAlign: \"right\", marginRight: \"0\", height: \"75px\", padding: 0, position: \"relative\", display: \"inline-block\" }}><Barcode value={v2.NumberCode} height=\"35\" />\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n\r\n                            </table>\r\n\r\n                            <table style={{ width: \"100%\", height: \"110px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                              <tr >\r\n\r\n                                <td colspan=\"3\" style={{ width: \"25%\", paddingLeft: \"5px\", textAlign: \"center\", borderBottom: \"2px solid #000\", borderRight: \"2px solid #000\" }}>\r\n                                  <div style={{ padding: \"2px 20px\", fontWeight: \"bold\", fontSize: \"19px\" }}>{v2.POCodeFrom}</div></td>\r\n                                <td colspan=\"3\" style={{ width: \"25%\", paddingLeft: \"5px\", textAlign: \"center\", borderBottom: \"2px solid #000\", borderRight: \"2px solid #000\" }}>\r\n                                  <div style={{ padding: \"2px 20x\", fontWeight: \"bold\", fontSize: \"19px\" }}>{v2.POCodeTo}</div>\r\n                                </td>\r\n                                <td colspan=\"3\" style={{ width: \"50%\", paddingLeft: \"5px\", borderBottom: \"2px solid #000\" }}>\r\n                                  <div style={{ padding: \"2px 20x\", fontSize: \"17px\", marginTop: \"-5px\" }}>Địa chỉ nhận: {v2.Street}</div>\r\n                                </td>\r\n                              </tr>\r\n                            </table>\r\n\r\n                            <table style={{ width: \"100%\", height: \"40px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                              <tr>\r\n                                <td colspan=\"4\" style={{ width: \"20%\", paddingLeft: \"5px\" }}>\r\n                                  <lbl style={{ display: \"inline-block\", fontSize: \"16px\" }}><b> Trọng lượng:</b></lbl><br />\r\n                                </td>\r\n                                <td colspan=\"4\" style={{ width: \"30%\", paddingLeft: \"5px\", borderRight: \"2px solid #000\" }}>\r\n                                  <span style={{ fontSize: \"16px\" }}><b>{FormatNumber(v2.Weight)} (gram)</b></span> <br />\r\n                                </td>\r\n                                <td colspan=\"4\" style={{ width: \"20%\", paddingLeft: \"5px\" }}>\r\n                                  <lbl style={{ display: \"inline-block\", fontSize: \"16px\" }}><b>Loại dịch vụ:</b></lbl>\r\n                                </td>\r\n                                <td colspan=\"4\" style={{ width: \"30%\", paddingLeft: \"5px\" }}>\r\n                                  <span style={{ fontSize: \"16px\" }}> <b>{v2.ServiceCode}</b></span><br />\r\n                                </td>\r\n                              </tr>\r\n                            </table>\r\n\r\n                          </div>\r\n                        );\r\n                      }\r\n                    })\r\n                  );\r\n                })\r\n                }\r\n              </div>\r\n            )\r\n          }));\r\n      }\r\n      //#endregion\r\n      //#region in a6\r\n      else if (Keys === 3) {\r\n        await setHtmlPrint(\r\n          DataPrint.map((v, index) => {\r\n            return (\r\n              <div>\r\n                {pageprint.map((detail, idele) => {\r\n                  return (\r\n                    <div class=\"bill' + v.Code + '\" style={{ width: \"470px\", height: \"650px\", pageBreakBefore: \"always\", pageBreakAfter: \"always\", border: \"2px solid #000\" }}>\r\n                      {GetPrintMask(\"A6\", v.PaymentType, v.COD)}\r\n                      <table style={{ width: \"100%\", fontWeight: \"600\", borderBottom: \"2px solid #000\", textAlign: \"center\", height: \"55px\" }}>\r\n                        <tr>\r\n                          <td style={{ width: \"50%\", verticalAlign: \"top\" }}><img src=\"https://customer.netco.com.vn/assets/img/logonetco.jpg\" style={{ height: \"46px\" }} /></td>\r\n                          <td style={{ width: \"50%\", verticalAlign: \"top\" }}>\r\n                            <div><p> PHIẾU GIAO HÀNG </p></div>\r\n                            <div style={{ position: \"relative\", display: \"inline-block\", fontSize: \"13px\" }}> Ngày tạo : {FormatDateJson(v.CreateDate, 1)}</div>\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n\r\n                      <table style={{ width: \"100%\", fontWeight: \"600\", borderBottom: \"2px solid #000\", textAlign: \"center\", height: \"90px\" }}>\r\n                        <tr>\r\n                          <td><div style={{ padding: \"0px 5px\", position: \"relative\", display: \"inline-block\" }}><div class=\"code\" style={{ width: \"25%\" }} ><Barcode value={v.Code} height=\"35\" /> </div></div></td>\r\n                        </tr>\r\n                      </table>\r\n\r\n                      <table style={{ width: \"0100%\", borderBottom: \"2px solid #000\", fontSize: \"13px\", height: \"140px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                        <tr>\r\n\r\n                          <td style={{ borderRight: \"2px solid #000\", width: \"50%\", paddingLeft: \"10px\", fontSize: \"12px\", verticalAlign: \"top\", height: \"140px\" }}>\r\n                            <lbl style={{ display: \"inline-block\" }}> <b>Tên KH gửi</b></lbl>: <span>{v.CustomerName}</span><br />\r\n                            <lbl style={{ display: \"inline-block\" }}><b>Mã khách hàng</b></lbl>: <span>{v.CustomerCode} </span><br />\r\n                            <lbl style={{ display: \"inline-block\" }}><b>Người gửi </b></lbl>: <span>{v.CustomerName}</span><br />\r\n                            <lbl style={{ display: \"inline-block\" }}><b>Điện thoại </b></lbl>: <span>{v.CustomerPhonePrint}</span><br />\r\n                            <lbl style={{ display: \"inline-block\" }}><b>Địa chỉ</b></lbl>: <span style={{ wordbreak: \"break-all\" }}>{v.CustomerAddressPrint}</span><br />\r\n                          </td>\r\n                          <td style={{ width: \"50%\", paddingLeft: \"10px\", fontSize: \"12px\", verticalAlign: \"top\", height: \"140px\" }}>\r\n                            <lbl style={{ display: \"inline-block\" }}> <b>Tên KH nhận</b></lbl>: <span>{v.RecipientCompany}</span><br />\r\n                            <lbl style={{ display: \"inline-block\" }}> <b> {v.RecipientType !== \"\" ? ('Loại khách nhận : ') : (<></>)}</b></lbl><span>{v.RecipientType !== \"\" ? (v.RecipientType) : (<></>)}</span><br />\r\n                            <lbl style={{ display: \"inline-block\" }}><b>Người nhận</b></lbl>: <span>{v.RecipientName}</span><br />\r\n                            <lbl style={{ display: \"inline-block\" }}><b>Điện thoại</b></lbl>: <span>{v.RecipientPhonePrint}</span><br />\r\n                            <lbl style={{ display: \"inline-block\" }}><b>Địa chỉ </b></lbl>: <span style={{ wordBreak: \"break-all\" }}>{v.NewStreet}</span><br />\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                      <table style={{ width: \"100%\", borderBottom: \"2px solid #000\", height: \"85px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                        <tr>\r\n\r\n                          <td style={{ borderRight: \"2px solid #000\", width: \"2%\", paddingLeft: \"5px\", textAlign: \"center\", height: \"85px\" }}>\r\n                            <div style={{ padding: \"0px 0px 9px 0px\", fontWeight: \"bold\", fontSize: \"20px\", borderBottom: '2px solid black' }}>{v.POCodeFrom}</div>\r\n                            <div style={{ padding: \"2px 5x\", fontWeight: \"bold\", fontSize: \"20px\", paddingTop: '7px' }}>{v.POCodeTo}</div>\r\n                          </td>\r\n                          <td colspan=\"2\" style={{ width: \"100%\", height: \"70px\", textAlign: 'center' }}>\r\n\r\n                            <div class=\"doCode\" style={{ display: \"block\", textAlign: \"center\", top: \"-17px\", height: \"80px\" }}>{v.PartnerCode !== \"\" ? <Barcode value={v.PartnerCode} height=\"33\" /> : null}</div>\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                      <table style={{ width: \"100%\", borderBottom: \"2px solid #000\", fontSize: \"13px\", height: \"130px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                        <tr>\r\n\r\n                          <td style={{ borderRight: \"2px solid #000\", width: \"50%\", height: \"130px\", paddingLeft: \"10px\", fontSize: \"12px\", verticalAlign: \"top\" }}>\r\n\r\n                            <lbl style={{ display: \"inline-block\" }}> Số kiện</lbl>: <span style={{ fontsize: \"16px\" }}><b>{1} / {v.Number}</b></span><br />\r\n                            <lbl style={{ display: \"inline-block\" }}>Khối lượng</lbl>: <span style={{ fontsize: \"16px\" }}><b>{FormatNumber(v.Weight)} (gram)</b></span><br />\r\n                            <lbl style={{ display: \"inline-block\" }}>Loại dịch vụ</lbl>: <span style={{ fontsize: \"16px\" }}><b>{v.ServiceName}</b></span><br />\r\n                            <lbl style={{ display: \"inline-block\" }}>Dịch vụ cộng thêm</lbl>: <span style={{ fontsize: \"16px\" }}><b>{v.ServiceGTGTName}</b></span><br />\r\n                            <lbl style={{ display: \"inline-block\" }}>Chỉ dẫn hàng hóa</lbl>: <span><b>{v.Description}</b></span><br />\r\n                          </td>\r\n                          <td style={{ verticalAlign: \"top\", width: \"50%\", height: \"130px\" }}>\r\n                            <div style={{ verticalAlign: \"top\", width: \"100%\", borderBottom: \"2px solid #000\", paddingTop: \"10px\", paddingBottom: \"10px\" }}> <lbl style={{ display: \"inline-block\" }}> <b>Thu COD</b></lbl>: <span style={{ fontsize: \"16px\" }}><b>{FormatNumber(v.COD)} đ</b></span><br /> </div>\r\n                            <div style={{ verticalAlign: \"top\", width: \"100%\", borderBottom: \"2px solid #000\", paddingTop: \"10px\", paddingBottom: \"10px\" }}> <lbl style={{ display: \"inline-block\" }}> <b>Thu NNTT</b></lbl>: <span style={{ fontsize: \"16px\" }}><b>{FormatNumber(v.AmountPrint)} đ</b></span><br /> </div>\r\n                            <div style={{ verticalAlign: \"top\", width: \"100%\", paddingTop: \"10px\", paddingBottom: \"5px\" }}> <lbl style={{ display: \"inline-block\" }}> <b>Tổng thu</b></lbl>: <span style={{ fontsize: \"16px\" }}><b>{FormatNumber(v.TotalMoneyPrint)} đ</b></span><br /> </div>\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                      <table style={{ width: \"100%\", height: \"130px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                        <tr>\r\n                          <td style={{ width: \"50%\", paddingLeft: \"5px\", height: \"130px\", verticalAlign: \"top\", borderRight: \"2px solid #000\" }}>\r\n                            <lbl style={{ display: \"inline-block\", fontSize: \"13px\", paddingBottom: \"10px\", paddingLeft: \"40px\" }}><b>Sản phẩm và số lượng</b></lbl><br />\r\n                            {(v.ProductName != null) ? (\r\n                              <lbl style={{ display: \"inline-block\", marginTop: \"3px\", paddingLeft: \"5px\" }}><span>{v.ProductName}</span>\r\n                                <span>{v.ProductQuanlity}</span><br /></lbl>\r\n                            )\r\n                              : (\r\n                                <lbl style={{ display: \"inline-block\", marginTop: \"3px\", paddingLeft: \"5px\" }}><span>{v.ProductName}</span>\r\n                                  <span>{v.ProductQuanlity}</span><br /></lbl>\r\n                              )}\r\n                          </td>\r\n                          <td style={{ verticalAlign: \"top\", width: \"50%\", height: \"130px\", paddingLeft: \"5px\", textAlign: \"center\" }}>\r\n                            <lbl style={{ display: \"inline-block\", fontSize: \"13px\" }}><b>Chữ ký người nhận</b></lbl><br />\r\n                            <lbl style={{ display: \"inline-block\", fontSize: \"11px\" }}></lbl><span style={{ fontSize: \"11px\" }}>(Xác nhận hàng nguyên vẹn,không móp méo, bể/vỡ)</span><br />\r\n                            <lbl style={{ display: \"inline-block\", fontSize: \"13px\", marginTop: \"70px\" }}></lbl><span style={{ fontSize: \"13px\" }}> Đã nhận đủ tổng <b><span style={{ fontSize: \"14px\" }}>{v.Number}</span></b> kiện</span><br />\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })\r\n        );\r\n      }\r\n      //#endregion\r\n\r\n\r\n      //#region in kiện a6\r\n      else\r\n        if (Keys === 5) {\r\n          const params = {\r\n            Json: JSON.stringify(DataPrint),\r\n            func: \"CPN_spLading_List_Detail\"\r\n          }\r\n          debugger\r\n          const result = await mainAction.API_spCallServer(params, dispatch);\r\n          debugger\r\n          await setHtmlPrint(\r\n            DataPrint.map((v, index) => {\r\n              let TotalNumber = result.filter(e => e.Code === v.Code);\r\n              return (\r\n                <div key={\"L\" + index}>\r\n                  {pageprint.map((detail, ideles) => {\r\n                    return (\r\n                      TotalNumber.map((v3, idele3) => {//đặt biến trùng nhau nhiều\r\n                        NumberPack++;\r\n                        if (NumberPack === 4)\r\n                          NumberPack = 1;\r\n                        debugger\r\n                        return (\r\n                          <div class=\"bill\" style={NumberPack === 3 ? { width: \"470px\", height: \"208px\", border: \"2px solid #000\", marginBottom: \"0px\", marginTop: \"35px\", pageBreakAfter: \"always\" } : (NumberPack === 1 ? { width: \"470px\", height: \"208px\", border: \"2px solid #000\", marginTop: \"0px\" } : { width: \"470px\", height: \"208px\", border: \"2px solid #000\", marginTop: \"40px\" })}>\r\n                            <table style={{ width: \"100%\", height: \"40px\", borderBottom: \"2px solid #000\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                              <tr>\r\n\r\n                                <td style={{ width: \"50%\", paddingLeft: \"5px\", textAlign: \"center\", borderRight: \"2px solid #000\" }}>\r\n                                  <img src=\"https://customer.netco.com.vn/assets/img/logonetco.jpg\" style={{ height: \"30px\" }} />\r\n                                </td>\r\n                                <td style={{ width: \"50%\", paddingLeft: \"5px\" }}>\r\n\r\n                                  <div style={{ padding: \"2px 20px\", fontWeight: \"bold\", fontSize: \"15px\", borderBottom: \"1px solid #000\", marginTop: \"-8px\" }}> MÃ KIỆN: <span style={{ fontSize: \"16px\" }}><b>{idele3 + 1}/ {v3.Number}</b></span></div>\r\n                                  <div style={{ padding: \"2px 20px\", fontWeight: \"bold\", fontSize: \"11px\" }}>Ngày tạo đơn : {FormatDateJson(v3.CreateDate, 1)}</div>\r\n                                </td>\r\n                              </tr>\r\n                            </table>\r\n\r\n                            <table style={{ width: \"100%\", height: \"85px\", textAlign: \"center\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                              <tr>\r\n                                <td colspan=\"2\" style={{ borderBottom: \"2px solid black\" }}>\r\n                                  <div class=\"doCode\" style={{ padding: \"0px 8px\", fontWeight: \"bold\", fontSize: \"45px\", right: \"0\", textAlign: \"right\", marginRight: \"0\", height: \"75px\", padding: 0, position: \"relative\", display: \"inline-block\" }}><Barcode value={v3.NumberCode} height=\"35\" />\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            </table>\r\n\r\n                            <table style={{ width: \"100%\", height: \"55px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                              <tr>\r\n\r\n                                <td style={{ width: \"25%\", paddingLeft: \"5px\", textAlign: \"center\", borderBottom: \"2px solid #000\", borderRight: \"2px solid #000\" }}>\r\n                                  <div style={{ padding: \"2px 10px\", fontWeight: \"bold\", fontSize: \"14px\" }}>{v3.POCodeFrom}</div></td>\r\n                                <td style={{ width: \"25%\", paddingLeft: \"5px\", textAlign: \"center\", borderBottom: \"2px solid #000\", borderRight: \"2px solid #000\" }}>\r\n                                  <div style={{ padding: \"2px 50x\", fontWeight: \"bold\", fontSize: \"14px\" }}>{v3.POCodeTo}</div>\r\n                                </td>\r\n                                <td style={{ width: \"50%\", paddingLeft: \"5px\", borderBottom: \"2px solid #000\" }}>\r\n                                  <div style={{ padding: \"2px 20x\", fontSize: \"12px\", marginTop: \"-5px\", wordBreak: \"break-all\" }}>Địa chỉ nhận: {v3.Street}</div>\r\n                                </td>\r\n                              </tr>\r\n                            </table>\r\n\r\n                            <table style={{ width: \"100%\", height: \"28px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                              <tr >\r\n                                <td style={{ width: \"20%\", paddingLeft: \"5px\" }}>\r\n                                  <lbl style={{ display: \"inline-block\", fontSize: \"12px\" }}><b> Trọng lượng: </b></lbl>\r\n                                  <br />\r\n                                </td>\r\n                                <td style={{ width: \"30%\", paddingLeft: \"5px\", borderRight: \"2px solid #000\", fontSize: \"12px\" }}>\r\n                                  <span><b>{v3.Weight} (gram)</b></span> <br />\r\n\r\n                                </td>\r\n\r\n                                <td style={{ width: \"20%\", paddingLeft: \"5px\" }}>\r\n                                  <lbl style={{ display: \"inline-block\", fontSize: \"12px\" }}><b>Loại dịch vụ:</b></lbl>\r\n                                </td>\r\n                                <td style={{ width: \"30%\", paddingLeft: \"5px\", fontSize: \"10px\" }}>\r\n                                  <span><b>{v3.ServiceCode}</b></span><br />\r\n                                </td>\r\n                              </tr>\r\n                            </table>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    );\r\n                  })\r\n                  }\r\n                </div>\r\n              )\r\n            }));\r\n        }\r\n        //#endregion\r\n\r\n\r\n        //#region  in bill và kiện  a6\r\n        else if (Keys === 4) {\r\n\r\n          const params = {\r\n            Json: JSON.stringify(DataPrint),\r\n            func: \"CPN_spLading_List_Detail\"\r\n          }\r\n          debugger\r\n          const result = await mainAction.API_spCallServer(params, dispatch);\r\n          debugger\r\n          await setHtmlPrint(\r\n            DataPrint.map((item, index) => {\r\n              let TotalNumber = result.filter(e => e.Code === item.Code);\r\n              return (\r\n                <div key={\"L\" + index}>\r\n                  {pageprint.map((detail, ideles) => {\r\n                    NumberPack = 0;\r\n                    return (\r\n                      TotalNumber.map((v3, idele) => {\r\n                        if ((idele === 0)) {\r\n                          return (\r\n                            <div class=\"bill' + v.Code + '\" style={{ width: \"470px\", height: \"650px\", pageBreakBefore: \"always\", pageBreakAfter: \"always\", border: \"2px solid #000\" }}>\r\n                              {GetPrintMask(\"A6\", v3.PaymentType, v3.COD)}\r\n                              <table style={{ width: \"100%\", fontWeight: \"600\", borderBottom: \"2px solid #000\", textAlign: \"center\", height: \"55px\" }}>\r\n                                <tr>\r\n                                  <td style={{ width: \"50%\", verticalAlign: \"top\" }}><img src=\"https://customer.netco.com.vn/assets/img/logonetco.jpg\" style={{ height: \"46px\" }} /></td>\r\n                                  <td style={{ width: \"50%\", verticalAlign: \"top\" }}>\r\n                                    <div><p> PHIẾU GIAO HÀNG </p></div>\r\n                                    <div style={{ position: \"relative\", display: \"inline-block\", fontSize: \"13px\" }}> Ngày tạo : {FormatDateJson(v3.CreateDate, 1)}</div>\r\n                                  </td>\r\n                                </tr>\r\n                              </table>\r\n\r\n                              <table style={{ width: \"100%\", fontWeight: \"600\", borderBottom: \"2px solid #000\", textAlign: \"center\", height: \"90px\" }}>\r\n                                <tr>\r\n                                  <td><div style={{ padding: \"0px 5px\", position: \"relative\", display: \"inline-block\" }}><div class=\"code\" style={{ width: \"25%\" }} ><Barcode value={v3.Code} height=\"35\" /> </div></div></td>\r\n                                </tr>\r\n                              </table>\r\n\r\n                              <table style={{ width: \"100%\", borderBottom: \"2px solid #000\", fontSize: \"13px\", height: \"140px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                                <tr>\r\n\r\n                                  <td style={{ borderRight: \"2px solid #000\", width: \"50%\", paddingLeft: \"10px\", fontSize: \"12px\", verticalAlign: \"top\", height: \"140px\" }}>\r\n                                    <lbl style={{ display: \"inline-block\" }}> <b>Tên KH gửi</b></lbl>: <span>{v3.CustomerName}</span><br />\r\n                                    <lbl style={{ display: \"inline-block\" }}><b>Mã khách hàng</b></lbl>: <span>{v3.CustomerCode} </span><br />\r\n                                    <lbl style={{ display: \"inline-block\" }}><b>Người gửi </b></lbl>: <span>{v3.CustomerName}</span><br />\r\n                                    <lbl style={{ display: \"inline-block\" }}><b>Điện thoại </b></lbl>: <span>{v3.CustomerPhonePrint}</span><br />\r\n                                    <lbl style={{ display: \"inline-block\" }}><b>Địa chỉ</b></lbl>: <span style={{ wordbreak: \"break-all\" }}>{v3.CustomerAddressPrint}</span><br />\r\n                                  </td>\r\n                                  <td style={{ width: \"50%\", paddingLeft: \"10px\", fontSize: \"12px\", verticalAlign: \"top\", height: \"140px\" }}>\r\n                                    <lbl style={{ display: \"inline-block\" }}> <b>Tên KH nhận</b></lbl>: <span>{v3.RecipientCompany}</span><br />\r\n                                    <lbl style={{ display: \"inline-block\" }}> <b> {v3.RecipientType !== \"\" ? ('Loại khách nhận : ') : (<></>)}</b></lbl><span>{v3.RecipientType !== \"\" ? (v3.RecipientType) : (<></>)}</span><br />\r\n                                    <lbl style={{ display: \"inline-block\" }}><b>Người nhận</b></lbl>: <span>{v3.RecipientName}</span><br />\r\n                                    <lbl style={{ display: \"inline-block\" }}><b>Điện thoại</b></lbl>: <span>{v3.RecipientPhonePrint}</span><br />\r\n                                    <lbl style={{ display: \"inline-block\" }}><b>Địa chỉ </b></lbl>: <span style={{ wordBreak: \"break-all\" }}>{v3.Street}</span><br />\r\n                                  </td>\r\n                                </tr>\r\n                              </table>\r\n                              <table style={{ width: \"100%\", borderBottom: \"2px solid #000\", height: \"85px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                                <tr>\r\n\r\n                                  <td style={{ borderRight: \"2px solid #000\", width: \"2%\", paddingLeft: \"5px\", textAlign: \"center\", height: \"85px\" }}>\r\n                                    <div style={{ padding: \"0px 0px 9px 0px\", fontWeight: \"bold\", fontSize: \"20px\", borderBottom: '2px solid black' }}>{v3.POCodeFrom}</div>\r\n                                    <div style={{ padding: \"2px 5x\", fontWeight: \"bold\", fontSize: \"20px\", paddingTop: '7px' }}>{v3.POCodeTo}</div>\r\n                                  </td>\r\n                                  <td colspan=\"2\" style={{ width: \"100%\", height: \"70px\", textAlign: 'center' }}>\r\n\r\n                                    <div class=\"doCode\" style={{ display: \"block\", textAlign: \"center\", top: \"-17px\", height: \"80px\" }}>{v3.PartnerCode !== \"\" ? <Barcode value={v3.PartnerCode} height=\"33\" /> : null}</div>\r\n                                  </td>\r\n                                </tr>\r\n                              </table>\r\n                              <table style={{ width: \"100%\", borderBottom: \"2px solid #000\", fontSize: \"13px\", height: \"130px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                                <tr>\r\n\r\n                                  <td style={{ borderRight: \"2px solid #000\", width: \"50%\", height: \"130px\", paddingLeft: \"10px\", fontSize: \"12px\", verticalAlign: \"top\" }}>\r\n\r\n                                    <lbl style={{ display: \"inline-block\" }}> Số kiện</lbl>: <span style={{ fontsize: \"16px\" }}><b>{1} / {v3.Number}</b></span><br />\r\n                                    <lbl style={{ display: \"inline-block\" }}>Khối lượng</lbl>: <span style={{ fontsize: \"16px\" }}><b>{FormatNumber(v3.Weight)} (gram)</b></span><br />\r\n                                    <lbl style={{ display: \"inline-block\" }}>Loại dịch vụ</lbl>: <span style={{ fontsize: \"16px\" }}><b>{v3.ServiceName}</b></span><br />\r\n                                    <lbl style={{ display: \"inline-block\" }}>Dịch vụ cộng thêm</lbl>: <span style={{ fontsize: \"16px\" }}><b>{v3.ServiceGTGTName}</b></span><br />\r\n                                    <lbl style={{ display: \"inline-block\" }}>Chỉ dẫn hàng hóa</lbl>: <span><b>{v3.Description}</b></span><br />\r\n                                  </td>\r\n                                  <td style={{ verticalAlign: \"top\", width: \"50%\", height: \"130px\" }}>\r\n                                    <div style={{ verticalAlign: \"top\", width: \"100%\", borderBottom: \"2px solid #000\", paddingTop: \"10px\", paddingBottom: \"10px\" }}> <lbl style={{ display: \"inline-block\" }}> <b>Thu COD</b></lbl>: <span style={{ fontsize: \"16px\" }}><b>{FormatNumber(v3.COD)} đ</b></span><br /> </div>\r\n                                    <div style={{ verticalAlign: \"top\", width: \"100%\", borderBottom: \"2px solid #000\", paddingTop: \"10px\", paddingBottom: \"10px\" }}> <lbl style={{ display: \"inline-block\" }}> <b>Thu NNTT</b></lbl>: <span style={{ fontsize: \"16px\" }}><b>{FormatNumber(v3.AmountPrint)} đ</b></span><br /> </div>\r\n                                    <div style={{ verticalAlign: \"top\", width: \"100%\", paddingTop: \"10px\", paddingBottom: \"5px\" }}> <lbl style={{ display: \"inline-block\" }}> <b>Tổng thu</b></lbl>: <span style={{ fontsize: \"16px\" }}><b>{FormatNumber(v3.TotalMoneyPrint)} đ</b></span><br /> </div>\r\n                                  </td>\r\n                                </tr>\r\n                              </table>\r\n                              <table style={{ width: \"100%\", height: \"130px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                                <tr>\r\n                                  <td style={{ width: \"50%\", paddingLeft: \"5px\", height: \"130px\", verticalAlign: \"top\", borderRight: \"2px solid #000\" }}>\r\n                                    <lbl style={{ display: \"inline-block\", fontSize: \"13px\", paddingBottom: \"10px\", paddingLeft: \"40px\" }}><b>Sản phẩm và số lượng</b></lbl><br />\r\n                                    {(v3.ProductName != null) ? (\r\n                                      <lbl style={{ display: \"inline-block\", marginTop: \"3px\", paddingLeft: \"5px\" }}><span>{v3.ProductName}</span>\r\n                                        <span>{v3.ProductQuanlity}</span><br /></lbl>\r\n                                    )\r\n                                      : (\r\n                                        <lbl style={{ display: \"inline-block\", marginTop: \"3px\", paddingLeft: \"5px\" }}><span>{v3.ProductName}</span>\r\n                                          <span>{v3.ProductQuanlity}</span><br /></lbl>\r\n                                      )}\r\n                                  </td>\r\n                                  <td style={{ verticalAlign: \"top\", width: \"50%\", height: \"130px\", paddingLeft: \"5px\", textAlign: \"center\" }}>\r\n                                    <lbl style={{ display: \"inline-block\", fontSize: \"13px\" }}><b>Chữ ký người nhận</b></lbl><br />\r\n                                    <lbl style={{ display: \"inline-block\", fontSize: \"11px\" }}></lbl><span style={{ fontSize: \"11px\" }}>(Xác nhận hàng nguyên vẹn,không móp méo, bể/vỡ)</span><br />\r\n                                    <lbl style={{ display: \"inline-block\", fontSize: \"13px\", marginTop: \"70px\" }}></lbl><span style={{ fontSize: \"13px\" }}> Đã nhận đủ tổng <b><span style={{ fontSize: \"14px\" }}>{v3.Number}</span></b> kiện</span><br />\r\n                                  </td>\r\n                                </tr>\r\n                              </table>\r\n                            </div>\r\n                          );\r\n                        }\r\n                        else {\r\n                          NumberPack++;\r\n                          if (NumberPack === 4)\r\n                            NumberPack = 1;\r\n                          debugger\r\n                          return (\r\n                            <div class=\"bill\" style={NumberPack === 3 ? { width: \"470px\", height: \"208px\", border: \"2px solid #000\", marginBottom: \"0px\", marginTop: \"35px\", pageBreakAfter: \"always\" } : (NumberPack === 1 ? { width: \"470px\", height: \"208px\", border: \"2px solid #000\", marginTop: \"0px\" } : { width: \"470px\", height: \"208px\", border: \"2px solid #000\", marginTop: \"40px\" })}>\r\n                              <table style={{ width: \"100%\", height: \"40px\", borderBottom: \"2px solid #000\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                                <tr>\r\n\r\n                                  <td style={{ width: \"50%\", paddingLeft: \"5px\", textAlign: \"center\", borderRight: \"2px solid #000\" }}>\r\n                                    <img src=\"https://customer.netco.com.vn/assets/img/logonetco.jpg\" style={{ height: \"30px\" }} />\r\n                                  </td>\r\n                                  <td style={{ width: \"50%\", paddingLeft: \"5px\" }}>\r\n\r\n                                    <div style={{ padding: \"2px 20px\", fontWeight: \"bold\", fontSize: \"15px\", borderBottom: \"1px solid #000\", marginTop: \"-8px\" }}> MÃ KIỆN: <span style={{ fontSize: \"16px\" }}><b>{idele + 1}/ {v3.Number}</b></span></div>\r\n                                    <div style={{ padding: \"2px 20px\", fontWeight: \"bold\", fontSize: \"11px\" }}>Ngày tạo đơn : {FormatDateJson(v3.CreateDate, 1)}</div>\r\n                                  </td>\r\n                                </tr>\r\n                              </table>\r\n\r\n                              <table style={{ width: \"100%\", height: \"85px\", textAlign: \"center\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                                <tr>\r\n                                  <td colspan=\"2\" style={{ borderBottom: \"2px solid black\" }}>\r\n                                    <div class=\"doCode\" style={{ padding: \"0px 8px\", fontWeight: \"bold\", fontSize: \"45px\", right: \"0\", textAlign: \"right\", marginRight: \"0\", height: \"75px\", padding: 0, position: \"relative\", display: \"inline-block\" }}><Barcode value={v3.NumberCode} height=\"35\" />\r\n                                    </div>\r\n                                  </td>\r\n                                </tr>\r\n                              </table>\r\n\r\n                              <table style={{ width: \"100%\", height: \"55px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                                <tr>\r\n\r\n                                  <td style={{ width: \"25%\", paddingLeft: \"5px\", textAlign: \"center\", borderBottom: \"2px solid #000\", borderRight: \"2px solid #000\" }}>\r\n                                    <div style={{ padding: \"2px 10px\", fontWeight: \"bold\", fontSize: \"14px\" }}>{v3.POCodeFrom}</div></td>\r\n                                  <td style={{ width: \"25%\", paddingLeft: \"5px\", textAlign: \"center\", borderBottom: \"2px solid #000\", borderRight: \"2px solid #000\" }}>\r\n                                    <div style={{ padding: \"2px 50x\", fontWeight: \"bold\", fontSize: \"14px\" }}>{v3.POCodeTo}</div>\r\n                                  </td>\r\n                                  <td style={{ width: \"50%\", paddingLeft: \"5px\", borderBottom: \"2px solid #000\" }}>\r\n                                    <div style={{ padding: \"2px 20x\", fontSize: \"12px\", marginTop: \"-5px\", wordBreak: \"break-all\" }}>Địa chỉ nhận: {v3.Street}</div>\r\n                                  </td>\r\n                                </tr>\r\n                              </table>\r\n\r\n                              <table style={{ width: \"100%\", height: \"28px\" }} cellspacing=\"0\" cellpadding=\"5\">\r\n                                <tr >\r\n                                  <td style={{ width: \"20%\", paddingLeft: \"5px\" }}>\r\n                                    <lbl style={{ display: \"inline-block\", fontSize: \"12px\" }}><b> Trọng lượng: </b></lbl>\r\n                                    <br />\r\n                                  </td>\r\n                                  <td style={{ width: \"30%\", paddingLeft: \"5px\", borderRight: \"2px solid #000\", fontSize: \"12px\" }}>\r\n                                    <span><b>{v3.Weight} (gram)</b></span> <br />\r\n\r\n                                  </td>\r\n\r\n                                  <td style={{ width: \"20%\", paddingLeft: \"5px\" }}>\r\n                                    <lbl style={{ display: \"inline-block\", fontSize: \"12px\" }}><b>Loại dịch vụ:</b></lbl>\r\n                                  </td>\r\n                                  <td style={{ width: \"30%\", paddingLeft: \"5px\", fontSize: \"10px\" }}>\r\n                                    <span><b>{v3.ServiceCode}</b></span><br />\r\n                                  </td>\r\n                                </tr>\r\n                              </table>\r\n                            </div>\r\n                          );\r\n                        }\r\n                      })\r\n                    );\r\n                  })\r\n                  }\r\n                </div>\r\n              )\r\n            }));\r\n        }\r\n    //#endregion\r\n\r\n    //#endregion SET HTML PRINT\r\n\r\n    //#region Khởi tạo form in\r\n    let _timeout = 1000;\r\n    if (DataPrint.length > 100 && DataPrint.length < 200) _timeout = 2000;\r\n    else if (DataPrint.length > 200) _timeout = 3000;\r\n    let html = $(\"#barcodeTarget\").html();\r\n    html += `<script type=\"text/javascript\">window.focus();setTimeout(function(){window.print();window.close();},${_timeout});</script>`;\r\n    var myWindow = window.open(\"\", \"_blank\");\r\n    myWindow.document.write(\r\n      '<html><head></head><body style=\"margin:0\">' + html + \"</body></html>\"\r\n    );\r\n    //#endregion\r\n\r\n  };\r\n\r\n  const ChangeSheetPrint = (event) => {\r\n    const sheetNumber = event.target.value;\r\n    let db = [];\r\n    setpageprint([]);\r\n    if (sheetNumber !== \"\" && sheetNumber !== \"0\") {\r\n      //setshowpage(sheetNumber);\r\n      setsheetprint(sheetNumber);\r\n      for (var i = 0; i < parseInt(sheetNumber); i++) {\r\n        db.push(i);\r\n      }\r\n      setpageprint(db);\r\n    }\r\n  };\r\n\r\n  const handleChange = (row) => {\r\n    dataLading.find((p) => p.Id == row.original.Id).Checked =\r\n      row.original.Checked == false ? true : false;\r\n    setState({ list: dataLading });\r\n    setDataPrint(dataLading.filter((p) => p.Checked === true));\r\n  };\r\n\r\n  const handleCheckAll = (e) => {\r\n    let allChecked = IsChecked;\r\n    setIsChecked(!IsChecked);\r\n    dataLading.forEach((item) => {\r\n      item.Checked = e.target.checked;\r\n    });\r\n    setState({ list: dataLading });\r\n    setDataPrint(dataLading.filter((p) => p.Checked === true));\r\n  };\r\n\r\n  //#endregion In vận đơn\r\n\r\n  //#region Danh sách vận đơn\r\n  const GoToEdit = async (item) => {\r\n    let LadingDetail = item._original;\r\n    localStorage.setItem(\"LadingEdit\", JSON.stringify(LadingDetail));\r\n    history.push(\"/tao-nhanh-van-don\");\r\n  };\r\n  const columns = [\r\n    {\r\n      Cell: (row) => (\r\n        <div className=\"form-check\" style={{ padding: \"0 15px\" }}>\r\n          <label className=\"form-check-label\" style={{ position: \"unset\" }}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id={row.original.Id}\r\n              value={row.original.Id}\r\n              checked={row.original.Checked}\r\n              onChange={(e) => handleChange(row)}\r\n            />\r\n            <span className=\"form-check-sign\" htmlFor={row.original.Id}>\r\n              <span className=\"check\"></span>\r\n            </span>\r\n          </label>\r\n        </div>\r\n      ),\r\n      maxWidth: 40,\r\n      textAlign: \"center\",\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      Cell: ({ row }) => (\r\n        <span>\r\n          <i className=\"fa fa-eye green\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#modalDetail\"\r\n            onClick={() => GoToDetail(row)}\r\n            title=\"Chi tiết\"></i>{\" \"}\r\n          {row._original.Status === 9 ? (\r\n            <>\r\n              <i className=\"fa fa-edit orange button\"\r\n                onClick={() => GoToEdit(row)}\r\n                title=\"Sửa\"\r\n              ></i>\r\n              <i\r\n                className=\"fa fa-trash red button\"\r\n                onClick={() =>\r\n                  window.confirm(\"Xác nhận xóa vận đơn \" + row.Code + \"?\") &&\r\n                  CPN_spLading_Delete_All(row)\r\n                }\r\n                title=\"Xóa\"\r\n              ></i>\r\n            </>\r\n          ) : (\r\n            <i className=\"material-icons fontsizeicon14 orange\"\r\n              onClick={() => GoToComplain(row)}\r\n              title=\"Khiếu nại\"\r\n            >description</i>\r\n          )}\r\n        </span>\r\n      ),\r\n      minWidth: 80,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Hình báo phát\",\r\n      accessor: \"ImageDeliveryList\",\r\n      minWidth: 120,\r\n      Cell: (item) => (\r\n        <div>\r\n          {item.value !== undefined && item.value !== \"\" && item.value !== null\r\n            ? JSON.parse(item.value).map((img, index) => {\r\n              return (\r\n                <a\r\n                  className=\"cursor\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#modalImg\"\r\n                  onClick={(e) => { setModalImg(img.splitdata) }}\r\n                  title=\"Click để xem hình lớn\"\r\n                >\r\n                  <img src={img.splitdata} width=\"50\" />\r\n                </a>\r\n              );\r\n            })\r\n            : null}{\" \"}\r\n        </div>\r\n      ),\r\n      filterable: false,\r\n    },\r\n    {\r\n      Header: \"Mã vận đơn\",\r\n      accessor: \"Code\",\r\n      minWidth: 160,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Mã đối tác\",\r\n      accessor: \"PartnerCode\",\r\n      minWidth: 150,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Thời gian gửi\",\r\n      accessor: \"CreateDate\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Ước tính nhận\",\r\n      accessor: \"DealineTime\",\r\n      minWidth: 140,\r\n      Cell: (item) => <span>{FormatDateJson(item.value, 1)}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tình trạng\",\r\n      accessor: \"StatusName\",\r\n      width: 190,\r\n      Cell: (item) => <span style={{ background: '#65B168', color: 'white', padding: '3px 7px', borderRadius: '4px' }}>{item.value}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Người nhận\",\r\n      accessor: \"RecipientName\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tỉnh đi\",\r\n      accessor: \"CitySendCode\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tỉnh đến\",\r\n      accessor: \"CityRecipientCode\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Dịch vụ\",\r\n      accessor: \"ServiceName\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Trọng lượng\",\r\n      accessor: \"Weight\",\r\n      Cell: (item) => <span>{FormatNumber(item.value)} (gram)</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Số kiện\",\r\n      accessor: \"Number\",\r\n      Cell: (item) => <span>{FormatNumber(item.value)}</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Số khối\",\r\n      accessor: \"Mass\",\r\n      Cell: (item) => <span>{item.value} (cbm)</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Thu hộ\",\r\n      accessor: \"COD\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Khai giá\",\r\n      accessor: \"Insured\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"Amount\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Hình thức thanh toán\",\r\n      accessor: \"PaymentString\",\r\n      minWidth: 160,\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Thông tin nhận\",\r\n      minWidth: 140,\r\n      accessor: \"Recipient_reality\",\r\n      Filter: ({ filter, onChange }) => (\r\n        <input\r\n          onChange={(event) => onChange(event.target.value)}\r\n          value={filter ? filter.value : \"\"}\r\n          placeholder=\"Tìm kiếm ...\"\r\n          className=\"form-control\"\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  //#endregion Danh sách vận đơn\r\n\r\n  //#region Hình báo phát\r\n\r\n  const ViewImg = (\r\n    <div\r\n      class=\"modal fade\"\r\n      id=\"modalImg\"\r\n      tabindex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"modalImg\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Hình ảnh báo phát</h5>\r\n            <button\r\n              type=\"button\"\r\n              class=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body text-center\">\r\n            <img src={ModalImg} width=\"100%\" />\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-default btn-sm\"\r\n              data-dismiss=\"modal\"\r\n            >\r\n              <i className=\"fa fa-close\"></i> Đóng\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  //#endregion Hình báo phát\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className='row cardcus '>\r\n          <div className=\"row margin-left-0\">\r\n            <div className=\"col-md-12 HomeTitle\">Danh sách vận đơn</div>\r\n          </div>\r\n          <div className=\"row margin-left-0 width100 new margin-top-10\">\r\n            <div className=\"col-md-4 col-sm-4\">\r\n              <div className=\"form-group\">\r\n                <label>Từ ngày </label>\r\n                <DateTimePicker\r\n                  className=\"form-control listsearch\"\r\n                  onChange={(date) => FromDate(date)}\r\n                  value={Fromdate}\r\n                  format=\"dd/MM/yyyy\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 col-sm-4\">\r\n              <div className=\"form-group\">\r\n                <label>Đến ngày </label>\r\n                <DateTimePicker\r\n                  className=\"form-control listsearch\"\r\n                  onChange={(date) => ToDate(date)}\r\n                  value={Todate}\r\n                  format=\"dd/MM/yyyy\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 col-sm-4\" style={{ marginTop: \"8px\" }}>\r\n              <div className=\"\">\r\n                <label> Tìm theo mã vận đơn</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control listsearch\"\r\n                  ref={LadingcodeRef}\r\n                  {...bindLadingcode}\r\n                  value={Ladingcode}\r\n                  placeholder=\"Nhập mã vận đơn ...\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 col-sm-12 text-center margin-top-10\">\r\n\r\n              <button\r\n                disabled={Disable}\r\n                onClick={() => {\r\n                  APIC_spLadingGetMany(Status);\r\n                }}\r\n                type=\"button\"\r\n                className=\"btn text-transform btn-save btn-sm\"\r\n              >\r\n                <i className=\"material-icons\">search</i>\r\n                Tìm kiếm\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={ExportAllToExcel}\r\n                className=\"btn text-transform btn-refesh btn-sm\"\r\n                style={{ margin: \"0 5px\" }}\r\n              >\r\n                <img src=\"../assets/img/iconexcel.png\" className='iconex' />\r\n                Xuất excel tất cả vận đơn\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row cardcus Ladingstatus margin-top-20\">\r\n          <div className=\"col-md-8 row text-center margin-left-0\">\r\n            <span style={{ color: '3A3A44', fontSize: '14px', fontWeight: '500', marginTop: '5px' }}>Trạng thái đơn hàng</span>\r\n            <select\r\n              className=\"form-control col-md-4 col-sm-4  listsearch col-xs-12 margin-left-15 margin-left\"\r\n              onChange={(e) => {\r\n                APIC_spLadingGetMany(parseInt(e.target.value));\r\n              }}\r\n            >\r\n              <option value=\"9\">Mới tạo ({Status9})</option>\r\n              <option value=\"1\">Đang lấy hàng ({Status1})</option>\r\n              <option value=\"2\">Đã lấy hàng ({Status2})</option>\r\n              <option value=\"3\">Đang trung chuyển ({Status3})</option>\r\n              <option value=\"4\">Nhận tại CN phát ({Status4})</option>\r\n              <option value=\"5\">Đang phát ({Status5})</option>\r\n              <option value=\"50\">Đang phát lại ({Status50})</option>\r\n              <option value=\"6\">Phát thành công ({Status6})</option>\r\n              <option value=\"7\">Khai thác lại ({Status7})</option>\r\n              <option value=\"8\">Hoàn gốc ({Status8})</option>\r\n              <option value=\"0\">Tất cả ({Status1 + Status2 + Status3 + Status4 + Status5 + Status6 + Status7 + Status8 + Status9 + Status50})</option>\r\n            </select>\r\n            <i class=\"fa fa-caret-down hide-sm\" aria-hidden=\"true\" style={{ marginTop: '13px', marginLeft: '-25px' }}></i>\r\n            {/*       <ul className=\"nav nav-pills nav-pills-warning hide-sm mt10\" style={{ display: \"inline-flex\" }}>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link active show\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link1\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(9);\r\n                  }}\r\n                >\r\n                  Mới tạo&nbsp; ({Status9})\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link2\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(1);\r\n                  }}\r\n                >\r\n                  Đang lấy hàng&nbsp; ({Status1})\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(2);\r\n                  }}\r\n                >\r\n                  Đã lấy hàng&nbsp; ({Status2})\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(3);\r\n                  }}\r\n                >\r\n                  Đang trung chuyển&nbsp; ({Status3})\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(4);\r\n                  }}\r\n                >\r\n                  Nhận tại CN phát&nbsp; ({Status4})\r\n                </a>\r\n              </li>\r\n\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(5);\r\n                  }}\r\n                >\r\n                  Đang phát&nbsp; ({Status5})\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(50);\r\n                  }}\r\n                >\r\n                  Đang phát lại&nbsp; ({Status50})\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link nav-linkpadding \"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(6);\r\n                  }}\r\n                >\r\n                  Phát thành công&nbsp; ({Status6})\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(7);\r\n                  }}\r\n                >\r\n                  Khai thác lại&nbsp; ({Status7})\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item whiteSpace\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  onClick={() => {\r\n                    APIC_spLadingGetMany(8);\r\n                  }}\r\n                >\r\n                  Hoàn gốc&nbsp; ({Status8})\r\n                </a>\r\n              </li>\r\n            </ul> */}\r\n          </div>\r\n          <div className='col-md-12 margin-top-10 border-bottom-dash'>\r\n          </div>\r\n          <div className=\"col-md-12\" style={{ color: '3A3A44', fontSize: '20px', fontWeight: '500' }}>\r\n            {StatusName}\r\n          </div>\r\n          <div className=\"row width100 margin-left-0\">\r\n            <div className=\"col-md-3 margin-top-10\">\r\n              <div className=\"pull-left\">\r\n                <div className=\"form-check top0\">\r\n                  <label className=\"form-check-label\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"checkAll\"\r\n                      checked={IsChecked}\r\n                      onChange={handleCheckAll}\r\n                    />\r\n                    <span className=\"form-check-sign\">\r\n                      <span className=\"check\"> </span>\r\n                    </span>\r\n                    Chọn tất cả\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-9 margin-bottom-10\">\r\n              <div className=\"pull-right\">\r\n                <div className=\"input-group text-right\">\r\n                  <div\r\n                    class=\"input-group-prepend\"\r\n                    style={{ marginRight: \"5px\", marginTop: \"8px\" }}\r\n                  >\r\n                    Số liên cần in{\" \"}\r\n                  </div>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={sheetprint}\r\n                    ref={sheetprintRef}\r\n                    {...bindsheetprint}\r\n                    onChange={(event) => ChangeSheetPrint(event)}\r\n                    min=\"1\"\r\n                    max=\"10\"\r\n                    className=\"form-control maxwidth100\"\r\n                    placeholder=\"Số liên in\"\r\n                    style={{ height: \"35px\", margin: \"6px 5px\", borderRadius: '3px' }}\r\n                  />\r\n                  <div class=\"Print dropdown\" >\r\n                    <button class=\"btn btn-secondary dropdown-toggle\" style={{ height: '36px' }} type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                      Chọn mẫu in\r\n                    </button>\r\n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                      <a class=\"dropdown-item\"\r\n                        onClick={(e) => {\r\n                          APIC_spLadingGetDataPrint(1)\r\n                        }}>In bill (A5 + A4)</a>\r\n                      <a class=\"dropdown-item\"\r\n                        onClick={(e) => {\r\n                          APIC_spLadingGetDataPrint(0)\r\n                        }}>In bill + kiện (A5 + A4)</a>\r\n                      <a class=\"dropdown-item\"\r\n                        onClick={(e) => {\r\n                          APIC_spLadingGetDataPrint(2)\r\n                        }}>In kiện (A5 + A4)</a>\r\n\r\n                      <a class=\"dropdown-item\"\r\n                        onClick={(e) => {\r\n                          APIC_spLadingGetDataPrint(3)\r\n                        }}>In bill A6</a>\r\n                      <a class=\"dropdown-item\"\r\n                        onClick={(e) => {\r\n                          APIC_spLadingGetDataPrint(4)\r\n                        }}>In bill + kiện A6</a>\r\n                      <a class=\"dropdown-item\"\r\n                        onClick={(e) => {\r\n                          APIC_spLadingGetDataPrint(5)\r\n                        }}>In kiện A6</a>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group-append\">\r\n\r\n                    {/*    <select\r\n                      className=\"form-control listsearch col-xs-12 margin-left-15 margin-left\"\r\n                      onChange={(e) => {\r\n                        APIC_spLadingGetDataPrint(parseInt(e.target.value));\r\n                      }}\r\n                    >\r\n                      <option value=\"-1\">Vui lòng chọn form in</option>\r\n\r\n                      <option value=\"0\">In bill + kiện (A5 + A4) </option>\r\n                      <option value=\"1\">In bill (A5 + A4)</option>\r\n                      <option value=\"2\">In kiện (A5 + A4)</option>\r\n                      <option value=\"0\">In bill + kiện A6</option>\r\n                      <option value=\"1\">In bill A6</option>\r\n                      <option value=\"2\">In kiện A6</option>\r\n                      <i class=\"fa fa-caret-down hide-sm\" aria-hidden=\"true\" style={{ marginTop: '13px', marginLeft: '-25px' }}></i>\r\n                    </select> */}\r\n\r\n\r\n\r\n                    {/*  <button\r\n                      onClick={() => {\r\n                        APIC_spLadingGetDataPrint(0);\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn btn-sm btn-save text-transform listsearch col-xs-12\"\r\n                      style={{ margin: '0 5px' }}\r\n                    >\r\n                      <i className=\"material-icons\">print</i>\r\n                      &nbsp; In bill + kiện\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        APIC_spLadingGetDataPrint(1);\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn btn-sm btn-danger text-transform listsearch col-xs-12\"\r\n                      style={{ margin: '0 5px', fontSize: '14px' }}\r\n                    >\r\n                      <i className=\"material-icons\">print</i>\r\n                      &nbsp; In bill\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        APIC_spLadingGetDataPrint(2);\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn btn-sm btn-info text-transform listsearch col-xs-12\"\r\n                      style={{ margin: '0 5px', fontSize: '14px' }}\r\n                    >\r\n                      <i className=\"material-icons\">print</i>\r\n                      &nbsp; In kiện\r\n                    </button> */}\r\n\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={ExportToExcel}\r\n                    className=\"btn btn-sm btn-refesh text-transform listsearch\"\r\n                    style={{ marginLeft: '30px' }}\r\n                  >\r\n                    <img src=\"../assets/img/iconexcel.png\" className='iconex' />\r\n                    Xuất excel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <DataTable data={dataLading} columns={columns} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <img\r\n        src=\"https://customer.netco.com.vn/assets/img/LogoNetco.jpg\"\r\n        style={{ display: \"none\" }}\r\n      />\r\n      <img\r\n        src=\"https://customer.netco.com.vn/assets/img/iso9001.jpg\"\r\n        style={{ display: \"none\" }}\r\n      />\r\n      {ViewImg}\r\n      <div\r\n        class=\"modal\"\r\n        id=\"modalDetail\"\r\n        tabindex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"modalDetail\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Chi tiết vận đơn</h5>\r\n              <button\r\n                type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body scroller\">\r\n              {/* {ViewDetail} */}\r\n              <LadingDetail LadingCode=\"\" LadingId={DetailId} />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-default btn-sm\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                <i className=\"fa fa-close\"></i> Đóng\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"barcodeTarget\" style={{ display: \"none\" }}>\r\n        {HtmlPrint}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\LookupLading.js",["1099","1100","1101"],"import {\r\n  GetCookie,\r\n} from \"../../Utils\";\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n} from \"react\";\r\nimport {  useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {LadingDetail} from \"../../Common\";\r\n\r\nexport const LookupLading = (SearchCode) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const [LadingCode,setLadingCode]= useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n\r\n    const pr = new URLSearchParams(location.search);\r\n    if(pr.get(\"code\")!==null)\r\n      setLadingCode(pr.get(\"code\"));\r\n    else \r\n     setLadingCode(\"\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 \">\r\n            <div className=\"\">\r\n              <div className=\"cardcus\">\r\n                <h4 className=\"HomeTitle margin-left-15\">\r\n               Tra cứu vận đơn\r\n                </h4>\r\n              </div>\r\n              <LadingDetail LadingCode={LadingCode} LadingId=\"0\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Hooks\\useInput.js",[],"D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\LadingExcelComponent.js",["1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport DateTimePicker from \"react-datetime-picker/dist/DateTimePicker\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  Alertwarning,\r\n  DecodeString,\r\n  FormatDate,\r\n  PaginationTable,\r\n  FormatMoney,\r\n  ExportExcel,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\nimport XLSX from \"xlsx\";\r\nimport { Lading } from \"../../Redux/Actions/Category\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { NoCustomer } from \"../../Common\";\r\n\r\nexport const LadingExcelComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const history = useHistory();\r\n\r\n  const [ShowList, setShowList] = useState(\"display-none\");\r\n  const [ShowForm, setShowForm] = useState(\"\");\r\n  const [FileUpload, setFileUpload] = useState({ file: {} });\r\n  const [UploadError, setUploadError] = useState(\"\");\r\n  const [LadingList, setLadingList] = useState([]);\r\n\r\n  const [ShowUploadFile, setShowUploadFile] = useState(\"\");\r\n  const [ShowListFile, setShowListFile] = useState(\"display-none\");\r\n\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n  }, []);\r\n\r\n  const onFileChange = (event) => {\r\n    if (event.target.files !== null) {\r\n      setFileUpload({ file: event.target.files[0] });\r\n      setShowUploadFile(\"display-none\");\r\n      setShowListFile(\"\");\r\n      document.querySelector(\".close\").click();\r\n    }\r\n  };\r\n\r\n  //#region COPY FORM UPLOAD EXCEL FROM CPN\r\n  let BreakException = {};\r\n  // On file upload (click the upload button)\r\n  const onFileUpload = async () => {\r\n    setDisable(false);\r\n    mainAction.LOADING({ IsLoading: true }, dispatch);\r\n\r\n    if (FileUpload.file.name === undefined) {\r\n      Alertwarning(\"Vui lòng chọn file\");\r\n      return;\r\n    } else {\r\n      const reader = new FileReader();\r\n      const rABS = !!reader.readAsBinaryString;\r\n      reader.onload = (e) => {\r\n        /* Parse data */\r\n        const bstr = e.target.result;\r\n        const wb = XLSX.read(bstr, {\r\n          type: rABS ? \"binary\" : \"array\",\r\n          bookVBA: true,\r\n        });\r\n        /* Get first worksheet */\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n        /* Convert array of arrays */\r\n        const data = XLSX.utils.sheet_to_json(ws);\r\n        let ListArr = [];\r\n        let ListProduct = [];\r\n        try {\r\n          let _rowIndex = 1;\r\n          data.forEach((element, index) => {\r\n            if (index === 0 && element.__EMPTY_56 !== \"Mã xã\") {\r\n              mainAction.LOADING({ IsLoading: false }, dispatch);\r\n              Alerterror(\"File mẫu excel đã được cập nhật để bổ sung thêm nhiều sản phẩm cho đơn hàng. Vui lòng tải file mẫu mới !\");\r\n              return;\r\n            }\r\n\r\n            if (index >= 2) {\r\n              if (\r\n                element.__EMPTY_2 === undefined ||\r\n                element.__EMPTY_2.trim() === \"\"\r\n              ) {\r\n                throw BreakException;\r\n              } else {\r\n                debugger\r\n                let tmp = {\r\n                  STT: _rowIndex,\r\n                  Code: \"D\", // Mã vận đơn\r\n                  PartnerCode: element.__EMPTY, // Mã đối tác\r\n                  CustomerCode: GetCookie(\"CustomerCode\"), // Mã khách hàng\r\n                  RecipientAddress: element.__EMPTY_1, // Địa chỉ\r\n                  CityRecipientNameTo: element.__EMPTY_2, // Tên tỉnh đến\r\n                  DistrictNameTo: element.__EMPTY_3, // Tên huyện đến\r\n                  WardsNameTo: element.__EMPTY_4, // Tên phường xã đến\r\n                  RecipientName: element.__EMPTY_5, // Tên người nhận\r\n                  RecipientPhone: element.__EMPTY_6, // SĐT NG nhận\r\n                  RecipientCompany: element.__EMPTY_7, // Cty Người nhận\r\n                  ServiceCode: element.__EMPTY_8, // Mã dịch vụ\r\n                  PaymentType: element.__EMPTY_9, // Hình thức thanh toán\r\n                  Weight: element.__EMPTY_8.indexOf(\"CBM\") === -1 ? element.__EMPTY_10 : 0, // Trọng lượng\r\n                  Number: element.__EMPTY_11, // Số kiện\r\n                  Mass: element.__EMPTY_8.indexOf(\"CBM\") !== -1 ? element.__EMPTY_12 : 0, // Số khối\r\n                  Length: element.__EMPTY_13, // Dài\r\n                  Width: element.__EMPTY_14, // Rộng\r\n                  Height: element.__EMPTY_15, // Cao\r\n                  THBB: element.__EMPTY_16, // THBB\r\n                  BP: element.__EMPTY_17, // BP\r\n                  Pack: element.__EMPTY_18, // Đóng gói\r\n                  HD: element.__EMPTY_19, // Số lượng hóa đơn\r\n                  COD: element.__EMPTY_20, // Tiền COD\r\n                  HHKG: element.__EMPTY_21, // Tiền HHKG\r\n                  NPDK: element.__EMPTY_22, // Số lượng nhập phát đồng kiểm\r\n                  PTT: element.__EMPTY_23, // Phát tận tay\r\n                  HQK: element.__EMPTY_24, // Hàng quá khổ\r\n                  PST: element.__EMPTY_25, // Phát siêu thị\r\n                  PDPQ: element.__EMPTY_26, // Phát đảo phú quốc\r\n                  OnSiteDeliveryPrice: element.__EMPTY_27, // phần trăm phát tận nơi\r\n                  Discount: 0, // phần trăm giảm giá\r\n                  CustomerName_Reality: element.__EMPTY_28, // Tên người gửi thực tế\r\n                  CustomerAddress_Reality: element.__EMPTY_29, // Đ/C người gửi thực tế\r\n                  CustomerPhone_Reality: element.__EMPTY_30, // SĐT người gửi thực tế\r\n                  Description: element.__EMPTY_51, // Nội dung\r\n                  Noted: element.__EMPTY_52, // Ghi chú\r\n                  TypeLading: 10,\r\n                };\r\n                ListArr.push(tmp);\r\n                if (element.__EMPTY_31 !== undefined && element.__EMPTY_32 !== undefined && element.__EMPTY_34 !== undefined && element.__EMPTY_34 !== 0) {\r\n                  ListProduct.push({\r\n                    Key: _rowIndex,\r\n                    ProductName: element.__EMPTY_31, // Tên sản phẩm 1\r\n                    ProductCode: element.__EMPTY_32, // Mã sản phẩm 1\r\n                    ProductDescription: element.__EMPTY_33, // Mổ tả sản phẩm 1\r\n                    Quanlity: element.__EMPTY_34, // Số lượng sản phẩm 1\r\n                  })\r\n                }\r\n                if (element.__EMPTY_35 !== undefined && element.__EMPTY_36 !== undefined && element.__EMPTY_38 !== undefined && element.__EMPTY_38 !== 0) {\r\n                  ListProduct.push({\r\n                    Key: _rowIndex,\r\n                    ProductName: element.__EMPTY_35, // Tên sản phẩm 1\r\n                    ProductCode: element.__EMPTY_36, // Mã sản phẩm 1\r\n                    ProductDescription: element.__EMPTY_37, // Mổ tả sản phẩm 1\r\n                    Quanlity: element.__EMPTY_38, // Số lượng sản phẩm 1\r\n                  })\r\n                }\r\n                if (element.__EMPTY_39 !== undefined && element.__EMPTY_40 !== undefined && element.__EMPTY_42 !== undefined && element.__EMPTY_42 !== 0) {\r\n                  ListProduct.push({\r\n                    Key: _rowIndex,\r\n                    ProductName: element.__EMPTY_39, // Tên sản phẩm 1\r\n                    ProductCode: element.__EMPTY_40, // Mã sản phẩm 1\r\n                    ProductDescription: element.__EMPTY_41, // Mổ tả sản phẩm 1\r\n                    Quanlity: element.__EMPTY_42, // Số lượng sản phẩm 1\r\n                  })\r\n                }\r\n                if (element.__EMPTY_43 !== undefined && element.__EMPTY_44 !== undefined && element.__EMPTY_46 !== undefined && element.__EMPTY_46 !== 0) {\r\n                  ListProduct.push({\r\n                    STT: _rowIndex,\r\n                    ProductName: element.__EMPTY_43, // Tên sản phẩm 1\r\n                    ProductCode: element.__EMPTY_44, // Mã sản phẩm 1\r\n                    ProductDescription: element.__EMPTY_45, // Mổ tả sản phẩm 1\r\n                    Quanlity: element.__EMPTY_46, // Số lượng sản phẩm 1\r\n                  })\r\n                }\r\n                if (element.__EMPTY_47 !== undefined && element.__EMPTY_48 !== undefined && element.__EMPTY_50 !== undefined && element.__EMPTY_50 !== 0) {\r\n                  ListProduct.push({\r\n                    STT: _rowIndex,\r\n                    ProductName: element.__EMPTY_47, // Tên sản phẩm 1\r\n                    ProductCode: element.__EMPTY_48, // Mã sản phẩm 1\r\n                    ProductDescription: element.__EMPTY_49, // Mổ tả sản phẩm 1\r\n                    Quanlity: element.__EMPTY_50, // Số lượng sản phẩm 1\r\n                  })\r\n                }\r\n                _rowIndex++;\r\n              }\r\n            }\r\n          });\r\n        } catch (e) { }\r\n        if (ListArr === []) {\r\n          Alertwarning(\"File không có dữ liệu !\");\r\n          return;\r\n        } else {\r\n          CPN_spLading_CreateCode(ListArr, ListProduct);\r\n        }\r\n      };\r\n      if (rABS) {\r\n        reader.readAsBinaryString(FileUpload.file);\r\n      } else {\r\n        reader.readAsArrayBuffer(FileUpload.file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const CPN_spLading_CreateCode = async (LadingList, ListProduct) => {\r\n    const params = {\r\n      json: JSON.stringify({ ListBill: LadingList, Products: ListProduct }),\r\n      func: \"CPN_spLading_CreateCode\",\r\n    };\r\n    const result = await mainAction.API_spCallServer(params, dispatch);\r\n    if (result[0].ListJsonOke === \"{}\") {\r\n      setDisable(true);\r\n    } else {\r\n      CPN_spLading_Upload_Excel(JSON.parse(result[0].ListJsonOke), JSON.parse(result[0].Products));\r\n    }\r\n\r\n    if (result[0].ListJsonNotOke != \"{}\") {\r\n      ExportExcel(JSON.parse(result[0].ListJsonNotOke), \"Vận đơn không hợp lệ\");\r\n    }\r\n  };\r\n\r\n  const [TotalBill, setTotalBill] = useState(0);\r\n  const CPN_spLading_Upload_Excel = async (LadingList, ListProduct) => {\r\n    const params = {\r\n      API_key: APIKey,\r\n      json: JSON.stringify({ ListBill: LadingList, Products: ListProduct }),\r\n      func: \"CPN_spLading_Upload_Excel\",\r\n    };\r\n    debugger\r\n    const result = await mainAction.API_spCallServer(params, dispatch);\r\n    debugger\r\n    setTotalBill(result.length);\r\n    setLadingList(JSON.parse(result[0].ListBill));\r\n    setShowList(\"\");\r\n    setShowForm(\"display-none\");\r\n    setDisable(true);\r\n    if (result.length === 0) {\r\n      Alertwarning(\"File không có dữ liệu !\");\r\n    }\r\n  };\r\n  //#endregion COPY FORM UPLOAD EXCEL FROM CPN\r\n\r\n  const onCancelSave = () => {\r\n    setLadingList([]);\r\n    setShowList(\"display-none\");\r\n    setShowUploadFile(\"\");\r\n    setShowListFile(\"display-none\");\r\n    setShowForm(\"\");\r\n    setFileUpload({ file: {} });\r\n    setUploadError(\"\");\r\n  };\r\n\r\n  //#region Lưu vân đơn\r\n  const CPN_spLading_Save = async () => {\r\n    const params = {\r\n      Json: JSON.stringify({ ListBill: LadingList, Products: [] }),\r\n      func: \"CPN_spLading_Save\",\r\n    };\r\n    try {\r\n      setDisable(true); // disable button\r\n      const result = await mainAction.API_spCallServer(params, dispatch);\r\n      setDisable(false); // disable button\r\n      Alertsuccess(result.Status);\r\n      setShowList(\"display-none\");\r\n      setShowForm(\"\");\r\n      setShowUploadFile(\"\");\r\n      setShowListFile(\"display-none\");\r\n\r\n      //Gọi send notify\r\n      const NotifiParam = {\r\n        Json: JSON.stringify({\r\n          CustomerId: parseInt(CustomerID),\r\n          FuncSend: \"LadingCreate\",\r\n          SendFrom: \"WEB CUSTOMER EXCEL\",\r\n          JsonData: [\r\n            {\r\n              TotalLading: LadingList.length,\r\n            },\r\n          ],\r\n        }),\r\n        func: \"APIC_spSendNotification\",\r\n        API_key: APIKey,\r\n      };\r\n      const resultNotify = await mainAction.API_spCallServer(\r\n        NotifiParam,\r\n        dispatch\r\n      );\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      setDisable(false); // disable button\r\n    }\r\n  };\r\n  //#endregion\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Mã vận đơn\",\r\n      accessor: \"Code\",\r\n    },\r\n    {\r\n      Header: \"Người nhận\",\r\n      accessor: \"RecipientName\",\r\n    },\r\n    {\r\n      Header: \"Tỉnh đi\",\r\n      accessor: \"CitySendCode\",\r\n    },\r\n    {\r\n      Header: \"Tỉnh đến\",\r\n      accessor: \"CityRecipientCode\",\r\n    },\r\n    {\r\n      Header: \"Dịch vụ\",\r\n      accessor: \"ServiceCode\",\r\n    },\r\n    {\r\n      Header: \"Trọng lượng\",\r\n      accessor: \"Weight\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} g</span>,\r\n    },\r\n    {\r\n      Header: \"Số kiện\",\r\n      accessor: \"Number\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)}</span>,\r\n    },\r\n    {\r\n      Header: \"Khối lượng\",\r\n      accessor: \"Mass\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} cbm</span>,\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"Amount\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Cước trắng\",\r\n      accessor: \"PriceMain\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Báo phát\",\r\n      accessor: \"DeliveryMoney\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Cước đóng gói\",\r\n      accessor: \"PackPrice\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"HHKG\",\r\n      accessor: \"Insured\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Cước HHKG\",\r\n      accessor: \"InsuredMoney\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"COD\",\r\n      accessor: \"COD\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Cước COD\",\r\n      accessor: \"CODMoney\",\r\n      Cell: (obj) => <span>{FormatMoney(obj.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Nội dung hàng hóa\",\r\n      accessor: \"Description\",\r\n    },\r\n    {\r\n      Header: \"Ghi chú\",\r\n      accessor: \"Noted\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {GetCookieGroup(\"IsChooseCustomer\") === \"True\" ? (<>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row Formlading\">\r\n            <div className=\"col-md-12 HomeTitle margin-top-20 margin-left-10\">\r\n              Upload excel đơn hàng\r\n              <button type=\"button\" class=\"btn btn-save text-transform btn-sm margin-left-10\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                <i className=\"material-icons\">cloud_upload</i>  Upload file Excel\r\n              </button>\r\n            </div>\r\n\r\n\r\n            <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog\" role=\"document\">\r\n                <div class=\"modal-content\" style={{ marginTop: '24%' }}>\r\n                  <div class=\"modal-header\" style={{ borderBottom: 'none' }}>\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\" className='bold'>\r\n                      Upload excel đơn hàng\r\n                    </h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\" style={{ marginTop: '-35px' }}>\r\n                    <div className=\"col-md-12 margin-top-15s\">\r\n                      <span className=\"margin-left-15s\">Lần đầu sử dụng dịch vụ của chúng tôi? </span>\r\n                      <Link\r\n                        className=\"Blue font-weight500 margin-left-10s\"\r\n                        download\r\n                        target=\"_blank\"\r\n                        to=\"/assets/exceltemp/MauVanDonExcel-15-06-2022.xlsx\"\r\n                      >\r\n                        Tải file mẫu\r\n                      </Link>\r\n                    </div>\r\n                    <div className='excelbor margin-top-10'>\r\n\r\n                      <img src=\"../assets/img/iconexcel.png\" className='margin-top-20' /> {/* style={{ borderRadius: '3px' }} width=\"25px\"  */}\r\n                      <div> <span style={{ color: 'blue' }}>bấm vào đây\r\n                        <input\r\n                          type=\"file\"\r\n                          className=\"form-control openfile\"\r\n                          onChange={onFileChange}\r\n                          onClick={(e) => {\r\n                            e.target.value = null;\r\n                          }}\r\n                          accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                          placeholder=\"Chọn file tải lên (Mauvandonexcel2021.xlsx)\"\r\n                        /></span> để tải lên</div>\r\n                      <div style={{ color: '#9696A0', fontSize: '12px' }}>Định dạng được hỗ trợ .xls, .xlsx. Dung lượng tối đa 5MB.</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 margin-top-20 margin-left-10\"></div>\r\n            <div className={ShowListFile + \" col-md-6\"}>\r\n              <div\r\n                className={\r\n                  FileUpload.file !== {}\r\n                    ? \"fileNameUpload row\"\r\n                    : \"fileNameUpload row display-none\"\r\n                }\r\n              >\r\n                <div className='col-md-2'>\r\n                  <img src=\"../assets/img/iconexcel.png\" width='40px' />\r\n                </div>\r\n                <div className=\"fileameUpload col-md-8\">\r\n                  <div className='Filetitle'> {FileUpload.file !== {} && FileUpload.file !== []\r\n                    ? FileUpload.file.name\r\n                    : \"\"}</div>\r\n                  <div className='Filetitle'> {\"(\" +\r\n                    (FileUpload.file.size / 1024).toFixed(2) +\r\n                    \"KB)\"}</div>\r\n                </div>\r\n                <div className='col-md-2'>\r\n                  <i\r\n                    className=\"material-icons pull-right pointer margin-top-10\"\r\n                    title=\"Xóa file\"\r\n                    onClick={(e) => {\r\n                      setFileUpload({ file: {} });\r\n                      setShowUploadFile(\"\");\r\n                      setShowListFile(\"display-none\");\r\n                      setUploadError(\"\");\r\n                    }}\r\n                  >\r\n                    delete\r\n                  </i>\r\n\r\n                </div>\r\n\r\n              </div>\r\n              <div className=\"margin-top-10 margin-left-10\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-save text-transform btn-sm\"\r\n                  onClick={onFileUpload}\r\n                >\r\n                  Tạo nhiều đơn hàng\r\n                </button>\r\n              </div>\r\n              <div className=\"errorUpload\">{UploadError}</div>\r\n            </div>\r\n            <div className=\"col-md-4\"></div>\r\n            <div className=\"col-md-12 mt10 margin-bottom-20 margin-left-10\"><span className=\"font-weight500\">Lần đầu sử dụng dịch vụ của chúng tôi? </span>\r\n              <Link\r\n                className=\"Blue font-weight500\"\r\n                download\r\n                target=\"_blank\"\r\n                to=\"/assets/exceltemp/MauVanDonExcel-15-06-2022.xlsx\"\r\n              >\r\n                Tải file mẫu\r\n              </Link>\r\n            </div>\r\n            <div className={ShowList + \" col-md-12 30\"}>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-save text-transform btn-sm margin-left-10 pull-right btn-sm\"\r\n                disabled={!disable}\r\n                onClick={CPN_spLading_Save}\r\n              >\r\n                <i className=\"material-icons\">check</i> Tạo đơn\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-refesh text-transform pull-right btn-sm\"\r\n                disabled={!disable}\r\n                onClick={onCancelSave}\r\n              >\r\n                <i className=\"material-icons\">undo</i> Hủy\r\n              </button>\r\n            </div>\r\n            <div className={ShowList + \" col-md-12 30 margin-top-20 Formlading\"}>\r\n              <DataTable data={LadingList} columns={columns} />\r\n            </div>\r\n          </div>\r\n        </div> </>) : (<NoCustomer />)}\r\n    </div >\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\LadingCreateComponent.js",["1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183"],"D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\CustomerComplainList.js",["1184","1185","1186","1187","1188","1189","1190","1191","1192","1193"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  FormatDate,\r\n  Alerterror,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { CustomerAction } from \"../../Redux/Actions/Main\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\n\r\nexport const CustomerComplainList = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button;\r\n  const history = useHistory();\r\n\r\n  const [CustomerComplainlist, setCustomerComplainlist] = useState([]);\r\n  const [AppAPIKey, setAppAPIKey] = useState(\"netcoAPIkey2020\");\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const [Type, setType] = useState(0);\r\n  const [State, setState] = useState(0);\r\n  const [Code, binCode, setCode] = useInput(\"\");\r\n\r\n  const [fdate, setFdate] = useState(new Date());\r\n  const [tdate, setTdate] = useState(new Date());\r\n\r\n  const FromDate = (item) => {\r\n    setFdate(item);\r\n  };\r\n  const ToDate = (item) => {\r\n    setTdate(item);\r\n  };\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (CustomerID === null) {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const APIC_spCustomerComplainList = async () => {\r\n    if (fdate === \"\") {\r\n      Alerterror(\"Chọn từ ngày\");\r\n      return;\r\n    } else if (tdate === \"\") {\r\n      Alerterror(\"Chọn đến ngày\");\r\n      return;\r\n    } else {\r\n      let params = {\r\n        CustomerId: CustomerID,\r\n        FromDate: fdate.toISOString(),\r\n        ToDate: tdate.toISOString(),\r\n        Skip: 0,\r\n        Take: 200,\r\n        Type: Type,\r\n        State: State,\r\n        Code: Code,\r\n        CustomerIds: GetCookieGroup(\"CustomerIds\"),\r\n      };\r\n\r\n      const pr = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spCustomerComplainList_Json\",\r\n      };\r\n      // call redux saga\r\n      const result = await mainAction.API_spCallServer(pr, dispatch);\r\n\r\n      setCustomerComplainlist(result);\r\n      //console.log(data);\r\n    }\r\n    // PaginationTable();\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const firtdatasearch = () => {\r\n    setCustomerComplainlist([]);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Tên người khiếu nại\",\r\n      accessor: \"ComplainName\",\r\n      // Cell: ({row})  => (<button className=\"btn btn-sm btn-danger\" onClick={e => clickRow({row})}>Edit</button>)\r\n    },\r\n    {\r\n      Header: \"Mã khiếu nại\",\r\n      accessor: \"ComplainCode\",\r\n    },\r\n    {\r\n      Header: \"Mã vận đơn\",\r\n      accessor: \"LadingCode\",\r\n    },\r\n    {\r\n      Header: \"Ngày tạo\",\r\n      accessor: \"ComplainDate\",\r\n      Cell: (obj) => FormatDate(obj.value, \"d/k/y\"),\r\n    },\r\n    {\r\n      Header: \"Số điện thoại\",\r\n      accessor: \"ComplainPhone\",\r\n    },\r\n    {\r\n      Header: \"Loại khiếu nại\",\r\n      accessor: \"ComplainType\",\r\n    },\r\n    {\r\n      Header: \"Tình trạng xử lý\",\r\n      accessor: \"ComplainState\",\r\n    },\r\n    {\r\n      Header: \"Nội dung khiếu nại\",\r\n      accessor: \"Content\",\r\n    },\r\n    {\r\n      Header: \"Nội dung xử lý\",\r\n      accessor: \"Note\",\r\n    },\r\n  ];\r\n\r\n  const clickRow = (item) => {\r\n    console.log(\"clickrow\", item.row.ComplainCode);\r\n  };\r\n  const clickexcel = () => {\r\n    let dataExcel = CustomerComplainlist.map((item, index) => {\r\n      return {\r\n        \"Mã khiếu nại\": item.ComplainCode,\r\n        \"Người khiếu nại\": item.ComplainName,\r\n        \"Ngày khiếu nại\": FormatDate(item.ComplainDate, \"d/k/y\"),\r\n        \"SDT liên hệ\": item.ComplainPhone,\r\n        \"Loại khiếu nại\": item.ComplainType,\r\n        \"Tình trạng xử lý\": item.ComplainState,\r\n        \"Nội dung khiếu nại\": item.Content,\r\n        \"Nội dung xử lý\": item.Note\r\n      }\r\n    });\r\n    ExportExcel(dataExcel, \"Danh Sách Khiếu nại\");\r\n  };\r\n\r\n  /* clear data on form when insert success */\r\n\r\n  const APIC_spCustomerComplainList_clear = () => {\r\n    setType(0);\r\n    setState(0);\r\n    setCode(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row cardcus\">\r\n          <div className=\"col-md-12 HomeTitle\">Lịch sử khiếu nại</div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"form-group\">\r\n              <label>Từ ngày (*)</label>\r\n              <DateTimePicker\r\n                className=\"form-control borradius3\"\r\n                onChange={(date) => FromDate(date)}\r\n                value={fdate}\r\n                format=\"dd/MM/yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div className=\"form-group\">\r\n              <label>Đến ngày (*)</label>\r\n              <DateTimePicker\r\n                className=\"form-control borradius3\"\r\n                onChange={(date) => ToDate(date)}\r\n                value={tdate}\r\n                format=\"dd/MM/yyyy\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3 margin-top-15\">\r\n            <label className=\"mb0\">Loại khiếu nại</label>\r\n            <select\r\n              className=\"form-control borradius3 height35\"\r\n\r\n              value={Type}\r\n              onChange={(e) => setType(e.target.value)}\r\n            >\r\n              <option value=\"0\">Tất Cả</option>\r\n              <option value=\"1\">Khiếu nại về dịch vụ</option>\r\n              <option value=\"2\">Khiếu nại về cước phí</option>\r\n              <option value=\"3\">Khiếu nại về COD</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"col-md-3 margin-top-15\">\r\n            <label className=\"mb0\">Tình trạng xử lý</label>\r\n            <select\r\n              className=\"form-control borradius3 height35\"\r\n              value={State}\r\n              onChange={(e) => setState(e.target.value)}\r\n            >\r\n              <option value=\"0\">Tất cả</option>\r\n              <option value=\"1\">Chưa xử lý</option>\r\n              <option value=\"2\">Đang xử lý</option>\r\n              <option value=\"3\">Đã xử lý</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"col-md-12 margin-top-10\">\r\n            <div className=\"form-group\">\r\n              <label>Mã vận đơn</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control borradius3\"\r\n                value={Code}\r\n                {...binCode}\r\n                placeholder='Nhập các mã vận đơn cách nhau bằng dấu \",\"'\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 mt15 text-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn text-transform btn-sm btn-save\"\r\n              disabled={disable}\r\n              onClick={APIC_spCustomerComplainList}\r\n            >\r\n              <i className=\"material-icons\">search</i>\r\n              Tìm kiếm\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={clickexcel}\r\n              className=\"btn text-transform btn-sm  btn-refesh margin-left-10\"\r\n            >\r\n              <img src=\"../assets/img/iconexcel.png\" className='iconex' />\r\n              Xuất Excel\r\n            </button>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"row cardcus margin-top-20\">\r\n          <div className=\"col-md-12  table-responsive mt30\">\r\n            <DataTable data={CustomerComplainlist} columns={columns} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\CustomerComplain.js",["1194","1195","1196","1197","1198","1199"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  ValidPhone,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { NoCustomer } from \"../../Common\";\r\n\r\nexport const CustomerComplain = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button;\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [LadingCode, setLadingCode] = useState(\"\");\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const [Name, setName] = useState(\"\");\r\n  const [Phone, setPhone] = useState(\"\");\r\n  const [Type, setType] = useState(0);\r\n  const [Content, setContent] = useState(\"\");\r\n\r\n  const NameRef = useRef();\r\n  const PhoneRef = useRef();\r\n  const LadingCodeRef = useRef();\r\n\r\n  //#region validation\r\n  const [ErrType, setErrType] = useState(\"\");\r\n  const [ErrName, setErrName] = useState(\"\");\r\n  const [ErrPhone, setErrPhone] = useState(\"\");\r\n  const [ErrContent, setErrContent] = useState(\"\");\r\n  //#endregion end validation\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n\r\n    setName(GetCookie(\"CustomerName\"));\r\n    setPhone(GetCookie(\"Phone\"));\r\n\r\n    location.Code === undefined\r\n      ? setLadingCode(\"\")\r\n      : setLadingCode(location.Code);\r\n  }, []);\r\n\r\n  const APIC_spCustomerComplain = async () => {\r\n    debugger;\r\n\r\n\r\n    if (Type === 0 || Type === \"0\") {\r\n      Alerterror(\"Vui lòng chọn loại khiếu nại\");\r\n      setErrType(\"form-error\");\r\n      return;\r\n    } else setErrType(\"\");\r\n\r\n    if (Name === \"\") {\r\n      Alerterror(\"Vui lòng nhập tên người khiếu nại\");\r\n      setErrName(\"form-error\");\r\n      return;\r\n    } else setErrName(\"\");\r\n\r\n    if (Phone === \"\") {\r\n      Alerterror(\"Vui lòng nhập số điện thoại\");\r\n      setErrPhone(\"form-error\");\r\n      return;\r\n    } else setErrPhone(\"\");\r\n\r\n    if (ValidPhone(Phone) !== \"\") {\r\n      Alerterror(\"Số điện thoại không đúng định dạng\");\r\n      setErrPhone(\"form-error\");\r\n      return;\r\n    }\r\n    else if (LadingCode !== \"\") {\r\n      const Codearr = [];\r\n      const uniqueSet = new Set(LadingCode.split(\",\"));\r\n      const backToArray = [...uniqueSet];\r\n      if (backToArray.length > 10) {\r\n        Alerterror(\"Vui lòng nhập tối đa 10 vận đơn!\");\r\n        setErrContent(\"form-error\");\r\n        return;\r\n      }\r\n    }\r\n    else if (Content === \"\") {\r\n      Alerterror(\"Vui lòng nhập nội dung khiếu nại\");\r\n      setErrContent(\"form-error\");\r\n      return;\r\n    }\r\n\r\n    else setErrContent(\"\");\r\n\r\n    try {\r\n\r\n      let params = {\r\n        CustomerId: CustomerID,\r\n        Name: Name,\r\n        Phone: Phone,\r\n        LadingCode: LadingCode,\r\n        Type: parseInt(Type),\r\n        Content: Content,\r\n        SendFrom: \"TRÊN WEBSITE CUSTOMER\",\r\n      };\r\n      setDisable(true); // disable button\r\n      const pr = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spCustomerComplain_JsonAuto\",\r\n        API_key: APIKey,\r\n        TokenDevices: TOKEN_DEVICE,\r\n      };\r\n      // call redux saga\r\n      const result = await mainAction.API_spCallServer(pr, dispatch);\r\n      // call redux saga\r\n      mainAction.LOADING({ IsLoading: false }, dispatch);\r\n      Alertsuccess(\"Thành công\");\r\n      APIC_spCustomerComplain_Clear();\r\n      const NotifiParam = {\r\n        Json: JSON.stringify({\r\n          CustomerId: CustomerID,\r\n          FuncSend: \"ComplainCreate\",\r\n          SendFrom: \"WEB CUSTOMER\",\r\n          JsonData: [\r\n            {\r\n              Name: Name,\r\n              Phone: Phone,\r\n              Content: Content,\r\n            },\r\n          ],\r\n        }),\r\n        func: \"APIC_spSendNotification\",\r\n        API_key: APIKey,\r\n      };\r\n      const resultNotify = await mainAction.API_spCallServer(\r\n        NotifiParam,\r\n        dispatch\r\n      );\r\n      mainAction.LOADING({ IsLoading: false }, dispatch);\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      setDisable(false);\r\n    }\r\n  };\r\n\r\n  const APIC_spCustomerComplain_Clear = () => {\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n    setLadingCode(\"\");\r\n    setContent(\"\");\r\n    setDisable(false); // disable button\r\n  };\r\n  const RegPhone = (e) => {\r\n    let result = ValidPhone(e);\r\n    setErrPhone(result);\r\n    setPhone(e);\r\n  };\r\n  return (\r\n    <div className=\"content\">\r\n      {GetCookieGroup(\"IsChooseCustomer\") === \"True\" ? (<>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row Formlading\">\r\n            <div className=\"col-md-12 HomeTitle margin-top-10\">\r\n              Khiếu nại đơn hàng\r\n            </div>\r\n\r\n            <div className=\"col-md-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group bmd-form-group\">\r\n                    <label className=\"no-absolute\">\r\n                      Loại khiếu nại <span className=\"red\">(*)</span>\r\n                    </label>\r\n                    <select\r\n                      style={{ height: '37px' }}\r\n                      className={\"top0 form-control \" + ErrType}\r\n                      value={Type}\r\n                      onChange={(e) => {\r\n                        setType(e.target.value);\r\n                        e.target.value === \"0\"\r\n                          ? setErrType(\"form-error\")\r\n                          : setErrType(\"\");\r\n                      }}\r\n                    >\r\n                      <option value=\"0\">Chọn loại khiếu nại</option>\r\n                      <option value=\"1\">Khiếu nại về dịch vụ</option>\r\n                      <option value=\"2\">Khiếu nại về cước phí</option>\r\n                      <option value=\"3\">Khiếu nại về COD</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"no-absolute\">\r\n                      Tên người khiếu nại <span className=\"red\">(*)</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className={\"form-control \" + ErrName}\r\n                      ref={NameRef}\r\n                      value={Name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"no-absolute\">\r\n                      Số điện thoại liên hệ <span className=\"red\">(*)</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className={\"form-control \" + ErrPhone}\r\n                      ref={PhoneRef}\r\n                      value={Phone}\r\n                      onChange={(e) => {\r\n                        setPhone(e.target.value);\r\n                        RegPhone(e.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"no-absolute\">Mã vận đơn</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={LadingCode}\r\n                      onChange={(e) => setLadingCode(e.target.value)}\r\n                      placeholder='Nhập tối đa 10 mã vận đơn cách nhau bằng dấu\",\"'\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12 margin-bottom-20\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"no-absolute\">\r\n                      Nội dung khiếu nại <span className=\"red\">(*)</span>\r\n                    </label>\r\n                    <textarea\r\n                      className={\"form-control \" + ErrContent}\r\n                      value={Content}\r\n                      onChange={(e) => setContent(e.target.value)}\r\n                      minLength=\"0\"\r\n                      maxLength=\"500\"\r\n                      rows=\"4\"\r\n                      placeholder=\"Nhập nội dung khiếu nại, hỗ trợ, góp ý ...\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 margin-top-20 text-center\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-sm text-transform btn-refeshno\"\r\n              disabled={disable}\r\n              onClick={APIC_spCustomerComplain_Clear}\r\n            >\r\n              <i className=\"material-icons\">undo</i>\r\n              Hủy\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn text-transform btn-sm btn-save margin-left-10\"\r\n              disabled={disable}\r\n              onClick={APIC_spCustomerComplain}\r\n            >\r\n              <i className=\"material-icons\">headset_mic</i>\r\n              Gửi Yêu Cầu\r\n            </button>\r\n\r\n          </div>\r\n        </div>\r\n      </>) : (<NoCustomer />)}\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\HomeComponent.js",["1200","1201","1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {\r\n\tAlertsuccess,\r\n\tAlerterror,\r\n\tDecodeString,\r\n\tFormatMoney,\r\n\tFormatNumber,\r\n\tGetCookie,\r\n\tGetCookieGroup\r\n} from \"../../Utils\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { ChartTemp, CanvasChart } from \"../../Common\";\r\n\r\nexport const HomeComponent = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\tconst [FromDate, setFromDate] = useState(new Date());\r\n\tconst [ToDate, setToDate] = useState(new Date());\r\n\tconst FromDateRef = useRef();\r\n\tconst ToDateRef = useRef();\r\n\tconst [Disable, setDisable] = useState(false);\r\n\tconst [DataChart, setDataChart] = useState([]);\r\n\tconst [DataCanvasChart, setDataCanvasChart] = useState([]);\r\n\tconst [DataChartPie, setDataChartPie] = useState([\r\n\t\t{ title: \"Khách hàng tạo bill\", value: 1, color: \"#4F91FF\" },\r\n\t\t{ title: \"Đang lấy hàng\", value: 1, color: \"#F6655A\" },\r\n\t\t{ title: \"Đã lấy hàng\", value: 1, color: \"#555299\" },\r\n\t\t{ title: \"Đang trung chuyển\", value: 1, color: \"#B88217\" },\r\n\t\t{ title: \"Đã nhận lại\", value: 1, color: \"#BB6BD9\" },\r\n\t\t{ title: \"Đang phát\", value: 1, color: \"#56CCF2\" },\r\n\t\t{ title: \"Thành công\", value: 1, color: \"#65B168\" },\r\n\t\t{ title: \"Phát lại\", value: 1, color: \"#005384\" },\r\n\t\t{ title: \"Đang phát lại\", value: 1, color: \"#E5AE40\" },\r\n\t\t{ title: \"Hoàn gốc\", value: 1, color: \"#D6000D\" },\r\n\t]);\r\n\tconst [CurrentName, setCurrentName] = useState(GetCookie(\"CustomerName\"));\r\n\r\n\t//#region Trạng thái vận đơn\r\n\tconst [Status1, setStatus1] = useState(0);\r\n\tconst [Status2, setStatus2] = useState(0);\r\n\tconst [Status3, setStatus3] = useState(0);\r\n\tconst [Status4, setStatus4] = useState(0);\r\n\tconst [Status5, setStatus5] = useState(0);\r\n\tconst [Status6, setStatus6] = useState(0);\r\n\tconst [Status7, setStatus7] = useState(0);\r\n\tconst [Status8, setStatus8] = useState(0);\r\n\tconst [Status9, setStatus9] = useState(0);\r\n\tconst [Status50, setStatus50] = useState(0);\r\n\tconst [TotalCOD, setTotalCOD] = useState(0);\r\n\tconst [TotalLading, setTotalLading] = useState(0);\r\n\tconst [TotalWeight, setTotalWeight] = useState(0);\r\n\tconst [TotalAmount, setTotalAmount] = useState(0);\r\n\tconst style = { fontSize: '3px', fontFamily: 'sans-serif', fill: '#333' };\r\n\tconst [Status1COD, setStatus1COD] = useState(0);\r\n\tconst [Status2COD, setStatus2COD] = useState(0);\r\n\tconst [Status3COD, setStatus3COD] = useState(0);\r\n\tconst [Status4COD, setStatus4COD] = useState(0);\r\n\tconst [Status5COD, setStatus5COD] = useState(0);\r\n\tconst [Status6COD, setStatus6COD] = useState(0);\r\n\tconst [Status7COD, setStatus7COD] = useState(0);\r\n\tconst [Status8COD, setStatus8COD] = useState(0);\r\n\tconst [Status9COD, setStatus9COD] = useState(0);\r\n\tconst [Status50COD, setStatus50COD] = useState(0);\r\n\r\n\tconst [Status1AMOUNT, setStatus1AMOUNT] = useState(0);\r\n\tconst [Status2AMOUNT, setStatus2AMOUNT] = useState(0);\r\n\tconst [Status3AMOUNT, setStatus3AMOUNT] = useState(0);\r\n\tconst [Status4AMOUNT, setStatus4AMOUNT] = useState(0);\r\n\tconst [Status5AMOUNT, setStatus5AMOUNT] = useState(0);\r\n\tconst [Status6AMOUNT, setStatus6AMOUNT] = useState(0);\r\n\tconst [Status7AMOUNT, setStatus7AMOUNT] = useState(0);\r\n\tconst [Status8AMOUNT, setStatus8AMOUNT] = useState(0);\r\n\tconst [Status9AMOUNT, setStatus9AMOUNT] = useState(0);\r\n\tconst [Status50AMOUNT, setStatus50AMOUNT] = useState(0);\r\n\r\n\t//#endregion Trạng thái vận đơn\r\n\r\n\tuseEffect(() => {\r\n\t\tif (CustomerID === null) {\r\n\t\t\thistory.push(\"/\");\r\n\t\t}\r\n\t\tif (GetCookieGroup(\"IsChooseCustomer\") === \"True\")\r\n\t\t\tsetCurrentName(GetCookie(\"CustomerName\"));\r\n\t\telse\r\n\t\t\tsetCurrentName(GetCookieGroup(\"GroupName\"));\r\n\t}, []);\r\n\tconst convert = (str) => {\r\n\t\tvar date = new Date(str),\r\n\t\t\tmnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n\t\t\tday = (\"0\" + date.getDate()).slice(-2);\r\n\t\treturn [date.getFullYear(), mnth, day].join(\"-\");\r\n\t};\r\n\r\n\tconst ChangeTypeSearch = (days) => {\r\n\t\tdebugger\r\n\t\tvar date = new Date();\r\n\t\tvar last = new Date(date.getTime() - (parseInt(days) * 24 * 60 * 60 * 1000));\r\n\t\tvar day = last.getDate();\r\n\t\tvar month = last.getMonth() + 1;\r\n\t\tvar year = last.getFullYear();\r\n\t\tsetFromDate(new Date(year + \"/\" + month + \"/\" + day));\r\n\t\tsetToDate(date);\r\n\t}\r\n\r\n\tconst APIC_spLading_SumByStatusOverView = async () => {\r\n\t\tlet params = {\r\n\t\t\tAppAPIKey: APIKey,\r\n\t\t\tTokenDevices: TOKEN_DEVICE,\r\n\t\t\tLadingCode: \"\",\r\n\t\t\tFromDate: FromDate.toISOString(),\r\n\t\t\tToDate: ToDate.toISOString(),\r\n\t\t\tCustomerID: CustomerID,\r\n\t\t\tCustomerCode: GetCookie(\"CustomerCode\"),\r\n\t\t\tCustomerIds: GetCookieGroup(\"CustomerIds\")\r\n\t\t};\r\n\t\tlet pr = {\r\n\t\t\tJson: JSON.stringify(params),\r\n\t\t\tfunc: \"APIC_spLading_SumByStatusOverView\",\r\n\t\t\tAPI_key: APIKey,\r\n\t\t};\r\n\t\tdebugger\r\n\t\tconst result = await mainAction.API_spCallServer(pr, dispatch);\r\n\t\tlet totalCOD = 0, totalLading = 0, totalWeight = 0, totalAmount = 0;\r\n\t\tlet _s1 = 0, _s2 = 0, _s3 = 0, _s4 = 0, _s5 = 0, _s50 = 0, _s6 = 0, _s7 = 0, _s8 = 0, _s9 = 0;\r\n\t\tlet _s1COD = 0, _s2COD = 0, _s3COD = 0, _s4COD = 0, _s5COD = 0, _s50COD = 0, _s6COD = 0, _s7COD = 0, _s8COD = 0, _s9COD = 0;\r\n\t\tlet _s1AMOUNT = 0, _s2AMOUNT = 0, _s3AMOUNT = 0, _s4AMOUNT = 0, _s5AMOUNT = 0, _s50AMOUNT = 0, _s6AMOUNT = 0, _s7AMOUNT = 0, _s8AMOUNT = 0, _s9AMOUNT = 0;\r\n\t\tlet arrStatus = [9, 1, 2, 3, 4, 5, 6, 7, 8, 50];\r\n\t\tlet listCanvas = [];\r\n\t\tarrStatus.forEach(element => {\r\n\t\t\tlet items = [], title = \"\";\r\n\t\t\tresult.filter(p => p.Status === element).map((item, index) => {\r\n\t\t\t\ttotalCOD += (item.Cod === undefined ? 0 : item.Cod);\r\n\t\t\t\ttotalLading += (item.Total === undefined ? 0 : item.Total);\r\n\t\t\t\ttotalWeight += (item.Weight === undefined ? 0 : item.Weight);\r\n\t\t\t\ttotalAmount += (item.Amount === undefined ? 0 : item.Amount);\r\n\t\t\t\titems.push({ label: item.CreateDate, y: item.Total });\r\n\t\t\t\tif (element === 9) {\r\n\t\t\t\t\t_s9 += (item.Total);\r\n\t\t\t\t\t_s9COD += (item.Cod === undefined ? 0 : item.Cod);\r\n\t\t\t\t\t_s9AMOUNT += (item.Amount === undefined ? 0 : item.Amount);\r\n\t\t\t\t\ttitle = \"Khách hàng tạo bill\";\r\n\t\t\t\t}\r\n\t\t\t\tif (element === 1) {\r\n\t\t\t\t\t_s1 += (item.Total);\r\n\t\t\t\t\t_s1COD += (item.Cod === undefined ? 0 : item.Cod);\r\n\t\t\t\t\t_s1AMOUNT += (item.Amount === undefined ? 0 : item.Amount);\r\n\t\t\t\t\ttitle = \"Đang lấy hàng\";\r\n\t\t\t\t}\r\n\t\t\t\tif (element === 2) {\r\n\t\t\t\t\t_s2 += (item.Total);\r\n\t\t\t\t\t_s2COD += (item.Cod === undefined ? 0 : item.Cod);\r\n\t\t\t\t\t_s2AMOUNT += (item.Amount === undefined ? 0 : item.Amount);\r\n\t\t\t\t\ttitle = \"Đã lấy hàng\";\r\n\t\t\t\t}\r\n\t\t\t\tif (element === 3) {\r\n\t\t\t\t\t_s3 += (item.Total);\r\n\t\t\t\t\t_s3COD += (item.Cod === undefined ? 0 : item.Cod);\r\n\t\t\t\t\t_s3AMOUNT += (item.Amount === undefined ? 0 : item.Amount);\r\n\t\t\t\t\ttitle = \"Đang trung chuyển\";\r\n\t\t\t\t}\r\n\t\t\t\tif (element === 4) {\r\n\t\t\t\t\t_s4 += (item.Total);\r\n\t\t\t\t\t_s4COD += (item.Cod === undefined ? 0 : item.Cod);\r\n\t\t\t\t\t_s4AMOUNT += (item.Amount === undefined ? 0 : item.Amount);\r\n\t\t\t\t\ttitle = \"Đã nhận lại\";\r\n\t\t\t\t}\r\n\t\t\t\tif (element === 5) {\r\n\t\t\t\t\t_s5 += (item.Total);\r\n\t\t\t\t\t_s5COD += (item.Cod === undefined ? 0 : item.Cod);\r\n\t\t\t\t\t_s5AMOUNT += (item.Amount === undefined ? 0 : item.Amount);\r\n\t\t\t\t\ttitle = \"Đang phát\";\r\n\t\t\t\t}\r\n\t\t\t\tif (element === 6) {\r\n\t\t\t\t\t_s6 += (item.Total);\r\n\t\t\t\t\t_s6COD += (item.Cod === undefined ? 0 : item.Cod);\r\n\t\t\t\t\t_s6AMOUNT += (item.Amount === undefined ? 0 : item.Amount);\r\n\t\t\t\t\ttitle = \"Phát thành công\";\r\n\t\t\t\t}\r\n\t\t\t\tif (element === 7) {\r\n\t\t\t\t\t_s7 += (item.Total);\r\n\t\t\t\t\t_s7COD += (item.Cod === undefined ? 0 : item.Cod);\r\n\t\t\t\t\t_s7AMOUNT += (item.Amount === undefined ? 0 : item.Amount);\r\n\t\t\t\t\ttitle = \"Phát lại\";\r\n\t\t\t\t}\r\n\t\t\t\tif (element === 8) {\r\n\t\t\t\t\t_s8 += (item.Total);\r\n\t\t\t\t\t_s8COD += (item.Cod === undefined ? 0 : item.Cod);\r\n\t\t\t\t\t_s8AMOUNT += (item.Amount === undefined ? 0 : item.Amount);\r\n\t\t\t\t\ttitle = \"Hoàn gốc\";\r\n\t\t\t\t}\r\n\t\t\t\tif (element === 50) {\r\n\t\t\t\t\t_s50 += (item.Total);\r\n\t\t\t\t\t_s50COD += (item.Cod === undefined ? 0 : item.Cod);\r\n\t\t\t\t\t_s50AMOUNT += (item.Amount === undefined ? 0 : item.Amount);\r\n\t\t\t\t\ttitle = \"Đang phát lại\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlistCanvas.push(\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"column\",\r\n\t\t\t\t\tname: title,\r\n\t\t\t\t\tlegendText: title,\r\n\t\t\t\t\tshowInLegend: true,\r\n\t\t\t\t\tdataPoints: items\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t});\r\n\t\tsetStatus1(_s1);\r\n\t\tsetStatus2(_s2);\r\n\t\tsetStatus3(_s3);\r\n\t\tsetStatus4(_s4);\r\n\t\tsetStatus5(_s5);\r\n\t\tsetStatus6(_s6);\r\n\t\tsetStatus7(_s7);\r\n\t\tsetStatus8(_s8);\r\n\t\tsetStatus9(_s9);\r\n\t\tsetStatus50(_s50);\r\n\t\tsetStatus1COD(FormatMoney(_s1COD));\r\n\t\tsetStatus2COD(FormatMoney(_s2COD));\r\n\t\tsetStatus3COD(FormatMoney(_s3COD));\r\n\t\tsetStatus4COD(FormatMoney(_s4COD));\r\n\t\tsetStatus5COD(FormatMoney(_s5COD));\r\n\t\tsetStatus6COD(FormatMoney(_s6COD));\r\n\t\tsetStatus7COD(FormatMoney(_s7COD));\r\n\t\tsetStatus8COD(FormatMoney(_s8COD));\r\n\t\tsetStatus9COD(FormatMoney(_s9COD));\r\n\t\tsetStatus50COD(FormatMoney(_s50COD));\r\n\r\n\t\tsetStatus1AMOUNT(FormatMoney(_s1AMOUNT));\r\n\t\tsetStatus2AMOUNT(FormatMoney(_s2AMOUNT));\r\n\t\tsetStatus3AMOUNT(FormatMoney(_s3AMOUNT));\r\n\t\tsetStatus4AMOUNT(FormatMoney(_s4AMOUNT));\r\n\t\tsetStatus5AMOUNT(FormatMoney(_s5AMOUNT));\r\n\t\tsetStatus6AMOUNT(FormatMoney(_s6AMOUNT));\r\n\t\tsetStatus7AMOUNT(FormatMoney(_s7AMOUNT));\r\n\t\tsetStatus8AMOUNT(FormatMoney(_s8AMOUNT));\r\n\t\tsetStatus9AMOUNT(FormatMoney(_s9AMOUNT));\r\n\t\tsetStatus50AMOUNT(FormatMoney(_s50AMOUNT));\r\n\r\n\t\tsetTotalCOD(FormatMoney(totalCOD));\r\n\t\tsetTotalLading(totalLading);\r\n\t\tsetTotalWeight(totalWeight);\r\n\t\tsetTotalAmount(FormatMoney(totalAmount));\r\n\t\tsetDataCanvasChart(listCanvas);//.sort((a,b)=>(a.label > b.label)?1:-1)\r\n\t\tsetDataChartPie([\r\n\t\t\t{ title: \"Khách hàng tạo bill\", value: _s9, color: \"#4F91FF\" },\r\n\t\t\t{ title: \"Đang lấy hàng\", value: _s1, color: \"#F6655A\" },\r\n\t\t\t{ title: \"Đã lấy hàng\", value: _s2, color: \"#555299\" },\r\n\t\t\t{ title: \"Đang trung chuyển\", value: _s3, color: \"#B88217\" },\r\n\t\t\t{ title: \"Đã nhận lại\", value: _s4, color: \"#BB6BD9\" },\r\n\t\t\t{ title: \"Đang phát\", value: _s5, color: \"#56CCF2\" },\r\n\t\t\t{ title: \"Thành công\", value: _s6, color: \"#65B168\" },\r\n\t\t\t{ title: \"Phát lại\", value: _s7, color: \"#005384\" },\r\n\t\t\t{ title: \"Đang phát lại\", value: _s50, color: \"#E5AE40\" },\r\n\t\t\t{ title: \"Hoàn gốc\", value: _s8, color: \"#D6000D\" },\r\n\t\t]);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"content\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<div className=\"row cardcus\">\r\n\t\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t\t<div className=\"row HomeTitle\">Xin chào, {CurrentName} !</div>\r\n\t\t\t\t\t\t<div className=\"row margin-top-10\">\r\n\t\t\t\t\t\t\t{/* <div className=\"col-md-4\">\r\n\t\t\t\t\t\t\t\t<label> Chọn thời gian</label>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group mt0\">\r\n\t\t\t\t\t\t\t\t\t<select className=\"form-control\" onChange={(e) => ChangeTypeSearch(e.target.value)} style={{ height: \"36px\" }}>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"0\">Hôm nay</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"3\">3 ngày trước</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"7\">7 ngày trước</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"30\">30 ngày trước</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t{/* <div className=\"col-md-2\"><label  style={{color:'3A3A44',fontSize:'14px',fontWeight:'500'}}>Thống kê hiệu suất </label></div> */}\r\n\t\t\t\t\t\t\t<div className=\"col-md-7 row\">\r\n\t\t\t\t\t\t\t\t<span style={{ color: '3A3A44', fontSize: '14px', fontWeight: '500', marginTop: '5px' }}>Thống kê hiệu suất </span>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group mt0 col-md-4 col-sm-6 col-xs-12\">\r\n\t\t\t\t\t\t\t\t\t<DateTimePicker className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={date => setFromDate(date)}\r\n\t\t\t\t\t\t\t\t\t\tvalue={FromDate}\r\n\t\t\t\t\t\t\t\t\t\tformat='dd/MM/yyyy'\r\n\t\t\t\t\t\t\t\t\t\tref={FromDateRef}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group mt0 col-md-4 col-md-4 col-sm-6 col-xs-12\">\r\n\t\t\t\t\t\t\t\t\t<span style={{ color: '3A3A44', fontSize: '14px', fontWeight: '500' }}></span>\r\n\t\t\t\t\t\t\t\t\t<DateTimePicker className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={date => setToDate(date)}\r\n\t\t\t\t\t\t\t\t\t\tvalue={ToDate}\r\n\t\t\t\t\t\t\t\t\t\tformat='dd/MM/yyyy'\r\n\t\t\t\t\t\t\t\t\t\tref={ToDateRef}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-2 text-center\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tdisabled={Disable}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tAPIC_spLading_SumByStatusOverView();\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-save btn-sm text-transform\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">search</i>\r\n\t\t\t\t\t\t\t\t\tTìm kiếm\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row mt25 Home\">\r\n\t\t\t\t\t\t\t<div className=\"col-md-6 Homechart\">\r\n\t\t\t\t\t\t\t\t<div className='Totallading'>{TotalLading}</div>\r\n\t\t\t\t\t\t\t\t<ChartTemp type=\"Homepie\" data={DataChartPie} defaultLabelStyle={style} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-md-5 scrollxs\">\r\n\t\t\t\t\t\t\t\t<table class=\"table table-bordered tableHome\" style={{ fontSize: '12px' }} id=\"dataTable\">\r\n\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th className='Minwidth170'>Trạng thái</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th className='Minwidth70'>Số đơn</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th className='Minwidth70'>Tiền thu hộ</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th className='Minwidth70'>Tiền cước</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t<tr >\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ background: '#4F91FF' }}></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\tMới tạo\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status9}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status9COD}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status9AMOUNT}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<tr >\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ background: '#F6655A' }}></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\tĐang lấy hàng\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status1}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status1COD}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status1AMOUNT}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr >\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ background: '#B88217' }}></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\tĐang trung chuyển\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status2}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status2COD}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status2AMOUNT}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr >\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ background: '#555299' }}></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\tĐã lấy hàng\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status3}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status3COD}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status3AMOUNT}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr >\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ background: '#BB6BD9' }}></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\tĐã nhận lại\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status4}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status4COD}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status4AMOUNT}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr >\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ background: '#56CCF2' }}></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\tĐang phát\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status5}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status5COD}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status5AMOUNT}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr >\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ background: '#65B168' }}></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\tThành công\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status6}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status6COD}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status6AMOUNT}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr >\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ background: '#005384' }}></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\tPhát lại\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status7}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status7COD}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status7AMOUNT}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr >\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ background: '#E5AE40' }}></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\tĐang phát lại\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status50}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status50COD}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status50AMOUNT}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t<tr className='shadow-bottom'>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ background: '#D6000D' }}></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\tHoàn gốc\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status8}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status8COD}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{Status8AMOUNT}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t<tfoot>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>Tổng</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{TotalLading}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{TotalCOD}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td className='text-centerxs'>{TotalAmount}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</tfoot>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* <div className=\"col-md-3\">\r\n\t\t\t\t\t\t<div class=\"alert alert-success text-center\" role=\"alert\">\r\n\t\t\t\t\t\t\t<p className=\"font20\">TIỀN THU HỘ</p>\r\n\t\t\t\t\t\t\t<p className=\"font30\">{FormatMoney(TotalCOD)}đ</p>\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t{/* <div class=\"alert alert-info text-center\" role=\"alert\">\r\n\t\t\t\t\t\t\t<p className=\"font20\">CHƯA ĐỐI SOÁT</p>\r\n\t\t\t\t\t\t\t<p className=\"font30\">2.000.000đ</p>\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t{/* <div class=\"alert alert-info text-center\" role=\"alert\">\r\n\t\t\t\t\t\t\t<p className=\"font20\">TỔNG VẬN ĐƠN</p>\r\n\t\t\t\t\t\t\t<p className=\"font30\">{FormatNumber(TotalLading)}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"alert alert-danger text-center\" role=\"alert\">\r\n\t\t\t\t\t\t\t<p className=\"font20\">TỔNG CƯỚC PHÍ</p>\r\n\t\t\t\t\t\t\t<p className=\"font30\">{FormatMoney(TotalAmount)}đ</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"alert alert-purple text-center\" role=\"alert\">\r\n\t\t\t\t\t\t\t<p className=\"font20\">TỔNG TRỌNG LƯỢNG</p>\r\n\t\t\t\t\t\t\t<p className=\"font30\">{FormatNumber(TotalWeight)} (g)</p>\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t);\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Main\\LadingGetPriceComponent.js",["1218","1219","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nimport { SelectCity, SelectDistrict, SelectWard, Avarta, NoCustomer } from \"../../Common\";\r\nimport {\r\n  Alertsuccess,\r\n  Alerterror,\r\n  DecodeString,\r\n  FormatMoney,\r\n  FormatDateJson,\r\n  GetCookieValue,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n} from \"../../Utils\";\r\n\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { Location, Lading } from \"../../Redux/Actions/Category\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\n//import { format } from 'date-fns'\r\n\r\n/* Load CSS */\r\nexport const LadingGetPriceComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button\r\n  const history = useHistory();\r\n  const [Prices, setPrices] = useState([]);\r\n  const [IsShowList, setIsShowList] = useState(\"display-none\");\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [CityFromMeno, setCityFromMeno] = useState(0);\r\n  const [DistrictFromMeno, setDistrictFromMeno] = useState(0);\r\n  const [CityFromMenoName, setCityFromMenoName] = useState(\"\");\r\n  const [DistrictFromMenoName, setDistrictFromMenoName] = useState(\"\");\r\n\r\n  const [CityMeno, setCityMeno] = useState(0);\r\n  const [DistrictMeno, setDistrictMeno] = useState(0);\r\n  const [WardMeno, setWardMeno] = useState(0);\r\n  const [CityMenoName, setCityMenoName] = useState(\"\");\r\n  const [DistrictMenoName, setDistrictMenoName] = useState(\"\");\r\n  const [WardMenoName, setWardMenoName] = useState(\"\");\r\n\r\n  const [Weight, bindWeight, setWeight] = useInput(\"\");\r\n  const WeightRef = useRef();\r\n\r\n  const [COD, bindCOD, setCOD] = useInput(0);\r\n  const CODRef = useRef();\r\n  /* run after render as document.ready */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n  }, []);\r\n\r\n  const onChooseProvinceFrom = (item) => {\r\n    setCityFromMeno(item.value);\r\n    setCityFromMenoName(item.label);\r\n    setDistrictFromMeno(0);\r\n    setDistrictFromMenoName(\"\");\r\n  };\r\n\r\n  const onChooseDistrictFrom = (item) => {\r\n    setDistrictFromMeno(item.value);\r\n    setDistrictFromMenoName(item.label);\r\n  };\r\n\r\n  const onChooseProvince = (item) => {\r\n    setCityMeno(item.value);\r\n    setCityMenoName(item.label);\r\n    setDistrictMeno(0);\r\n    setDistrictMenoName(\"\");\r\n    setWardMeno(0);\r\n    setWardMenoName(\"\");\r\n  };\r\n\r\n  const onChooseDistrict = (item) => {\r\n    setDistrictMeno(item.value);\r\n    setDistrictMenoName(item.label);\r\n    setWardMeno(0);\r\n    setWardMenoName(\"\");\r\n  };\r\n\r\n  const onChooseWard = (item) => {\r\n    setWardMeno(item.value);\r\n    setWardMenoName(item.label);\r\n  };\r\n\r\n  /* clear data on form when insert success */\r\n  const ClearForm = () => {\r\n    setCityFromMeno(0);\r\n    setDistrictFromMeno(0);\r\n    setCityMeno(0);\r\n    setDistrictMeno(0);\r\n    setWardMeno(0);\r\n    setWeight(\"\");\r\n    setDisable(false);\r\n  };\r\n\r\n  const APIC_spLadingGetPriceMany = async () => {\r\n    //ScrollTop();\r\n    if (CityFromMeno === 0 || CityFromMeno === undefined) {\r\n      Alerterror(\"Vui lòng chọn Tỉnh thành gửi\");\r\n      return;\r\n    } else if (\r\n      DistrictFromMeno === 0 ||\r\n      DistrictFromMeno === undefined\r\n    ) {\r\n      Alerterror(\"Vui lòng chọn Quận huyện gửi\");\r\n      return;\r\n    } else if (Weight === \"\") {\r\n      Alerterror(\"Vui lòng nhập trọng lượng\");\r\n      return;\r\n    } else if (CityMeno === 0 || CityMeno === undefined) {\r\n      Alerterror(\"Vui lòng chọn Tỉnh thành nhận\");\r\n      return;\r\n    } else if (DistrictMeno === 0 || DistrictMeno === undefined) {\r\n      Alerterror(\"Vui lòng chọn Quận huyện nhận\");\r\n      return;\r\n    } else if (WardMeno === 0 || WardMeno === undefined) {\r\n      Alerterror(\"Vui lòng chọn Phường xã nhận\");\r\n      return;\r\n    }\r\n    setDisable(false);\r\n    let pr = {\r\n      //AppAPIKey: APIKey,\r\n      CustomerId: GetCookieGroup(\"IsChooseCustomer\") === \"True\" ? CustomerID : 0,\r\n      CityGoId: CityFromMeno,\r\n      CityToId: CityMeno,\r\n      DistrictTo: DistrictMeno,\r\n      WardToId: WardMeno,\r\n      Weight: parseFloat(Weight),\r\n      PostOffice_Id: GetCookie(\"PostOfficeId\"),\r\n    };\r\n    const params = {\r\n      API_key: APIKey,\r\n      TokenDevices: TOKEN_DEVICE,\r\n      Json: JSON.stringify(pr),\r\n      func: \"CPN_spLading_EstimatesPrice\",\r\n    };\r\n    try {\r\n      // call redux saga\r\n      const data = await mainAction.API_spCallServer(params, dispatch);\r\n      //const data = await Lading.APIC_spLadingGetPriceMany(params, dispatch);\r\n      setPrices(data);\r\n      //ClearForm();\r\n      //Alertsuccess(data.localMessage);\r\n      setIsShowList(\"\");\r\n      setDisable(false); // disable button\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n      setDisable(false); // disable button\r\n    }\r\n  };\r\n\r\n  const GotoCreate = (_Service) => {\r\n    let draff = {\r\n      ServiceID: _Service.ServiceID,\r\n      ServiceName: _Service.ServiceName,\r\n      Weight: Weight,\r\n      CityFrom: CityFromMeno,\r\n      CityFromName: CityFromMenoName,\r\n      DistrictFrom: DistrictFromMeno,\r\n      DistrictFromName: DistrictFromMenoName,\r\n      CityTo: CityMeno,\r\n      CityToName: CityMenoName,\r\n      DistrictTo: DistrictMeno,\r\n      DistrictToName: DistrictMenoName,\r\n      WardTo: WardMeno,\r\n      WardToName: WardMenoName\r\n    };\r\n    localStorage.setItem(\"LadingDraft\", JSON.stringify(draff));\r\n    history.push(\"tao-nhanh-van-don\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {GetCookieGroup(\"IsChooseCustomer\") === \"True\" ? (<>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row Formlading\">\r\n            <div className=\"col-md-12 HomeTitle margin-top-10\">Ước tính chi phí</div>\r\n            <div className=\"col-md-6 margin-top-20\">\r\n              <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">\r\n                  <i className=\"fa fa-info-circle\"></i> THÔNG TIN GỬI\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                  <div className=\"row mb5\">\r\n                    <label className=\"col-md-12 mt10\">\r\n                      Gửi từ <span className=\"red\">(*)</span>\r\n                    </label>\r\n                    <div className=\"col-md-12\">\r\n                      <SelectCity\r\n                        onActive={CityFromMeno}\r\n                        onSelected={(item) => {\r\n                          onChooseProvinceFrom(item);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mb5\">\r\n                    <label className=\"col-md-12 mt10\">\r\n                      Quận/huyện <span className=\"red\">(*)</span>\r\n                    </label>\r\n                    <div className=\"col-md-12\">\r\n                      <SelectDistrict\r\n                        onActive={DistrictFromMeno}\r\n                        ParentID={CityFromMeno}\r\n                        onSelected={(item) => {\r\n                          onChooseDistrictFrom(item);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mb5\">\r\n                    <label className=\"col-md-12 mt10\">\r\n                      Trọng lượng <span className=\"red\">(*)</span>\r\n                    </label>\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"input-group mb-2\">\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          ref={WeightRef}\r\n                          value={Weight}\r\n                          {...bindWeight}\r\n                          placeholder='Nhập trọng lượng kiện hàng'\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                          <div className=\"input-group-text\">gram</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 margin-top-20\">\r\n              <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">\r\n                  <i className=\"fa fa-info-circle\"></i> THÔNG TIN NHẬN\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                  <div className=\"row mb5\">\r\n                    <label className=\"col-md-12 mt10\">\r\n                      Gửi đến <span className=\"red\">(*)</span>\r\n                    </label>\r\n                    <div className=\"col-md-12\">\r\n                      <SelectCity\r\n                        onActive={CityMeno}\r\n                        onSelected={(item) => {\r\n                          onChooseProvince(item);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mb5\">\r\n                    <label className=\"col-md-12 mt10\">\r\n                      Quận/huyện <span className=\"red\">(*)</span>\r\n                    </label>\r\n                    <div className=\"col-md-12\">\r\n                      <SelectDistrict\r\n                        onActive={DistrictMeno}\r\n                        ParentID={CityMeno}\r\n                        onSelected={(item) => {\r\n                          onChooseDistrict(item);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mb5\">\r\n                    <label className=\"col-md-12 mt10\">\r\n                      Phường/xã <span className=\"red\">(*)</span>\r\n                    </label>\r\n                    <div className=\"col-md-12\">\r\n                      <SelectWard\r\n                        onActive={WardMeno}\r\n                        ParentID={DistrictMeno}\r\n                        onSelected={(item) => {\r\n                          onChooseWard(item);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 text-center margin-top-10\">\r\n            <button\r\n              type=\"reset\"\r\n              className=\"btn text-transform btn-sm btn-refeshno\"\r\n              onClick={ClearForm}\r\n            >\r\n              <i className=\"material-icons\">undo</i> Hủy\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn text-transform btn-sm btn-save margin-left-10\"\r\n              disabled={disable}\r\n              onClick={APIC_spLadingGetPriceMany}\r\n            >\r\n              <i className=\"material-icons\">monetization_on</i> Tra cứu giá\r\n            </button>\r\n          </div>\r\n          <div className={IsShowList + \"col-md-12 Formlading margin-top-20\"}>\r\n            <div className=\"row\">\r\n              {/* <div className=\"col-md-12 main-title\">THÔNG TIN CƯỚC PHÍ</div> */}\r\n              {Prices.map((item, index) => {\r\n                return (\r\n                  <div className=\"col-md-6 margin-top-20 table-border\">\r\n                    <table cellSpacing=\"5\" cellPadding=\"10\">\r\n                      <tr className='borbotgrey'>\r\n                        <td className=\"bold\">{item.ServiceName}</td>\r\n                        <td className=\"text-right\">\r\n                          {/* <Link\r\n                                  to=\"/tao-nhanh-van-don\"\r\n                                  className=\"btn btn-success pull-right\"\r\n                                >\r\n                                  <i className=\"material-icons\">widgets</i> Tạo\r\n                                  đơn hàng\r\n                                </Link> */}\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={(e) => GotoCreate(item)}\r\n                            className=\"btn text-transform btn-sm btn-refesh pull-right\"\r\n                          >\r\n                            <i className=\"material-icons\">widgets</i> Tạo đơn\r\n                            hàng\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                      <tr className='borbotgrey'>\r\n                        <td>Cước chính</td>\r\n                        <td className=\"text-right\">\r\n                          {/* undefined, {maximumFractionDigits:0} */}\r\n                          {item.Amount !== null\r\n                            ? FormatMoney(item.Amount) + \"đ\"\r\n                            : \"0đ\"}\r\n                        </td>\r\n                      </tr>\r\n                      {/*  <tr>\r\n                              <td>Phí COD</td>\r\n                              <td className=\"text-right\">\r\n                                {item.CODMone ?? 0}\r\n                              </td>\r\n                            </tr> */}\r\n                      <tr>\r\n                        <td>Ngày giao dự kiến</td>\r\n                        <td className=\"text-right\">\r\n                          {item.DealineTime === \"/Date(-62135596800000)/\"\r\n                            ? \"N/A\"\r\n                            : FormatDateJson(item.DealineTime, \"d-k-y\") ??\r\n                            \"Liên hệ để được tư vấn\"}\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div className=\"clearfix\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>) : (<NoCustomer />)\r\n      }\r\n    </div >\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Reports\\index.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Reports\\ReportTypeAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Reports\\ReportAction.js",[],"D:\\ErpNew\\Webcustomer\\src\\Component\\Template\\LeftMenu.js",["1232","1233","1234","1235","1236"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { GetCookie, Alerterror, GetModule, GetCookieGroup } from \"../../Utils\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\n\r\nexport const LeftMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n\r\n  const [IsAvery, setIsAvery] = useState(\"display-none\");\r\n  const [ShowMainMenu, setShowMainMenu] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      window.location.href = \"/\";\r\n\r\n    if (GetCookie(\"CustomerGroupId\") === 6)\r\n      setIsAvery(\"\");\r\n\r\n    if (GetCookieGroup(\"IsChooseCustomer\") === \"Fail\")\r\n      setShowMainMenu(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    System_spLogModule_Save(location.pathname);\r\n  }, [location]);\r\n\r\n  //#region  lưu log hệ thống\r\n  const System_spLogModule_Save = async (ActionName) => {\r\n    const prl = GetModule(ActionName);\r\n    prl.UserId = GetCookie(\"CustomerID\")\r\n    const paramsl = {\r\n      Json: JSON.stringify(prl),\r\n      func: \"CPN_spLogModule_Save\",\r\n    }\r\n    const result = await mainAction.API_spCallServer(paramsl, dispatch);\r\n    console.log(result);\r\n    //#endregion\r\n  };\r\n  //#endregion\r\n\r\n  const onClickLogout = () => {\r\n    localStorage.setItem(\"login\", \"\");\r\n    localStorage.setItem(\"GroupInfo\", \"\");\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"sidebar ps\"\r\n      data-color=\"purple\"\r\n      data-background-color=\"white\"\r\n    /* data-image=\"../assets/img/sidebar-1.jpg\" */\r\n    >\r\n      <div className=\"logo text-center\">\r\n        <div className=\"btn btn-just-icon btn-white btn-fab\">\r\n          <i className=\"material-icons design_bullet-list-67 green\">\r\n            menu_open\r\n          </i>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar-wrapper ps-container ps-theme-default\">\r\n        <ul className=\"nav mt0\">\r\n          <li className={\"border-bottom nav-item \" + (\r\n            location.pathname === \"/home\"\r\n              ? \"active\"\r\n              : \"\")}>\r\n            <Link className=\"nav-link\" to=\"/home\">\r\n              <i className=\"material-icons mt5\">home</i>\r\n              <p> Trang chủ</p>\r\n            </Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              (location.pathname === \"/lo-trinh-giao-hang\"\r\n                ? \"active\"\r\n                : \"\")\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/lo-trinh-giao-hang\">\r\n              <i className=\"material-icons mt5\">insights</i>\r\n              <p>Xem lộ trình giao hàng</p>\r\n            </Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              (location.pathname === \"/tao-nhanh-van-don\" ||\r\n                location.pathname === \"/upload-excel-van-don\" ||\r\n                location.pathname === \"/tim-kiem-van-don\" ||\r\n                location.pathname === \"/goi-lay-hang\" ||\r\n                location.pathname === \"/danh-sach-goi-lay-hang\" ||\r\n                location.pathname === \"/danh-sach-goi-lay-hang\"\r\n                ? \"active\"\r\n                : \"\")\r\n            }\r\n          >\r\n            <a\r\n              className=\"nav-link\"\r\n              data-toggle=\"collapse\"\r\n              href=\"#ladingnav\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i className=\"material-icons\">content_paste</i>\r\n              <p>\r\n                Quản lý đơn hàng <b className=\"caret\"></b>\r\n              </p>\r\n            </a>\r\n            <div className=\"collapse\" id=\"ladingnav\">\r\n              <ul className=\"nav\">\r\n                <li className={\"nav-item \" + (location.pathname === \"/tao-nhanh-van-don\" ? \"active\" : \"\")}>\r\n                  <Link className=\"nav-link\" to=\"/tao-nhanh-van-don\">\r\n                    <i className=\"material-icons mt5\">shopping_cart</i>\r\n                    <span className=\"sidebar-normal\"> Tạo nhanh vận đơn</span>\r\n                  </Link>\r\n                </li>\r\n                <li className={\"nav-item \" + (location.pathname === \"/upload-excel-van-don\" ? \"active\" : \"\")}>\r\n                  <Link className=\"nav-link\" to=\"/upload-excel-van-don\">\r\n                    <i className=\"material-icons mt5\">shopping_cart</i>\r\n                    <span className=\"sidebar-normal\">\r\n                      {\" \"}\r\n                      Upload excel vận đơn\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className={\"nav-item \" + (location.pathname === \"/tim-kiem-van-don\" ? \"active\" : \"\")}>\r\n                  <Link className=\"nav-link\" to=\"/tim-kiem-van-don\">\r\n                    <i className=\"material-icons mt5\">search</i>\r\n                    <span className=\"sidebar-normal\"> Danh sách vận đơn</span>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li className={\"border-bottom nav-item \" + (location.pathname === \"/uoc-tinh-cuoc-phi\" || location.pathname === \"/thoi-gian-toan-trinh-phat-hang-dich-vu\" ? \"active\" : \"\")}>\r\n            <a className=\"nav-link\" data-toggle=\"collapse\" href=\"#pricenav\" aria-expanded=\"false\">\r\n              <i className=\"material-icons\">list</i>\r\n              <p>\r\n                Cước phí - Thời gian <b className=\"caret\"></b>\r\n              </p>\r\n            </a>\r\n            <div className=\"collapse\" id=\"pricenav\">\r\n              <ul className=\"nav\">\r\n                <li className={\"nav-item \" + (location.pathname === \"/uoc-tinh-cuoc-phi\" ? \"active\" : \"\")}>\r\n                  <Link className=\"nav-link\" to=\"/uoc-tinh-cuoc-phi\">\r\n                    <i className=\"material-icons mt5\">fact_check</i>\r\n                    <span className=\"sidebar-normal\"> Ước tính cước phí</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname ===\r\n                      \"/thoi-gian-toan-trinh-phat-hang-dich-vu\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link\r\n                    className=\"nav-link\"\r\n                    to=\"/thoi-gian-toan-trinh-phat-hang-dich-vu\"\r\n                  >\r\n                    <i className=\"material-icons mt5\">watch_later</i>\r\n                    <span className=\"sidebar-normal\">\r\n                      {\" \"}\r\n                      Toàn trình phát theo DV\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              (location.pathname === \"/ho-tro-don-hang\" ||\r\n                location.pathname === \"/danh-sach-ho-tro-don-hang\"\r\n                ? \"active\"\r\n                : \"\")\r\n            }\r\n          >\r\n            <a\r\n              className=\"nav-link\"\r\n              data-toggle=\"collapse\"\r\n              href=\"#complainnav\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i className=\"material-icons\">record_voice_over</i>\r\n              <p>\r\n                Hỗ trợ đơn hàng <b className=\"caret\"></b>\r\n              </p>\r\n            </a>\r\n            <div className=\"collapse\" id=\"complainnav\">\r\n              <ul className=\"nav\">\r\n                  <li\r\n                    className={\r\n                      \"nav-item \" +\r\n                      (location.pathname === \"/ho-tro-don-hang\" ? \"active\" : \"\")\r\n                    }\r\n                  >\r\n                    <Link to=\"/ho-tro-don-hang\" className=\"nav-link\">\r\n                      <i className=\"material-icons mt5\">settings_phone</i>\r\n                      <span className=\"sidebar-normal\">Khiếu nại đơn hàng</span>\r\n                    </Link>\r\n                  </li>\r\n                <li\r\n                  className={\r\n                    \"nav-it em \" +\r\n                    (location.pathname === \"/danh-sach-ho-tro-don-hang\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/danh-sach-ho-tro-don-hang\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">perm_contact_calendar</i>\r\n                    <span className=\"sidebar-normal\">Lịch sử khiếu nại</span>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              (location.pathname === \"/cong-no-tam-tinh\" ||\r\n                location.pathname === \"/bang-ke-thanh-toan\" ||\r\n                location.pathname === \"/bao-cao-tong-quan\" ||\r\n                location.pathname === \"/bao-cao-kpi-giao-hang-cod\" ||\r\n                location.pathname === \"/bao-cao-ton-no\" ||\r\n                location.pathname === \"/bao-cao-dealine-thanh-toan\"\r\n                ? \"active\"\r\n                : \"\")\r\n            }\r\n          >\r\n            <a\r\n              className=\"nav-link\"\r\n              data-toggle=\"collapse\"\r\n              href=\"#reportnav\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i className=\"material-icons\">pie_chart</i>\r\n              <p>\r\n                Báo cáo <b className=\"caret\"></b>\r\n              </p>\r\n            </a>\r\n            <div className=\"collapse\" id=\"reportnav\">\r\n              <ul className=\"nav\">\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/cong-no-tam-tinh\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/cong-no-tam-tinh\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">dns</i>\r\n                    <span className=\"sidebar-normal\">Công nợ tạm tính</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bang-ke-thanh-toan\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bang-ke-thanh-toan\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">credit_card</i>\r\n                    <span className=\"sidebar-normal\">Bảng kê thanh toán</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-tong-quan\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bao-cao-tong-quan\" className=\"nav-link\">\r\n                    <i className=\"material-icons\">insights</i>\r\n                    <span className=\"sidebar-normal\">Kết quả giao hàng</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-kpi-giao-hang-cod\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bao-cao-kpi-giao-hang-cod\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">bubble_chart</i>\r\n                    <span className=\"sidebar-normal\">Kpi giao hàng COD</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bang-ke-thanh-toan-cod\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bang-ke-thanh-toan-cod\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">bubble_chart</i>\r\n                    <span className=\"sidebar-normal\">Bảng kê thanh toán COD</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-ton-no\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bao-cao-ton-no\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">pie_chart</i>\r\n                    <span className=\"sidebar-normal\">Báo cáo tồn nợ</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-dealine-thanh-toan\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link className=\"nav-link\" to=\"/bao-cao-dealine-thanh-toan\">\r\n                    <i className=\"material-icons mt5\">bar_chart</i>\r\n                    <span className=\"sidebar-normal\">Thời hạn thanh toán</span>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              IsAvery +\r\n              \" \" +\r\n              (location.pathname === \"/in-bill-tu-excel\" ? \"active\" : \"\")\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/in-bill-tu-excel\">\r\n              <i className=\"material-icons\">unarchive</i>\r\n              <p>AVERY - IN BILL</p>\r\n            </Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              (location.pathname === \"/mang-luoi-buu-cuc\" ? \"active\" : \"\")\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/mang-luoi-buu-cuc\">\r\n              <i className=\"material-icons\">room</i>\r\n              <p>Mạng lưới bưu cục</p>\r\n            </Link>\r\n          </li>\r\n          {ShowMainMenu ? (<>\r\n            <li\r\n              className={\r\n                \"border-bottom margin-bottom-20 nav-item \" +\r\n                (location.pathname === \"/thong-tin-ca-nhan\" ||\r\n                  location.pathname === \"/dia-chi-gui-thuong-xuyen\" ||\r\n                  location.pathname === \"/dia-chi-nhan-thuong-xuyen\" ||\r\n                  location.pathname === \"/doi-mat-khau\" ||\r\n                  location.pathname === \"/xac-thuc-tai-khoan\"\r\n                  ? \"active\"\r\n                  : \"\")\r\n              }\r\n            >\r\n              <a\r\n                className=\"nav-link\"\r\n                data-toggle=\"collapse\"\r\n                href=\"#settingnav\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <i className=\"material-icons\">list</i>\r\n                <p>\r\n                  Cài đặt tài khoản <b className=\"caret\"></b>\r\n                </p>\r\n              </a>\r\n              <div className=\"collapse\" id=\"settingnav\">\r\n                <ul className=\"nav\">\r\n                  <li\r\n                    className={\r\n                      \"nav-item \" +\r\n                      (location.pathname === \"/thong-tin-ca-nhan\" ? \"active\" : \"\")\r\n                    }\r\n                  >\r\n                    <Link className=\"nav-link\" to=\"/thong-tin-ca-nhan\">\r\n                      <i className=\"material-icons mt5\">account_circle</i>\r\n                      <span className=\"sidebar-normal\"> Thông tin tài khoản</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li\r\n                    className={\r\n                      \"nav-item \" +\r\n                      (location.pathname === \"/doi-mat-khau\" ? \"active\" : \"\")\r\n                    }\r\n                  >\r\n                    <Link className=\"nav-link\" to=\"/doi-mat-khau\">\r\n                      <i className=\"material-icons mt5\">swap_horiz</i>\r\n                      <span className=\"sidebar-normal\"> Đổi mật khẩu</span>\r\n                    </Link>\r\n                  </li>\r\n                  {(GetCookie(\"Verification\") === 0 && GetCookie(\"TypeCustomer\") === 2) || GetCookie(\"CustomerID\") === 34232 ? (<li\r\n                    className={\r\n                      \"nav-item \" +\r\n                      (location.pathname === \"/xac-thuc-tai-khoan\"\r\n                        ? \"active\"\r\n                        : \"\")\r\n                    }\r\n                  >\r\n                    <Link className=\"nav-link\" to=\"/xac-thuc-tai-khoan\">\r\n                      <i className=\"material-icons mt5\">fact_check</i>\r\n                      <span className=\"sidebar-normal\"> Xác thực tài khoản</span>\r\n                    </Link>\r\n                  </li>) : (<></>)}\r\n                  <li\r\n                    className={\r\n                      \"nav-item \" +\r\n                      (location.pathname === \"/dia-chi-gui-thuong-xuyen\"\r\n                        ? \"active\"\r\n                        : \"\")\r\n                    }\r\n                  >\r\n                    <Link className=\"nav-link\" to=\"/dia-chi-gui-thuong-xuyen\">\r\n                      <i className=\"material-icons mt5\">location_on</i>\r\n                      <span className=\"sidebar-normal\">\r\n                        {\" \"}\r\n                        Địa chỉ gửi thường xuyên\r\n                      </span>\r\n                    </Link>\r\n                  </li>\r\n                  <li\r\n                    className={\r\n                      \"nav-item \" +\r\n                      (location.pathname === \"/dia-chi-nhan-thuong-xuyen\"\r\n                        ? \"active\"\r\n                        : \"\")\r\n                    }\r\n                  >\r\n                    <Link className=\"nav-link\" to=\"/dia-chi-nhan-thuong-xuyen\">\r\n                      <i className=\"material-icons mt5\">location_on</i>\r\n                      <span className=\"sidebar-normal\">\r\n                        {\" \"}\r\n                        Địa chỉ nhận thường xuyên\r\n                      </span>\r\n                    </Link>\r\n                  </li>\r\n                  <li\r\n                    className={\r\n                      \"hide-md nav-item \" +\r\n                      (location.pathname === \"/dia-chi-nhan-thuong-xuyen\"\r\n                        ? \"active\"\r\n                        : \"\")\r\n                    }\r\n                  >\r\n                    <a className=\"nav-link\" href=\"#\" onClick={onClickLogout}>\r\n                      <i className=\"material-icons mt5\">logout</i>\r\n                      <span className=\"sidebar-normal\"> Đăng xuất</span>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </li>\r\n          </>) : (<></>)}\r\n          <li\r\n            className={\r\n              \"border-bottom nav-item \" +\r\n              (location.pathname === \"/bao-cao-nhap-kho\" ||\r\n                location.pathname === \"/bao-cao-xuat-kho\" ||\r\n                location.pathname === \"/bao-cao-ton-kho\" ||\r\n                location.pathname === \"/bao-cao-chuyen-kho\"\r\n                ? \"active\"\r\n                : \"\")\r\n            }\r\n          >\r\n            <a\r\n              className=\"nav-link\"\r\n              data-toggle=\"collapse\"\r\n              href=\"#reportwarehousenav\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i className=\"material-icons\">pie_chart</i>\r\n              <p>\r\n                Báo cáo kho <b className=\"caret\"></b>\r\n              </p>\r\n            </a>\r\n            <div className=\"collapse\" id=\"reportwarehousenav\">\r\n              <ul className=\"nav\">\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-nhap-kho\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bao-cao-nhap-kho\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">dns</i>\r\n                    <span className=\"sidebar-normal\">Báo cáo nhập kho</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-xuat-kho\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bao-cao-xuat-kho\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">credit_card</i>\r\n                    <span className=\"sidebar-normal\">Báo cáo xuất kho</span>\r\n                  </Link>\r\n                </li>\r\n                {/*  <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-chuyen-kho\" ? \"active\" : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bao-cao-chuyen-kho\" className=\"nav-link\">\r\n                    <i className=\"material-icons\">insights</i>\r\n                    <span className=\"sidebar-normal\">Báo cáo chuyển kho</span>\r\n                  </Link>\r\n                </li> */}\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-ton-kho\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bao-cao-ton-kho\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">bubble_chart</i>\r\n                    <span className=\"sidebar-normal\">Báo cáo tồn kho</span>\r\n                  </Link>\r\n                </li>\r\n                <li\r\n                  className={\r\n                    \"nav-item \" +\r\n                    (location.pathname === \"/bao-cao-ton-kho-npt\"\r\n                      ? \"active\"\r\n                      : \"\")\r\n                  }\r\n                >\r\n                  <Link to=\"/bao-cao-ton-kho-npt\" className=\"nav-link\">\r\n                    <i className=\"material-icons mt5\">bubble_chart</i>\r\n                    <span className=\"sidebar-normal\">Báo cáo tồn kho npt</span>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </li>\r\n          {/*  <li className=\"nav-item logout\" onClick={onClickLogout}>\r\n            <Link className=\"nav-link\">\r\n              <i className=\"material-icons mt5\">logout</i>\r\n              <p> Đăng xuất</p>\r\n            </Link>\r\n          </li> */}\r\n        </ul>\r\n        {/*   <ul className=\"nav mt0\">\r\n        <li className=\"border-bottom nav-item \" onClick={onClickLogout}>\r\n             <Link className=\"nav-link\" style={{border:'1px solid #00884E'}}>\r\n              <i className=\"material-icons\" style={{color:'#00884E'}}>logout</i>\r\n              <p  style={{color:'#00884E'}}> Đăng xuất</p>\r\n            </Link>\r\n          </li>\r\n        </ul> */}\r\n        <div className=\"ps-scrollbar-x-rail\">\r\n          <div className=\"ps-scrollbar-x\" tabIndex=\"0\"></div>\r\n        </div>\r\n        <div className=\"ps-scrollbar-y-rail\">\r\n          <div className=\"ps-scrollbar-y\" tabIndex=\"0\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottommenu\">\r\n        {/*   <div className=\"btn btn-just-icon btn-white btn-fab\">\r\n          <i className=\"material-icons design_bullet-list-67 green\">\r\n            menu_open\r\n          </i>\r\n        </div> */}\r\n        <ul className=\"sidebar-wrapper nav mt0\">\r\n          <li className=\"border-bottom nav-item \" onClick={onClickLogout}>\r\n            <Link className=\"nav-link\" style={{ border: '1px solid #00884E', textAlign: 'center' }}>\r\n              <i className=\"material-icons\" style={{ color: '#00884E', marginRight: '25px' }}>logout</i>\r\n              <p style={{ color: '#00884E', paddingLeft: '30px' }}> Đăng xuất</p>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"sidebar-background\"></div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Template\\HeaderMenu.js",["1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  DecodeString,\r\n  EncodeString,\r\n  GetCookie,\r\n  GetCookieGroup,\r\n  getData,\r\n  setData\r\n} from \"../../Utils\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport { useInput } from \"../../Hooks\";\r\nimport { LANE } from \"../../Enum\";\r\nimport I18n from '../../Language';\r\n\r\n\r\nexport const HeaderMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const [LangName, setLangName] = useState(I18n.t(\"Header.Vietnamese\"));\r\n  const [LangIcon, setLangIcon] = useState(\"/assets/img/vn.png\");\r\n\r\n  const [Codesearch, bindCodesearch, setCodesearch] = useInput(\"\");\r\n  const [CustomerGroup, setCustomerGroup] = useState(GetCookie(\"CustomerGroupId\"));\r\n  const [Customers, setCustomers] = useState([]);\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const [CurrentName, setCurrentName] = useState(\"\");\r\n  useEffect(() => {\r\n    //#region Đa ngôn ngữ hệ thống\r\n    initialLanguage();\r\n    //#endregion\r\n    if (CustomerID === null)\r\n      window.location.href = \"/login\";\r\n\r\n    if (CustomerGroup !== \"0\") {\r\n      APIC_spCustomerGetByGroup(CustomerGroup);\r\n    }\r\n    if (GetCookieGroup(\"IsChooseCustomer\") === \"True\")\r\n      setCurrentName(GetCookie(\"CustomerCode\"));\r\n    else\r\n      setCurrentName(\"Nhóm KH: \"+GetCookieGroup(\"GroupName\"));\r\n  }, []);\r\n\r\n  const APIC_spCustomerGetByGroup = async (group) => {\r\n    if (group !== 0) {\r\n      /* let pr = {\r\n        Json: \"{\\\"GroupId\\\":\" + group + \"}\",\r\n        func: \"APIC_spCustomerGetByGroupJson\",\r\n        API_key: APIKey,\r\n        TokenDevices: TOKEN_DEVICE,\r\n      };\r\n      const data = await mainAction.API_spCallServer(pr, dispatch); */\r\n      setCustomers(GetCookieGroup(\"Customers\"));\r\n    }\r\n  };\r\n\r\n  const setNewCookie = async (item) => {\r\n    let ensc = EncodeString(JSON.stringify(item));\r\n    localStorage.setItem(\"login\", ensc);\r\n    updateCookie(\"True\");\r\n    window.location.reload();\r\n  };\r\n\r\n  const updateCookie = (key) => {\r\n    let group = JSON.parse(DecodeString(localStorage.getItem(\"GroupInfo\")));\r\n    group.IsChooseCustomer = key;\r\n    let enscG = EncodeString(JSON.stringify(group));\r\n    localStorage.setItem(\"GroupInfo\", enscG);\r\n    window.location.reload();\r\n  }\r\n\r\n  const onClickLogout = async () => {\r\n    localStorage.setItem(\"login\", \"\");\r\n    localStorage.setItem(\"GroupInfo\", \"\");\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  const Link = (Codesearch) => {\r\n    window.location.href = \"/tra-cuu-van-don?code=\" + Codesearch.trim();\r\n  };\r\n  const onKeyUp = (e) => {\r\n    if (e.charCode == 13) {\r\n      Link(Codesearch);\r\n    }\r\n  };\r\n\r\n\r\n  //#region đa ngôn ngữ hệ thống\r\n  const changeLanguage = async (keylang) => {\r\n    let lang = await getData(LANE);\r\n\r\n    let params = {\r\n      language: keylang,\r\n      Type: 1\r\n    }\r\n    const language = await mainAction.changeLanguage(params, dispatch);\r\n    await setData(LANE, JSON.stringify(language));\r\n    //#region đa ngôn ngữ leftmenu\r\n    localStorage.setItem(\"keyLang\", keylang);\r\n    window.location.reload();\r\n    //#endregion\r\n\r\n\r\n  }\r\n\r\n  const initialLanguage = () => {\r\n    dispatch(mainAction.checkLanguage(null))\r\n    const keyLang = localStorage.getItem(\"keyLang\");\r\n    if (keyLang !== 'EN' && keyLang !== 'en') {\r\n      setLangName(\"Tiếng Việt\");\r\n      setLangIcon(\"/assets/img/vn.png\");\r\n      localStorage.setItem(\"keyLang\", \"VN\");\r\n    } else {\r\n      setLangName(\"English\");\r\n      setLangIcon(\"/assets/img/en.png\");\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  const MenuNoGroup = (\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item dropdown hide-sm\">\r\n        <a\r\n          className=\"nav-link height50\"\r\n          href=\"#\"\r\n          id=\"navbarDropdownGroup\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          <div>\r\n            <span className=\"CustomerName\">\r\n              {CurrentName}\r\n            </span>\r\n          </div>\r\n          <div style={{ float: 'right', marginBottom: '7px' }}>\r\n            <span style={{ textTransform: 'capitalize', color: '#9696A0' }}>Manager Account</span>\r\n            <i className=\"material-icons\" style={{ fontSize: '17px', top: '1px', color: '#9696A0' }}>expand_more</i>\r\n          </div>\r\n        </a >\r\n        <div\r\n          className=\"dropdown-menu dropdown-menu-right\"\r\n          aria-labelledby=\"navbarDropdownGroup\"\r\n        >\r\n          <a className=\"dropdown-item\" href=\"#\" onClick={onClickLogout}>\r\n            Đăng xuất\r\n          </a>\r\n        </div>\r\n      </li >\r\n      <li className=\"nav-item dropdown hide-sm left-25s\">\r\n        <img src={GetCookie(\"LinkAvatar\")} className='CustomerAvartar' width=\"100\" />\r\n      </li>\r\n      <li className=\"nav-item dropdown hide-sm\">\r\n        <a\r\n          className=\"nav-link\"\r\n          href=\"#\"\r\n          id=\"navbarDropdownGroup\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n\r\n          <div>\r\n            <img src=\"../assets/img/vn.png\" style={{ borderRadius: '3px' }} width=\"25px\" />\r\n            <i className=\"material-icons\" style={{ fontSize: '22px', top: '2px', color: '#9696A0' }}>arrow_drop_down</i>\r\n          </div>\r\n        </a>\r\n        <div\r\n          className=\"dropdown-menu dropdown-menu-right\"\r\n          aria-labelledby=\"navbarDropdownGroup\"\r\n        >\r\n          <a className=\"dropdown-item bor-bottom\" href=\"#\">\r\n            <img src=\"../assets/img/vn.png\" style={{ borderRadius: '3px', marginRight: '8px' }} width=\"30\" />  VIETNAM\r\n          </a>\r\n          <a className=\"dropdown-item\" href=\"#\" >\r\n            <img src=\"../assets/img/en.png\" style={{ borderRadius: '3px', marginRight: '8px' }} width=\"30\" /> ENGLISH\r\n          </a>\r\n        </div>\r\n      </li>\r\n    </ul >\r\n  );\r\n\r\n  const MenuHaveGroup = (\r\n    <ul className=\"navbar-nav mt0\">\r\n      <li className=\"nav-item dropdown\">\r\n        <a\r\n          className=\"nav-link\"\r\n          href=\"javascript:;\"\r\n          id=\"navbarDropdownGroup\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          <i className=\"material-icons\" style={{ marginRight: \"10px\", color: \"#00884E\" }}>group</i>\r\n          <span>{CurrentName}</span>\r\n          <i className=\"material-icons\" style={{ fontSize: '22px', top: '2px', color: '#9696A0' }}>arrow_drop_down</i>\r\n        </a>\r\n        <div\r\n          className=\"dropdown-menu dropdown-menu-right header-scroll\"\r\n          aria-labelledby=\"navbarDropdownGroup\"\r\n        >\r\n          <a\r\n            className=\"dropdown-item\"\r\n            key={0}\r\n            href=\"#\"\r\n            onClick={() => { setCurrentName(\"Nhóm KH: \"+GetCookieGroup(\"GroupName\")); updateCookie(\"Fail\"); }}\r\n          >\r\n            {\"Nhóm KH: \"+GetCookieGroup(\"GroupName\")}\r\n          </a>\r\n          {Customers.map((item, index) => {\r\n            return (\r\n              <a\r\n                className={\r\n                  item.CustomerId === CustomerID\r\n                    ? \"active dropdown-item\"\r\n                    : \"dropdown-item\"\r\n                }\r\n                key={index}\r\n                href=\"#\"\r\n                onClick={() => setNewCookie(item)}\r\n              >\r\n                {item.CustomerCode + \" - \" + item.CustomerName}\r\n              </a>\r\n            );\r\n          })}\r\n        </div>\r\n      </li>\r\n      <li className=\"nav-item dropdown hide-sm\">\r\n        <a\r\n          className=\"nav-link\"\r\n          href=\"#\"\r\n          id=\"navbarDropdownGroup\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n\r\n          <div>\r\n            <img src=\"../assets/img/vn.png\" style={{ borderRadius: '3px' }} width=\"25px\" />\r\n            <i className=\"material-icons\" style={{ fontSize: '22px', top: '2px', color: '#9696A0' }}>arrow_drop_down</i>\r\n          </div>\r\n        </a>\r\n        <div\r\n          className=\"dropdown-menu dropdown-menu-right\"\r\n          aria-labelledby=\"navbarDropdownGroup\"\r\n        >\r\n          <a className=\"dropdown-item bor-bottom\" href=\"#\">\r\n            <img src=\"../assets/img/vn.png\" style={{ borderRadius: '3px', marginRight: '8px' }} width=\"30\" />  VIETNAM\r\n          </a>\r\n          <a className=\"dropdown-item\" href=\"#\" >\r\n            <img src=\"../assets/img/en.png\" style={{ borderRadius: '3px', marginRight: '8px' }} width=\"30\" /> ENGLISH\r\n          </a>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-absolute fixed-top\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-wrapper\">\r\n          <a className=\"navbar-brand simple-text logo-normal\" href=\"/home\">\r\n            <img src=\"https://admin-netco.vps.vn//Image/ckfinder/images/assets/logo.png\" className='mar-left-100' width=\"100\" />\r\n          </a>\r\n        </div>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          aria-controls=\"navigation-index\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"sr-only\">Toggle navigation</span>\r\n          <span className=\"navbar-toggler-icon icon-bar\"></span>\r\n          <span className=\"navbar-toggler-icon icon-bar\"></span>\r\n          <span className=\"navbar-toggler-icon icon-bar\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse justify-content-center\">\r\n          <div className=\"input-group no-border\">\r\n            <i className=\"material-icons iconsearch\" onClick={() => Link(Codesearch)}>search</i>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control border-search\"\r\n              placeholder=\"Tìm kiếm mã vận đơn\"\r\n              value={Codesearch}\r\n              {...bindCodesearch}\r\n              onKeyPress={(e) => {\r\n                onKeyUp(e);\r\n              }}\r\n              style={{ width: \"350px\" }}\r\n            />\r\n          </div >\r\n        </div >\r\n        <div className=\"collapse navbar-collapse justify-content-end\" style={{ height: '35px' }}>\r\n          {CustomerGroup === 0 ? MenuNoGroup : MenuHaveGroup}\r\n        </div>\r\n      </div >\r\n    </nav >\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Categorys\\TimelineTransport.js",["1272","1273","1274","1275"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport {\r\n  ExportExcel,\r\n  Alertwarning,\r\n  GetCookie,\r\n} from \"../../Utils\";\r\nimport { SelectService, SelectCity } from \"../../Common\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\nimport { APIKey } from \"../../Services/Api\";\r\n\r\nexport const TimelineTransport = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button;\r\n  const history = useHistory();\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const [ServiceMeno, setServiceMeno] = useState(33);\r\n  const [CityMeno, setCityMeno] = useState(0);\r\n  const [Data, setData] = useState([]);\r\n\r\n  const [ShowTable, setShowTable] = useState(\"display-none\");\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  /* get list TimelineTransportList */\r\n\r\n  const APIC_spTimelineTransport = async () => {\r\n    debugger;\r\n    if (CityMeno === 0) {\r\n      Alertwarning(\"Vui lòng Chọn tỉnh đi\");\r\n      return;\r\n    } else if (ServiceMeno === 0) {\r\n      Alertwarning(\"Vui lòng Chọn dịch vụ\");\r\n      return;\r\n    }\r\n    setDisable(true);\r\n    try {\r\n      let params = {\r\n        CustomerId: CustomerID,\r\n        ServiceId: ServiceMeno,\r\n        IDGo_Province: CityMeno,\r\n      };\r\n      debugger;\r\n      let pr = {\r\n        Json: JSON.stringify(params),\r\n        func: \"APIC_spTimelineTransport\",\r\n        API_key: APIKey,\r\n        TokenDevices: \"website\",\r\n      };\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      setData(data);\r\n      setShowTable(\"\");\r\n    } catch (err) {\r\n      Alertwarning(\"Vui lòng liên hệ CSKH NETCO để biết thêm thông tin !\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n    setDisable(false);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      Header: \"Tỉnh đi\",\r\n      accessor: \"NameProvinceGo\",\r\n    },\r\n    {\r\n      Header: \"Tỉnh đến\",\r\n      accessor: \"NameToProvince\",\r\n      //Cell: obj => (<span className='btn btn-success'>{obj.value}</span>)\r\n    },\r\n    {\r\n      Header: \"Dịch vụ\",\r\n      accessor: \"ServiceName\",\r\n    },\r\n    {\r\n      Header: \"Thời gian\",\r\n      accessor: \"Hours\",\r\n      Cell: (obj) => (\r\n        <span>\r\n          {obj.value === 0\r\n            ? \"Liên hệ bộ phận CSKH NETCO để biết thêm thông tin\"\r\n            : obj.value + \" giờ\"}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const Excell = () => {\r\n    let arr = [];\r\n    arr.push({\r\n      NameProvinceGo: \"Tỉnh đi\",\r\n      NameToProvince: \"Tỉnh đến\",\r\n      ServiceName: \"Dịch vụ\",\r\n      Hours: \"Thời gian\",\r\n    });\r\n    Data.map((item, index) => {\r\n      arr.push(item);\r\n    });\r\n    ExportExcel(arr, \"Thời gian toàn trình phát theo dịch vụ\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row Formlading \">\r\n          <div className=\"col-md-12 margin-top-20 HomeTitle\">Toàn trình phát theo bưu cục</div>\r\n          <div className=\"col-md-6 margin-top-20 margin-bottom-20\">\r\n            <div className=\"row\">\r\n              <label className=\"margin-left-15\">\r\n                Tỉnh đi{\" \"}\r\n                <span className=\"red\">(*)</span>\r\n              </label>\r\n              <div className=\"col-md-12\">\r\n                <SelectCity\r\n                  onActive={CityMeno}\r\n                  onSelected={(item) => {\r\n                    setCityMeno(item.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 margin-top-20 margin-bottom-20\">\r\n            <div className=\"row\">\r\n              <label className=\"margin-left-15\">\r\n                Dịch vụ{\" \"}\r\n                <span className=\"red\">(*)</span>\r\n              </label>\r\n              <div className=\"col-md-12\">\r\n                <SelectService\r\n                  onActive={ServiceMeno}\r\n                  onSelected={(item) => {\r\n                    setServiceMeno(item.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"clearfix\"></div>\r\n\r\n        </div>\r\n        <div className=\"col-md-12  margin-top-10 text-center\">\r\n          <button\r\n            type=\"button\"\r\n            disabled={disable}\r\n            className=\"btn btn-save text-transform btn-sm\"\r\n            onClick={APIC_spTimelineTransport}\r\n          >\r\n            <i className=\"material-icons\">search</i>\r\n            Tìm kiếm\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={ShowTable + \" btn text-transform btn-refesh btn-sm\"}\r\n            onClick={() => {\r\n              Excell();\r\n            }}\r\n          >\r\n            <img src=\"../assets/img/iconexcel.png\" className='iconex' />\r\n            Xuất Excel\r\n          </button>\r\n        </div>\r\n        <div className={ShowTable + \" table-responsive Formlading col-md-12 mt10\"} style={{padding:'5px'}}>\r\n            <DataTable data={Data} columns={columns} />\r\n          </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Template\\FooterMenu.js",["1276","1277","1278","1279"],"import React, { useEffect } from \"react\";\r\n\r\nexport const FooterMenu = () => {\r\n  return (\r\n    <div className=\"text-center footer-custom\">\r\n      &copy;\r\n      {new Date().getFullYear()} All rights reserved. Powered by{\" \"}\r\n      <a href=\"https://netco.com.vn\" target=\"_blank\">\r\n        NETCO POST\r\n      </a>\r\n    </div>\r\n  );\r\n  {\r\n    /* <div className=\"main-panel\">\r\n            <footer className=\"footer\">\r\n                <div className=\"container-fluid\">\r\n                    <nav className=\"float-left\">\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"https://www.creative-tim.com\">\r\n                                    Creative Tim\r\n                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://creative-tim.com/presentation\">\r\n                                    About Us\r\n                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"http://blog.creative-tim.com\">\r\n                                    Blog\r\n                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://www.creative-tim.com/license\">\r\n                                    Licenses\r\n                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    <div className=\"copyright float-right\">\r\n                        &copy;\r\n            <script>\r\n                            document.write(new Date().getFullYear())\r\n            </script>, made with <i className=\"material-icons\">favorite</i> by\r\n            <a href=\"https://www.creative-tim.com\" target=\"_blank\">Creative Tim</a> for a better web.\r\n          </div>\r\n                </div>\r\n            </footer>\r\n        </div> */\r\n  }\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Categorys\\PostOfficeComponent.js",["1280","1281","1282","1283","1284","1285","1286","1287","1288"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport {  Alertwarning, GetCookie } from \"../../Utils\";\r\nimport { SelectCity } from \"../../Common\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport GoogleMap from \"google-map-react\";\r\nconst AnyReactComponent = ({ Name, Address, Phone }) => (\r\n  <div className=\"map-marker\">\r\n    <i className=\"fa fa-map-marker green\" style={{ fontSize: 30 }}></i>\r\n    <div className=\"map-tooltip\">\r\n      <span className=\"bold\" style={{ textTransform: \"uppercase\" }}>\r\n        {Name}\r\n      </span>{\" \"}\r\n      <br />\r\n      <span>\r\n        <i className=\"fa fa-map-marker green\"></i> {Address}\r\n      </span>\r\n      <br />\r\n      <span>\r\n        <i className=\"fa fa-phone green\"></i> {Phone}\r\n      </span>\r\n    </div>\r\n  </div>\r\n);\r\nexport const PostOfficeComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button;\r\n  const history = useHistory();\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const [ServiceMeno, setServiceMeno] = useState({\r\n    value: 0,\r\n    label: \"Chọn dịch vụ\",\r\n  });\r\n  const [CityMeno, setCityMeno] = useState({\r\n    value: 0,\r\n    label: \"Chọn tỉnh thành\",\r\n  });\r\n  const [Data, setData] = useState([]);\r\n  const [DataFilter, setDataFilter] = useState([]);\r\n\r\n  /* run after render */\r\n  useEffect(() => {\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const _Init = async () => {\r\n    try {\r\n      debugger;\r\n      let pr = {\r\n        Json: \"\",\r\n        func: \"APIC_spPostOffice_GetMany\",\r\n      };\r\n      const data = await mainAction.API_spCallServer(pr, dispatch);\r\n      setData(\r\n        data.filter(\r\n          (p) =>\r\n            (p.Types === 1 || p.Types === 2) &&\r\n            p.Lat !== null &&\r\n            p.Lng !== null &&\r\n            p.Lat !== 0 &&\r\n            p.Lng !== 0\r\n        )\r\n      );\r\n      setDataFilter(data.filter((p) => p.Types === 1 || p.Types === 2));\r\n    } catch (err) {\r\n      Alertwarning(\"Vui lòng liên hệ CSKH NETCO để biết thêm thông tin !\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n    setDisable(false);\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  const onFilterPO = (CityId) => {\r\n    setDataFilter(Data.filter((p) => p.LocationId === CityId || CityId === 0));\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row HomeTitle cardcus\">Hệ thống bưu cục</div>\r\n        <div className=\"row cardcus margin-top-20\">\r\n          <div className=\"col-md-12 bold  margin-bottom-20\">\r\n            {Data.length} chi nhánh / bưu cục trên toàn quốc\r\n          </div>\r\n          <div className=\"col-md-5 bormap\">\r\n            <div className=\"\">\r\n              <div className=\"form-group padding-10\" style={{ marginTop: 0 }}>\r\n                <SelectCity\r\n                  IsActive={CityMeno}\r\n                  onSelected={(item) => {\r\n                    setCityMeno(item);\r\n                    onFilterPO(item.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div\r\n                className=\"scroller\"\r\n                style={{ maxHeight: \"calc(100vh - 230px)\", padding: '10px' }}\r\n              >\r\n                {DataFilter.map((item, index) => {\r\n                  return (\r\n                    <div className=\"col-md-12 bg-gray\" key={index}>\r\n                      <span\r\n                        className=\"maptilte\"\r\n                       /*  style={{ textTransform: \"uppercase\" }} */\r\n                      >\r\n                        {index + 1}.{item.POName}\r\n                      </span>{\" \"}\r\n                     {/*  <span onClick={onFilterPO(item.LocationId)}>Tìm đường đi</span> */}\r\n                      <br />\r\n                      <span className='margin-top-20 mapcontent'>\r\n                      <img src=\"https://netco.com.vn/assets/img/icon24/phone.png\" className='margin-right-5' width=\"14\" /> {item.POPhone}\r\n                      </span>\r\n                      <br />\r\n                      <div className='mapcontent'>\r\n                      <img src=\"https://netco.com.vn/assets/img/icon24/location.png\" className='margin-right-5' width=\"14\" />{\" \"}\r\n                        <span>{item.POAddress} </span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-7 text-center\">\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"calc(100vh - 155px)\",\r\n              }}\r\n            >\r\n              <GoogleMap\r\n                apiKey={\"AIzaSyBUBW5JbPqpurOUq2iV3Ys3rx59IktH1-s\"}\r\n                center={[10.775869, 106.688661]}\r\n                zoom={6}\r\n              >\r\n                {DataFilter.filter(\r\n                  (p) =>\r\n                    p.Lat !== null &&\r\n                    p.Lng !== null &&\r\n                    p.Lat !== 0 &&\r\n                    p.Lng !== 0\r\n                ).map((item, index) => {\r\n                  return (\r\n                    <AnyReactComponent\r\n                      key={index}\r\n                      lat={item.Lat}\r\n                      lng={item.Lng}\r\n                      Name={item.POName}\r\n                      Address={item.POAddress}\r\n                      Phone={item.POPhone}\r\n                    />\r\n                  );\r\n                })}\r\n              </GoogleMap>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Categorys\\LadingPrintFromExcelAveryComponent.js",["1289","1290","1291","1292","1293","1294","1295","1296","1297"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Alerterror,\r\n  FormatDate,\r\n  FormatDateJson,\r\n  GetCookie,\r\n} from \"../../Utils\";\r\nimport { Lading } from \"../../Redux/Actions/Category\";\r\nimport { APIKey, TOKEN_DEVICE } from \"../../Services/Api\";\r\nimport { useInput } from \"../../Hooks\";\r\n\r\nexport const LadingPrintFromExcelAveryComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(true); // disable button\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  const history = useHistory();\r\n\r\n  const [ShowList, setShowList] = useState(\"display-none\");\r\n  const [ShowForm, setShowForm] = useState(\"\");\r\n  const [FileUpload, setFileUpload] = useState({file:{}});\r\n  const [UploadError, setUploadError] = useState(\"\");\r\n  const [LadingList, setLadingList] = useState([]);\r\n  const [TotalSheet, bindTotalSheet, setTotalSheet] = useInput(1);\r\n  const TotalSheetRef = useRef();\r\n\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n  }, []);\r\n\r\n  const [ShowUploadFile, setShowUploadFile] = useState(\"\");\r\n  const [ShowListFile, setShowListFile] = useState(\"display-none\");\r\n\r\n  const onFileChange = (event) => {\r\n    if (event.target.files !== null) {\r\n      setFileUpload({file: event.target.files[0]});\r\n      setShowUploadFile(\"display-none\");\r\n      setShowListFile(\"\");\r\n    }\r\n  };\r\n\r\n  const onFileUpload = async () => {\r\n    // Create an object of formData\r\n    const formData = new FormData();\r\n    formData.append(\"CustomerID\", CustomerID);\r\n    formData.append(\"AppAPIKey\", APIKey);\r\n    formData.append(\"TokenDevice\", TOKEN_DEVICE);\r\n    // Update the formData object\r\n    formData.append(\"myFile\", FileUpload.file, FileUpload.file.name);\r\n\r\n    // Request made to the backend api\r\n    // Send formData object\r\n    const data = await Lading.APIC_LadingPrintBillExcel(formData, dispatch);\r\n    setUploadError(data.localMessage);\r\n    if (data.resultCode === 0) {\r\n      //Alertsuccess(\"Thành công\");\r\n      debugger\r\n      setLadingList(JSON.parse(data.data));\r\n      console.log(\"data print\", data.data)\r\n      setShowList(\"\");\r\n      setShowForm(\"display-none\");\r\n      setShowUploadFile(\"\");\r\n      setShowListFile(\"display-none\");\r\n      //PaginationTable();\r\n    }\r\n  };\r\n\r\n  const [Checked, setChecked] = useState(false);\r\n  const [IsChecked, setIsChecked] = useState(false);\r\n  const [State, setState] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    let list = [...LadingList];\r\n    let allChecked = IsChecked;\r\n    if (e.target.value === \"checkAll\") {\r\n      setIsChecked(!IsChecked);\r\n      list.forEach((item) => {\r\n        item.IsPrint = e.target.checked;\r\n        allChecked = e.target.checked;\r\n      });\r\n    } else {\r\n      list.find((item) => item.No === parseInt(e.target.value)).IsPrint =\r\n        e.target.checked;\r\n    }\r\n    setState({ list: LadingList, allChecked: Checked });\r\n  };\r\n\r\n  const PrintBill = async () => {\r\n    let _htmlprint = \"\";\r\n    LadingList.map((item, index) => {\r\n      if (item.IsPrint === true) {\r\n        for (var i = 0; i < parseInt(TotalSheet); i++) {\r\n          _htmlprint += `<div style=\"width:720px;height: 1050px;page-break-before: always;border:2px solid #000\">\r\n                        <table style=\"width:100%;margin-top: 5px;max-height:90px;\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style=\"vertical-align:top;width:200px;\">\r\n                                        <table style=\"font-size:16px;margin-left:5px;width:200px;\">\r\n                                            <tbody>\r\n                                                <tr><td><img src=\"/assets/img/LogoNetco.png\" style=\"width:180px;\"></td></tr>\r\n                                                <tr><td style=\"padding-left:12px;font-style:italic;font-size:14px;\">Ngày in: ${FormatDateJson(\r\n                                                  new Date(),\r\n                                                  \"d/M/y H:m\"\r\n                                                )}</td></tr>\r\n                                                <tr><td style=\"padding-left:60px;font-style:italic;font-size:14px;\">Liên ${\r\n                                                  i + 1\r\n                                                }</td></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                    <td>\r\n                                      <table style=\"width:100%;font-weight:600;text-align:center;\">\r\n                                          <tr>\r\n                                              <td><div style=\"width: 100%;display:inline-block;height:80px;text-align:center;\"><div style=\"font-family: 'Libre Barcode 128 Text';font-size: 80px;font-weight:200\">${\r\n                                                item.Bill\r\n                                              }</div></div></td>\r\n                                          </tr>\r\n                                      </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <table style=\"width:100%;border-top-style: solid;border-top-width: 1px;\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td class=\"table-vertical\" style=\"width:50%;vertical-align:top;border-right-style: dashed;border-right-width: 1px;\">\r\n                                        <table style=\"font-size:18px;\">\r\n                                            <tbody>\r\n                                                <tr><td colspan=\"2\"><b>THÔNG TIN NGƯỜI GỬI<b></b></b></td></tr>\r\n                                                <tr><td><b>Công ty: </b>AVERY DENNISON RIS VIET NAM CO., LIMITED -LONG HẬU</td></tr>\r\n                                                <tr><td><b>Địa chỉ: </b>Lot E01 Trung Tam Road, LHIP, Can Giuoc,Long An, Vietnam</td></tr>\r\n                                                <tr><td><b>Điện thoại: </b>028 37763336 Ext.3409 (Mr.Khanh)</td></tr>\r\n                                                <tr><td><b>Ngày gửi: </b>${FormatDate(\r\n                                                  item.Date,\r\n                                                  \"d-k-y\"\r\n                                                )}</td></tr>\r\n                                                <tr><td style=\"height:50px;\"><b>Ký gửi:</b></td></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                    <td class=\"table-vertical\" style=\"width:50%;vertical-align: top;padding-left: 5px;\">\r\n                                        <table style=\"font-size:18px;\">\r\n                                            <tbody>\r\n                                                <tr><td colspan=\"2\"><b>THÔNG TIN NGƯỜI NHẬN</b></td></tr>\r\n                                                <tr><td><b>Công ty: </b>${\r\n                                                  item.Customer\r\n                                                }</td></tr>\r\n                                                <tr><td style=\"word-wrap: break-word;max-width: 300px;overflow: hidden;min-height: 100px;\"><b>Địa chỉ: </b>${\r\n                                                  item.Address\r\n                                                }</td></tr>\r\n                                                <tr><td><b>ATTN: </b>${\r\n                                                  item.Attn\r\n                                                }</td></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table><table style=\"width:100%;border-top-style: solid;border-top-width: 1px;\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td class=\"table-vertical\" style=\"width:50%;vertical-align:top;border-right-style: dashed;border-right-width: 1px;\">\r\n                                        <table style=\"font-size:18px;\">\r\n                                            <tbody>\r\n                                                <tr><td colspan=\"2\"><b>THÔNG TIN ĐƠN HÀNG<b></b></b></td></tr>\r\n                                                <tr><td><b>Kí hiệu: </b>${\r\n                                                  item.FileScan\r\n                                                }</td></tr>\r\n                                                <tr><td><b>Số kiện: </b>${\r\n                                                  item.CartonSide\r\n                                                }</td></tr>\r\n                                                <tr><td><b>Số kg: </b>${\r\n                                                  item.Kg\r\n                                                }</td></tr>\r\n                                                <tr><td><b>Số lượng DN: </b>${\r\n                                                  item.TotalDN\r\n                                                }</td></tr>\r\n                                                <tr><td><b>Yêu cầu đặc biệt: </b>${\r\n                                                  item.Keeper\r\n                                                }</td></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                    <td class=\"table-vertical\" style=\"width:50%;vertical-align: top;padding-left: 5px;\">\r\n                                        <table style=\"font-size:18px;\">\r\n                                            <tbody>\r\n                                                <tr><td colspan=\"2\"><b>DỊCH VỤ</b></td></tr>\r\n                                                <tr>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">Phát 60 phút</label></td>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">PTN</label></td></tr>\r\n                                                <tr>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">PT 9:00 AM</label></td>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">CPN</label></td></tr>\r\n                                                <tr>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">PT 10:00 AM</label></td>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">Phát 60h</label></td></tr>\r\n                                                <tr>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">PT 12:00 AM</label></td>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">Tiết kiệm</label></td></tr>\r\n                                                <tr>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">PT 16:00 PM</label></td>   <td><label class=\"checkbox-inline nowrap\"><input type=\"checkbox\">Khác</label></td></tr>\r\n                                                <tr>\r\n                                                    <td><label class=\"checkbox-inline nowrap\" colspan=\"2\"><input type=\"checkbox\">Người nhận TT</label></td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <table style=\"width:100%;border-top-style: solid;border-top-width: 1px;\">\r\n                            <tbody>\r\n                                <tr><td style=\"padding-bottom: 5px;padding-top:5px;\"><b>GHI CHÚ<b></b></b></td></tr>\r\n                                <tr><td style=\"word-wrap: break-word;overflow: hidden;height: 50px;vertical-align:top;\">${\r\n                                  item.Notes\r\n                                }</td></tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <table style=\"width:100%;border-top-style: solid;border-top-width: 1px; padding-top:10px\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td class=\"table-vertical\" style=\"width:50%;vertical-align:top;\">\r\n                                        <table style=\"font-size:18px;width:100%;\">\r\n                                            <tbody>\r\n                                                <tr><td style=\"text-align:center;\">Ngày ........ / ........ / ${FormatDateJson(\r\n                                                  new Date(),\r\n                                                  \"y\"\r\n                                                )}</td></tr>\r\n                                                <tr><td style=\"text-align:center;\"><b>Nhân viên phát</b><br>(Ký và ghi rõ họ tên)</td></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                    <td class=\"table-vertical\" style=\"width:50%;vertical-align:top;height:210px;\">\r\n                                        <table style=\"font-size:18px;width:100%;\">\r\n                                            <tbody>\r\n                                                <tr><td style=\"text-align:center;\">Ngày ......./......./ ${FormatDateJson(\r\n                                                  new Date(),\r\n                                                  \"y\"\r\n                                                )}</td></tr>\r\n                                                <tr><td style=\"text-align:center;\"><b>Ký nhận: </b><br>(Ký và ghi rõ họ tên)</td><td><br><br><br></td></tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div style=\"text-align:center\"><b><i>Lưu ý : Nếu hàng hóa có dấu hiệu bất thường vui lòng ghi rõ vào bên trên</i></b></div>\r\n                        <div style=\"text-align:center\"><i>Hotline hỗ trợ: +84.938.53.22.26 (Ms.Hiền)</i></div>\r\n                    </div>`;\r\n        }\r\n      }\r\n    });\r\n    if (_htmlprint === \"\") {\r\n      Alerterror(\"Chưa chọn dữ liệu in\");\r\n    } else {\r\n      let myWindow = window.open(\"\", \"_blank\");\r\n      myWindow.document.write(\r\n        '<html><link href=\"https://fonts.googleapis.com/css?family=Libre Barcode 128 Text\" rel=\"stylesheet\"><body style=\"margin:0\">' +\r\n          _htmlprint +\r\n          '<script type=\"text/javascript\">window.focus(); setTimeout(function() { window.print();window.close(); }, 1000);</script></body></html>'\r\n      );\r\n    }\r\n  };\r\n\r\n  const Cancel = () => {\r\n    setLadingList([]);\r\n    //PaginationTable();\r\n    setShowList(\"display-none\");\r\n    setShowForm(\"\");\r\n    setShowUploadFile(\"\");\r\n    setShowListFile(\"display-none\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-panel\">\r\n      <div className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header card-header-primary\">\r\n                  <div className=\"pull-left\">\r\n                    <h4 className=\"card-title\">\r\n                      <i className=\"material-icons\">bubble_chart</i> Avery - In\r\n                      bill\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"pull-right\">\r\n                    <Link\r\n                      className=\"titleButton\"\r\n                      download\r\n                      target=\"_blank\"\r\n                      to=\"/assets/exceltemp/MauVanDonInAvery.xlsx\"\r\n                    >\r\n                      <i className=\"material-icons\">download</i> Tải file mẫu\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <form className=\"form-horizontal\">\r\n                    <div className={ShowForm + \" row\"}>\r\n                      <div className=\"col-md-3\"></div>\r\n                      <div className={ShowUploadFile + \" col-md-6\"}>\r\n                        <div className=\"uploadFileContainer text-center\">\r\n                          <span>\r\n                            <i className=\"material-icons size40\">\r\n                              cloud_upload\r\n                            </i>\r\n                          </span>\r\n                          <span>Upload a File</span>\r\n                          <span className=\"font-normal\">Choose a file</span>\r\n                          {/* <span className=\"font-normal\">{FileUpload.name}</span> */}\r\n                          <input\r\n                            type=\"file\"\r\n                            className=\"fileUploadHidden\"\r\n                            onChange={onFileChange}\r\n                            onClick={(e) => {\r\n                              e.target.value = null;\r\n                            }}\r\n                            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                          />\r\n                          {/* <input multiple=\"multiple\" class=\"fileupload-input\" id=\"input_5\" type=\"file\" name=\"file\" aria-labelledby=\"label_5\" aria-hidden=\"true\" tabindex=\"-1\" /> */}\r\n                        </div>\r\n                      </div>\r\n                      <div className={ShowListFile + \" col-md-6\"}>\r\n                        <div\r\n                          className={\r\n                            FileUpload.file !== {}\r\n                              ? \"fileNameUpload\"\r\n                              : \"fileNameUpload display-none\"\r\n                          }\r\n                        >\r\n                          <span className=\"fileNameUpload\">\r\n                            {FileUpload.file !== {} && FileUpload.file !== []\r\n                              ? FileUpload.file.name\r\n                              : \"\"}\r\n                          </span>\r\n                          <i\r\n                            className=\"material-icons pull-right pointer\"\r\n                            title=\"Xóa file\"\r\n                            onClick={(e) => {\r\n                              setFileUpload({ file: {} });\r\n                              setShowUploadFile(\"\");\r\n                              setShowListFile(\"display-none\");\r\n                            }}\r\n                          >\r\n                            delete\r\n                          </i>\r\n                          <span className=\"pull-right\">\r\n                            {\"(\" +\r\n                              (FileUpload.file.size / 1024).toFixed(2) +\r\n                              \"KB)\"}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            disabled={!disable}\r\n                            onClick={onFileUpload}\r\n                          >\r\n                            <i className=\"material-icons\">cloud_upload</i> TẢI\r\n                            LÊN\r\n                          </button>\r\n                        </div>\r\n                        {/* <div className=\"errorUpload\">{UploadError}</div> */}\r\n                      </div>\r\n                      <div className=\"col-md-3\"></div>{\" \"}\r\n                    </div>\r\n                    <div className=\"clearfix\"></div>\r\n                  </form>\r\n                  <div className={ShowList + \" row\"}>\r\n                    <div className=\"col-md-12 text-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control height60\"\r\n                        ref={TotalSheetRef}\r\n                        value={TotalSheet}\r\n                        {...bindTotalSheet}\r\n                        min=\"1\"\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-default pull-right\"\r\n                        onClick={Cancel}\r\n                      >\r\n                        <i className=\"material-icons\">undo</i>\r\n                        Hủy\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger pull-right\"\r\n                        disabled={!disable}\r\n                        onClick={PrintBill}\r\n                      >\r\n                        <i className=\"material-icons\">check</i> Xác nhận in\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"col-md-12 mt30\">\r\n                      <div className=\"table-responsive\">\r\n                        <table id=\"dataTable\" className=\"table text-center\">\r\n                          <thead className=\" text-primary\">\r\n                            <tr>\r\n                              <th class=\"table-checkbox\">\r\n                                <div className=\"form-check\">\r\n                                  <label className=\"form-check-label\">\r\n                                    <input\r\n                                      className=\"form-check-input\"\r\n                                      type=\"checkbox\"\r\n                                      value=\"checkAll\"\r\n                                      checked={IsChecked}\r\n                                      onChange={handleChange}\r\n                                    />\r\n                                    <span className=\"form-check-sign\">\r\n                                      <span className=\"check\"> </span>\r\n                                    </span>\r\n                                  </label>\r\n                                </div>\r\n                              </th>\r\n                              <th>NO</th>\r\n                              <th>DATE</th>\r\n                              <th>CUSTOMER</th>\r\n                              <th>ADDRESS</th>\r\n                              <th>CARTON SIDE</th>\r\n                              <th>SERVICE</th>\r\n                              <th>KEEPER</th>\r\n                              <th>DELIVERY NUMBER</th>\r\n                              <th>NOTES</th>\r\n                              <th>BILL</th>\r\n                              <th>ATTN</th>\r\n                              <th>KG</th>\r\n                              <th>FILE SCAN</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            { LadingList.map((item, index) => {\r\n                              debugger\r\n                              return (\r\n                                <tr key={index}>\r\n                                  <td class=\"table-checkbox\">\r\n                                    <div className=\"form-check\">\r\n                                      <label className=\"form-check-label\">\r\n                                        <input\r\n                                          className=\"form-check-input\"\r\n                                          type=\"checkbox\"\r\n                                          value={item.No}\r\n                                          checked={item.IsPrint}\r\n                                          onChange={handleChange}\r\n                                        />\r\n                                        <span className=\"form-check-sign\">\r\n                                          <span className=\"check\"></span>\r\n                                        </span>\r\n                                      </label>\r\n                                    </div>\r\n                                  </td>\r\n                                  <td>{index + 1}</td>\r\n                                  <td>{FormatDate(item.Date, \"d-k-y\")}</td>\r\n                                  <td>{item.Customer}</td>\r\n                                  <td>{item.Address}</td>\r\n                                  <td>{item.CartonSide}</td>\r\n                                  <td>{item.DichVu}</td>\r\n                                  <td>{item.Keeper}</td>\r\n                                  <td>{item.TotalDN}</td>\r\n                                  <td>{item.Notes}</td>\r\n                                  <td>{item.Bill}</td>\r\n                                  <td>{item.Attn}</td>\r\n                                  <td>{item.Kg}</td>\r\n                                  <td>{item.FileScan}</td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Component\\Categorys\\GetLadingTemporary.js",["1298","1299","1300"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { mainAction } from \"../../Redux/Actions\";\r\nimport {\r\n  PaginationTable2,\r\n  FormatDateJson,\r\n  FormatMoney,\r\n  Alerterror,\r\n  GetCookie,\r\n} from \"../../Utils\";\r\nimport { ExportExcel } from \"../../Utils/ExportExcel\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DataTable } from \"../../Common/DataTable\";\r\n\r\nexport const GetLadingTemporary = () => {\r\n  const dispatch = useDispatch();\r\n  const [disable, setDisable] = useState(false); // disable button;\r\n  const history = useHistory();\r\n  const [CustomerID, setCustomerID] = useState(GetCookie(\"CustomerID\"));\r\n  /* run after render */\r\n  useEffect(() => {\r\n    //GET CUSTOMER INFO FROM COOKIE\r\n    if (CustomerID === null)\r\n      history.push(\"/\");\r\n    _Init();\r\n  }, []);\r\n\r\n  const _Init = async () => {\r\n    setDisable(false);\r\n    let params = {\r\n      Json: '{\"CustomerId\":' + CustomerID + \"}\",\r\n      func: \"APIC_spLadingTemporaryReport\",\r\n    };\r\n\r\n    try {\r\n      //const data = await LadingTemporaryAction.CTM_spGetLadingTemporary(params, dispatch);\r\n      const data = await mainAction.API_spCallServer(params, dispatch);\r\n      setLadingTemporarylist(data);\r\n      PaginationTable2();\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n  };\r\n\r\n  /* get list TimelineTransportList */\r\n  const [LadingTemporarylist, setLadingTemporarylist] = useState([]);\r\n  const [LadingDetailTemporarylist, setLadingDetailTemporarylist] = useState(\r\n    []\r\n  );\r\n  const [hiddenTable, setHiddenTable] = useState(true);\r\n\r\n  const APIC_spLadingTemporaryDetail = async (item) => {\r\n    let params = {\r\n      Json: '{\"CustomerId\":' + CustomerID + \"}\",\r\n      func: \"APIC_spLadingTemporaryDetail\",\r\n    };\r\n    debugger;\r\n    try {\r\n      const data = await mainAction.API_spCallServer(params, dispatch);\r\n      setLadingDetailTemporarylist(data);\r\n      PaginationTable2();\r\n    } catch (err) {\r\n      Alerterror(\"Vui lòng liên hệ bộ phận chăm sóc khách hàng Netco\");\r\n      console.log(\"Eror\", err);\r\n    }\r\n\r\n    mainAction.LOADING({ IsLoading: false }, dispatch);\r\n    setHiddenTable(false);\r\n  };\r\n\r\n  const undo = () => {\r\n    setHiddenTable(true);\r\n  };\r\n\r\n  const columnBk = [\r\n    {\r\n      Header: \"Tùy chọn\",\r\n      maxWidth: 90,\r\n      Cell: ({ row }) => (\r\n        <i className=\"material-icons fontsizeicon14 green button\" onClick={() => APIC_spLadingTemporaryDetail(row)}>remove_red_eye</i>\r\n      ),\r\n    },\r\n    {\r\n      Header: \"Từ ngày\",\r\n      accessor: \"FromDate\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n    },\r\n    {\r\n      Header: \"Đến ngày\",\r\n      accessor: \"ToDate\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n    },\r\n    {\r\n      Header: \"Nhân viên công nợ\",\r\n      accessor: \"OfficerName\",\r\n      minWidth: 250,\r\n    },\r\n    {\r\n      Header: \"Tổng vận đơn\",\r\n      accessor: \"TotalBill\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)}</span>,\r\n    },\r\n    {\r\n      Header: \"Tổng tiền\",\r\n      accessor: \"TotalMoney\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n    },\r\n    {\r\n      Header: \"Tổng tiền giảm\",\r\n      accessor: \"DiscountAmount\",\r\n      Cell: (item) => <span>{FormatMoney(item.value)} đ</span>,\r\n    },\r\n  ];\r\n\r\n  const columnDetails = [\r\n    {\r\n      Header: \"STT\",\r\n      Cell: (item) => <span>{item.index + 1}</span>,\r\n      maxWidth: 70,\r\n    },\r\n    {\r\n      Header: \"Mã vận đơn\",\r\n      accessor: \"Code\",\r\n      minWidth: 150,\r\n    },\r\n    {\r\n      Header: \"Tỉnh đi\",\r\n      accessor: \"CitySendCode\",\r\n    },\r\n    {\r\n      Header: \"Tỉnh đến\",\r\n      accessor: \"CityRecipientCode\",\r\n    },\r\n    {\r\n      Header: \"Thời gian gửi\",\r\n      accessor: \"CreateDate\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n    },\r\n    {\r\n      Header: \"Ước tính nhận\",\r\n      accessor: \"DealineTime\",\r\n      Cell: (item) => <span>{FormatDateJson(item.value)}</span>,\r\n    },\r\n    {\r\n      Header: \"Dịch vụ\",\r\n      accessor: \"ServiceName\",\r\n    },\r\n    {\r\n      Header: \"Tình trạng\",\r\n      accessor: \"StatusName\",\r\n    },\r\n    {\r\n      Header: \"Trọng lượng\",\r\n      accessor: \"Weight\",\r\n    },\r\n    {\r\n      Header: \"Số kiện\",\r\n      accessor: \"Number\",\r\n    },\r\n  ];\r\n\r\n  const ExportToExcel = () => {\r\n    if (LadingDetailTemporarylist.length > 0) {\r\n      let dataExcel = LadingDetailTemporarylist.map((item, index) => {\r\n        return {\r\n          \"Mã vận đơn\": item.Code,\r\n          \"Tỉnh đi\": item.CitySendCode,\r\n          \"Tỉnh đến\": item.CityRecipientCode,\r\n          \"Thời gian tạo\": FormatDateJson(item.CreateDate),\r\n          \"Ngày phát thành công\": item.FinishDate=== undefined?\"\": FormatDateJson(item.FinishDate),\r\n          \"Dịch vụ\": item.ServiceName,\r\n          \"Trạng thái\": item.StatusName,\r\n          \"Trọng lượng\": FormatMoney(item.Weight),\r\n          \"Số kiện\": item.Number,\r\n          \"Tiền thu hộ\": FormatMoney(item.COD),\r\n          \"Tổng cước phí\": FormatMoney(item.Amount),\r\n          \"Hình thức thanh toán\": item.PaymentString,\r\n          \"Người nhận\": item.RecipientName,\r\n          \"SđT người nhận\": item.RecipientPhone,\r\n          \"Công ty nhận\": item.RecipientCompany,\r\n          \"Địa chỉ người nhận\": item.RecipientAddress,\r\n        }\r\n      });\r\n      ExportExcel(\r\n        dataExcel,\r\n        \"Danh sách vận đơn công nợ tạm tính\"\r\n      );\r\n    } else {\r\n      Alerterror(\"Không có dữ liệu để xuất. Vui lòng tìm kiếm trước !\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div\r\n          className={\r\n            hiddenTable === true ? \"row cardcus display-block\" : \"row display-none\"\r\n          }\r\n        >\r\n          <div className=\"col-md-12 HomeTitle margin-bottom-20\">Công nợ tạm tính</div>\r\n          <div className=\"col-md-12\">\r\n            <DataTable data={LadingTemporarylist} columns={columnBk} />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            hiddenTable === false ? \"row cardcus display-block\" : \"row display-none\"\r\n          }\r\n        >\r\n          <div className=\"col-md-12 HomeTitle margin-bottom-20\">Chi tiết công nợ tạm tính\r\n            <div className=\"pull-right\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn text-transform btn-save btn-sm\"\r\n                disabled={disable}\r\n                onClick={() => undo()}\r\n              >\r\n                <i className=\"material-icons\">undo</i>\r\n                Quay Lại\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={ExportToExcel}\r\n                className=\"btn btn-sm text-transform btn-refesh margin-left-10\"\r\n                style={{ margin: \"0 5px\" }}\r\n              >\r\n                <img src=\"../assets/img/iconexcel.png\" className='iconex' />\r\n                Xuất Excel\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <DataTable\r\n              data={LadingDetailTemporarylist}\r\n              columns={columnDetails}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\ServiceType.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\Service.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\Lading.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\LadingType.js",[],"D:\\ErpNew\\Webcustomer\\src\\Utils\\RegExpAddress.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\LocationType.js",[],"D:\\ErpNew\\Webcustomer\\src\\Redux\\Actions\\Category\\Location.js",[],{"ruleId":"1301","replacedBy":"1302"},{"ruleId":"1303","replacedBy":"1304"},{"ruleId":"1305","severity":1,"message":"1306","line":1,"column":40,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":48},{"ruleId":"1305","severity":1,"message":"1309","line":5,"column":10,"nodeType":"1307","messageId":"1308","endLine":5,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1310","line":20,"column":3,"nodeType":"1307","messageId":"1308","endLine":20,"endColumn":26},{"ruleId":"1305","severity":1,"message":"1311","line":34,"column":3,"nodeType":"1307","messageId":"1308","endLine":34,"endColumn":17},{"ruleId":"1312","severity":1,"message":"1313","line":91,"column":17,"nodeType":"1314","messageId":"1315","endLine":93,"endColumn":11},{"ruleId":"1312","severity":1,"message":"1313","line":104,"column":84,"nodeType":"1314","messageId":"1315","endLine":108,"endColumn":11},{"ruleId":"1312","severity":1,"message":"1313","line":124,"column":97,"nodeType":"1314","messageId":"1315","endLine":129,"endColumn":11},{"ruleId":"1312","severity":1,"message":"1313","line":131,"column":93,"nodeType":"1314","messageId":"1315","endLine":135,"endColumn":11},{"ruleId":"1312","severity":1,"message":"1313","line":144,"column":72,"nodeType":"1314","messageId":"1315","endLine":148,"endColumn":11},{"ruleId":"1312","severity":1,"message":"1313","line":151,"column":62,"nodeType":"1314","messageId":"1315","endLine":154,"endColumn":9},{"ruleId":"1305","severity":1,"message":"1316","line":4,"column":10,"nodeType":"1307","messageId":"1308","endLine":4,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1317","line":5,"column":10,"nodeType":"1307","messageId":"1308","endLine":5,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1318","line":15,"column":20,"nodeType":"1307","messageId":"1308","endLine":15,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1319","line":36,"column":27,"nodeType":"1307","messageId":"1308","endLine":36,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1321","line":51,"column":6,"nodeType":"1322","endLine":51,"endColumn":25,"suggestions":"1323"},{"ruleId":"1305","severity":1,"message":"1318","line":12,"column":20,"nodeType":"1307","messageId":"1308","endLine":12,"endColumn":30},{"ruleId":"1320","severity":1,"message":"1324","line":20,"column":6,"nodeType":"1322","endLine":20,"endColumn":8,"suggestions":"1325"},{"ruleId":"1320","severity":1,"message":"1326","line":29,"column":6,"nodeType":"1322","endLine":29,"endColumn":16,"suggestions":"1327"},{"ruleId":"1305","severity":1,"message":"1328","line":3,"column":23,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":34},{"ruleId":"1305","severity":1,"message":"1329","line":4,"column":10,"nodeType":"1307","messageId":"1308","endLine":4,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1330","line":6,"column":10,"nodeType":"1307","messageId":"1308","endLine":6,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1331","line":7,"column":10,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1332","line":8,"column":10,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1333","line":8,"column":18,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1334","line":20,"column":20,"nodeType":"1307","messageId":"1308","endLine":20,"endColumn":31},{"ruleId":"1305","severity":1,"message":"1335","line":21,"column":22,"nodeType":"1307","messageId":"1308","endLine":21,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1336","line":52,"column":6,"nodeType":"1322","endLine":52,"endColumn":8,"suggestions":"1337"},{"ruleId":"1320","severity":1,"message":"1338","line":62,"column":6,"nodeType":"1322","endLine":62,"endColumn":16,"suggestions":"1339"},{"ruleId":"1320","severity":1,"message":"1340","line":68,"column":14,"nodeType":"1314","endLine":68,"endColumn":15},{"ruleId":"1320","severity":1,"message":"1341","line":78,"column":6,"nodeType":"1322","endLine":78,"endColumn":20,"suggestions":"1342"},{"ruleId":"1305","severity":1,"message":"1319","line":88,"column":27,"nodeType":"1307","messageId":"1308","endLine":88,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1343","line":2,"column":8,"nodeType":"1307","messageId":"1308","endLine":2,"endColumn":14},{"ruleId":"1320","severity":1,"message":"1344","line":11,"column":5,"nodeType":"1322","endLine":11,"endColumn":7,"suggestions":"1345"},{"ruleId":"1320","severity":1,"message":"1346","line":22,"column":21,"nodeType":"1347","endLine":22,"endColumn":34},{"ruleId":"1320","severity":1,"message":"1346","line":26,"column":24,"nodeType":"1347","endLine":26,"endColumn":37},{"ruleId":"1305","severity":1,"message":"1348","line":1,"column":28,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1343","line":2,"column":8,"nodeType":"1307","messageId":"1308","endLine":2,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1349","line":3,"column":8,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1350","line":1,"column":17,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":26},{"ruleId":"1305","severity":1,"message":"1348","line":1,"column":28,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1343","line":2,"column":8,"nodeType":"1307","messageId":"1308","endLine":2,"endColumn":14},{"ruleId":"1351","severity":1,"message":"1352","line":11,"column":25,"nodeType":"1353","endLine":11,"endColumn":94},{"ruleId":"1305","severity":1,"message":"1332","line":3,"column":10,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1333","line":3,"column":18,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1335","line":19,"column":22,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":35},{"ruleId":"1354","severity":1,"message":"1355","line":22,"column":39,"nodeType":"1356","messageId":"1357","endLine":22,"endColumn":41},{"ruleId":"1320","severity":1,"message":"1358","line":24,"column":6,"nodeType":"1322","endLine":24,"endColumn":28,"suggestions":"1359"},{"ruleId":"1351","severity":1,"message":"1352","line":600,"column":21,"nodeType":"1353","endLine":603,"endColumn":23},{"ruleId":"1351","severity":1,"message":"1352","line":621,"column":21,"nodeType":"1353","endLine":624,"endColumn":23},{"ruleId":"1351","severity":1,"message":"1352","line":642,"column":21,"nodeType":"1353","endLine":645,"endColumn":23},{"ruleId":"1351","severity":1,"message":"1352","line":667,"column":21,"nodeType":"1353","endLine":670,"endColumn":23},{"ruleId":"1305","severity":1,"message":"1328","line":3,"column":23,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":34},{"ruleId":"1305","severity":1,"message":"1329","line":4,"column":10,"nodeType":"1307","messageId":"1308","endLine":4,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1330","line":6,"column":10,"nodeType":"1307","messageId":"1308","endLine":6,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1331","line":7,"column":10,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1332","line":8,"column":10,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1333","line":8,"column":18,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1360","line":16,"column":9,"nodeType":"1307","messageId":"1308","endLine":16,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1335","line":19,"column":22,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1318","line":23,"column":20,"nodeType":"1307","messageId":"1308","endLine":23,"endColumn":30},{"ruleId":"1320","severity":1,"message":"1361","line":50,"column":6,"nodeType":"1322","endLine":50,"endColumn":8,"suggestions":"1362"},{"ruleId":"1320","severity":1,"message":"1363","line":62,"column":6,"nodeType":"1322","endLine":62,"endColumn":16,"suggestions":"1364"},{"ruleId":"1320","severity":1,"message":"1340","line":67,"column":16,"nodeType":"1314","endLine":67,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1328","line":3,"column":23,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":34},{"ruleId":"1305","severity":1,"message":"1318","line":13,"column":20,"nodeType":"1307","messageId":"1308","endLine":13,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1319","line":34,"column":27,"nodeType":"1307","messageId":"1308","endLine":34,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1321","line":49,"column":6,"nodeType":"1322","endLine":49,"endColumn":25,"suggestions":"1365"},{"ruleId":"1305","severity":1,"message":"1366","line":5,"column":50,"nodeType":"1307","messageId":"1308","endLine":5,"endColumn":67},{"ruleId":"1305","severity":1,"message":"1367","line":7,"column":10,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":23},{"ruleId":"1305","severity":1,"message":"1368","line":7,"column":25,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":37},{"ruleId":"1305","severity":1,"message":"1369","line":7,"column":39,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":48},{"ruleId":"1305","severity":1,"message":"1370","line":7,"column":50,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":56},{"ruleId":"1305","severity":1,"message":"1371","line":8,"column":10,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1372","line":24,"column":21,"nodeType":"1307","messageId":"1308","endLine":24,"endColumn":31},{"ruleId":"1305","severity":1,"message":"1373","line":27,"column":12,"nodeType":"1307","messageId":"1308","endLine":27,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1374","line":38,"column":11,"nodeType":"1307","messageId":"1308","endLine":38,"endColumn":25},{"ruleId":"1320","severity":1,"message":"1375","line":73,"column":8,"nodeType":"1322","endLine":73,"endColumn":19,"suggestions":"1376"},{"ruleId":"1320","severity":1,"message":"1377","line":81,"column":8,"nodeType":"1322","endLine":81,"endColumn":23,"suggestions":"1378"},{"ruleId":"1305","severity":1,"message":"1318","line":12,"column":20,"nodeType":"1307","messageId":"1308","endLine":12,"endColumn":30},{"ruleId":"1320","severity":1,"message":"1379","line":97,"column":6,"nodeType":"1322","endLine":97,"endColumn":8,"suggestions":"1380"},{"ruleId":"1320","severity":1,"message":"1338","line":107,"column":6,"nodeType":"1322","endLine":107,"endColumn":16,"suggestions":"1381"},{"ruleId":"1382","severity":1,"message":"1383","line":6,"column":1,"nodeType":"1384","endLine":17,"endColumn":2},{"ruleId":"1382","severity":1,"message":"1383","line":13,"column":1,"nodeType":"1384","endLine":49,"endColumn":2},{"ruleId":"1305","severity":1,"message":"1385","line":1,"column":26,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1386","line":1,"column":32,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":38},{"ruleId":"1305","severity":1,"message":"1387","line":5,"column":10,"nodeType":"1307","messageId":"1308","endLine":5,"endColumn":12},{"ruleId":"1305","severity":1,"message":"1388","line":5,"column":14,"nodeType":"1307","messageId":"1308","endLine":5,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1389","line":8,"column":10,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":15},{"ruleId":"1354","severity":1,"message":"1390","line":109,"column":39,"nodeType":"1356","messageId":"1357","endLine":109,"endColumn":41},{"ruleId":"1305","severity":1,"message":"1391","line":130,"column":15,"nodeType":"1307","messageId":"1308","endLine":130,"endColumn":19},{"ruleId":"1354","severity":1,"message":"1390","line":165,"column":39,"nodeType":"1356","messageId":"1357","endLine":165,"endColumn":41},{"ruleId":"1354","severity":1,"message":"1390","line":193,"column":39,"nodeType":"1356","messageId":"1357","endLine":193,"endColumn":41},{"ruleId":"1305","severity":1,"message":"1392","line":1,"column":8,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":13},{"ruleId":"1393","severity":1,"message":"1394","line":4,"column":71,"nodeType":"1314","messageId":"1395","endLine":4,"endColumn":72,"suggestions":"1396"},{"ruleId":"1393","severity":1,"message":"1397","line":4,"column":74,"nodeType":"1314","messageId":"1395","endLine":4,"endColumn":75,"suggestions":"1398"},{"ruleId":"1393","severity":1,"message":"1399","line":4,"column":77,"nodeType":"1314","messageId":"1395","endLine":4,"endColumn":78,"suggestions":"1400"},{"ruleId":"1393","severity":1,"message":"1394","line":2,"column":80,"nodeType":"1314","messageId":"1395","endLine":2,"endColumn":81,"suggestions":"1401"},{"ruleId":"1393","severity":1,"message":"1397","line":2,"column":83,"nodeType":"1314","messageId":"1395","endLine":2,"endColumn":84,"suggestions":"1402"},{"ruleId":"1393","severity":1,"message":"1399","line":2,"column":86,"nodeType":"1314","messageId":"1395","endLine":2,"endColumn":87,"suggestions":"1403"},{"ruleId":"1354","severity":1,"message":"1355","line":2,"column":13,"nodeType":"1356","messageId":"1357","endLine":2,"endColumn":15},{"ruleId":"1393","severity":1,"message":"1404","line":1,"column":49,"nodeType":"1314","messageId":"1395","endLine":1,"endColumn":50,"suggestions":"1405"},{"ruleId":"1393","severity":1,"message":"1404","line":2,"column":60,"nodeType":"1314","messageId":"1395","endLine":2,"endColumn":61,"suggestions":"1406"},{"ruleId":"1393","severity":1,"message":"1404","line":3,"column":60,"nodeType":"1314","messageId":"1395","endLine":3,"endColumn":61,"suggestions":"1407"},{"ruleId":"1393","severity":1,"message":"1404","line":4,"column":60,"nodeType":"1314","messageId":"1395","endLine":4,"endColumn":61,"suggestions":"1408"},{"ruleId":"1393","severity":1,"message":"1404","line":5,"column":60,"nodeType":"1314","messageId":"1395","endLine":5,"endColumn":61,"suggestions":"1409"},{"ruleId":"1393","severity":1,"message":"1404","line":6,"column":60,"nodeType":"1314","messageId":"1395","endLine":6,"endColumn":61,"suggestions":"1410"},{"ruleId":"1393","severity":1,"message":"1404","line":7,"column":60,"nodeType":"1314","messageId":"1395","endLine":7,"endColumn":61,"suggestions":"1411"},{"ruleId":"1393","severity":1,"message":"1404","line":8,"column":60,"nodeType":"1314","messageId":"1395","endLine":8,"endColumn":61,"suggestions":"1412"},{"ruleId":"1393","severity":1,"message":"1404","line":9,"column":60,"nodeType":"1314","messageId":"1395","endLine":9,"endColumn":61,"suggestions":"1413"},{"ruleId":"1393","severity":1,"message":"1404","line":10,"column":60,"nodeType":"1314","messageId":"1395","endLine":10,"endColumn":61,"suggestions":"1414"},{"ruleId":"1393","severity":1,"message":"1404","line":11,"column":60,"nodeType":"1314","messageId":"1395","endLine":11,"endColumn":61,"suggestions":"1415"},{"ruleId":"1393","severity":1,"message":"1404","line":12,"column":60,"nodeType":"1314","messageId":"1395","endLine":12,"endColumn":61,"suggestions":"1416"},{"ruleId":"1393","severity":1,"message":"1404","line":13,"column":60,"nodeType":"1314","messageId":"1395","endLine":13,"endColumn":61,"suggestions":"1417"},{"ruleId":"1393","severity":1,"message":"1404","line":14,"column":60,"nodeType":"1314","messageId":"1395","endLine":14,"endColumn":61,"suggestions":"1418"},{"ruleId":"1393","severity":1,"message":"1404","line":15,"column":60,"nodeType":"1314","messageId":"1395","endLine":15,"endColumn":61,"suggestions":"1419"},{"ruleId":"1393","severity":1,"message":"1404","line":16,"column":60,"nodeType":"1314","messageId":"1395","endLine":16,"endColumn":61,"suggestions":"1420"},{"ruleId":"1393","severity":1,"message":"1404","line":17,"column":60,"nodeType":"1314","messageId":"1395","endLine":17,"endColumn":61,"suggestions":"1421"},{"ruleId":"1393","severity":1,"message":"1404","line":18,"column":60,"nodeType":"1314","messageId":"1395","endLine":18,"endColumn":61,"suggestions":"1422"},{"ruleId":"1393","severity":1,"message":"1404","line":19,"column":60,"nodeType":"1314","messageId":"1395","endLine":19,"endColumn":61,"suggestions":"1423"},{"ruleId":"1393","severity":1,"message":"1404","line":20,"column":60,"nodeType":"1314","messageId":"1395","endLine":20,"endColumn":61,"suggestions":"1424"},{"ruleId":"1393","severity":1,"message":"1404","line":21,"column":60,"nodeType":"1314","messageId":"1395","endLine":21,"endColumn":61,"suggestions":"1425"},{"ruleId":"1393","severity":1,"message":"1404","line":22,"column":60,"nodeType":"1314","messageId":"1395","endLine":22,"endColumn":61,"suggestions":"1426"},{"ruleId":"1393","severity":1,"message":"1404","line":23,"column":60,"nodeType":"1314","messageId":"1395","endLine":23,"endColumn":61,"suggestions":"1427"},{"ruleId":"1393","severity":1,"message":"1404","line":24,"column":60,"nodeType":"1314","messageId":"1395","endLine":24,"endColumn":61,"suggestions":"1428"},{"ruleId":"1393","severity":1,"message":"1404","line":25,"column":60,"nodeType":"1314","messageId":"1395","endLine":25,"endColumn":61,"suggestions":"1429"},{"ruleId":"1393","severity":1,"message":"1404","line":26,"column":60,"nodeType":"1314","messageId":"1395","endLine":26,"endColumn":61,"suggestions":"1430"},{"ruleId":"1393","severity":1,"message":"1404","line":27,"column":60,"nodeType":"1314","messageId":"1395","endLine":27,"endColumn":61,"suggestions":"1431"},{"ruleId":"1393","severity":1,"message":"1404","line":28,"column":60,"nodeType":"1314","messageId":"1395","endLine":28,"endColumn":61,"suggestions":"1432"},{"ruleId":"1393","severity":1,"message":"1404","line":29,"column":60,"nodeType":"1314","messageId":"1395","endLine":29,"endColumn":61,"suggestions":"1433"},{"ruleId":"1393","severity":1,"message":"1404","line":30,"column":60,"nodeType":"1314","messageId":"1395","endLine":30,"endColumn":61,"suggestions":"1434"},{"ruleId":"1393","severity":1,"message":"1404","line":31,"column":60,"nodeType":"1314","messageId":"1395","endLine":31,"endColumn":61,"suggestions":"1435"},{"ruleId":"1393","severity":1,"message":"1404","line":32,"column":60,"nodeType":"1314","messageId":"1395","endLine":32,"endColumn":61,"suggestions":"1436"},{"ruleId":"1393","severity":1,"message":"1404","line":33,"column":60,"nodeType":"1314","messageId":"1395","endLine":33,"endColumn":61,"suggestions":"1437"},{"ruleId":"1393","severity":1,"message":"1404","line":34,"column":60,"nodeType":"1314","messageId":"1395","endLine":34,"endColumn":61,"suggestions":"1438"},{"ruleId":"1393","severity":1,"message":"1404","line":35,"column":60,"nodeType":"1314","messageId":"1395","endLine":35,"endColumn":61,"suggestions":"1439"},{"ruleId":"1440","severity":1,"message":"1441","line":33,"column":3,"nodeType":"1442","messageId":"1443","endLine":47,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1444","line":1,"column":38,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":44},{"ruleId":"1305","severity":1,"message":"1328","line":2,"column":10,"nodeType":"1307","messageId":"1308","endLine":2,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1331","line":3,"column":10,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1445","line":8,"column":3,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1335","line":24,"column":22,"nodeType":"1307","messageId":"1308","endLine":24,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1446","line":34,"column":10,"nodeType":"1307","messageId":"1308","endLine":34,"endColumn":16},{"ruleId":"1320","severity":1,"message":"1447","line":40,"column":6,"nodeType":"1322","endLine":40,"endColumn":8,"suggestions":"1448"},{"ruleId":"1305","severity":1,"message":"1449","line":42,"column":10,"nodeType":"1307","messageId":"1308","endLine":42,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1450","line":57,"column":11,"nodeType":"1307","messageId":"1308","endLine":57,"endColumn":12},{"ruleId":"1451","severity":1,"message":"1452","line":180,"column":17,"nodeType":"1353","messageId":"1453","endLine":180,"endColumn":112,"fix":"1454"},{"ruleId":"1351","severity":1,"message":"1352","line":509,"column":13,"nodeType":"1353","endLine":509,"endColumn":73},{"ruleId":"1305","severity":1,"message":"1360","line":16,"column":11,"nodeType":"1307","messageId":"1308","endLine":16,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1455","line":19,"column":12,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1335","line":19,"column":24,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":37},{"ruleId":"1305","severity":1,"message":"1456","line":20,"column":12,"nodeType":"1307","messageId":"1308","endLine":20,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1457","line":20,"column":24,"nodeType":"1307","messageId":"1308","endLine":20,"endColumn":37},{"ruleId":"1320","severity":1,"message":"1458","line":27,"column":8,"nodeType":"1322","endLine":27,"endColumn":10,"suggestions":"1459"},{"ruleId":"1305","severity":1,"message":"1460","line":29,"column":12,"nodeType":"1307","messageId":"1308","endLine":29,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1461","line":29,"column":23,"nodeType":"1307","messageId":"1308","endLine":29,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1462","line":30,"column":12,"nodeType":"1307","messageId":"1308","endLine":30,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1463","line":30,"column":23,"nodeType":"1307","messageId":"1308","endLine":30,"endColumn":35},{"ruleId":"1351","severity":1,"message":"1352","line":106,"column":33,"nodeType":"1353","endLine":106,"endColumn":144},{"ruleId":"1351","severity":1,"message":"1352","line":116,"column":33,"nodeType":"1353","endLine":116,"endColumn":142},{"ruleId":"1354","severity":1,"message":"1390","line":147,"column":66,"nodeType":"1356","messageId":"1357","endLine":147,"endColumn":68},{"ruleId":"1305","severity":1,"message":"1335","line":10,"column":22,"nodeType":"1307","messageId":"1308","endLine":10,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1464","line":12,"column":17,"nodeType":"1307","messageId":"1308","endLine":12,"endColumn":25},{"ruleId":"1305","severity":1,"message":"1465","line":13,"column":30,"nodeType":"1307","messageId":"1308","endLine":13,"endColumn":39},{"ruleId":"1320","severity":1,"message":"1447","line":25,"column":6,"nodeType":"1322","endLine":25,"endColumn":8,"suggestions":"1466"},{"ruleId":"1305","severity":1,"message":"1467","line":23,"column":10,"nodeType":"1307","messageId":"1308","endLine":23,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1468","line":36,"column":32,"nodeType":"1307","messageId":"1308","endLine":36,"endColumn":42},{"ruleId":"1305","severity":1,"message":"1469","line":52,"column":9,"nodeType":"1307","messageId":"1308","endLine":52,"endColumn":20},{"ruleId":"1320","severity":1,"message":"1470","line":65,"column":6,"nodeType":"1322","endLine":65,"endColumn":8,"suggestions":"1471"},{"ruleId":"1305","severity":1,"message":"1472","line":89,"column":10,"nodeType":"1307","messageId":"1308","endLine":89,"endColumn":17},{"ruleId":"1473","severity":1,"message":"1474","line":282,"column":15,"nodeType":"1475","messageId":"1476","endLine":282,"endColumn":27},{"ruleId":"1305","severity":1,"message":"1477","line":292,"column":11,"nodeType":"1307","messageId":"1308","endLine":292,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1478","line":4,"column":36,"nodeType":"1307","messageId":"1308","endLine":4,"endColumn":51},{"ruleId":"1305","severity":1,"message":"1479","line":6,"column":10,"nodeType":"1307","messageId":"1308","endLine":6,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1480","line":10,"column":10,"nodeType":"1307","messageId":"1308","endLine":10,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1481","line":15,"column":34,"nodeType":"1307","messageId":"1308","endLine":15,"endColumn":45},{"ruleId":"1305","severity":1,"message":"1482","line":18,"column":48,"nodeType":"1307","messageId":"1308","endLine":18,"endColumn":66},{"ruleId":"1320","severity":1,"message":"1483","line":35,"column":6,"nodeType":"1322","endLine":35,"endColumn":8,"suggestions":"1484"},{"ruleId":"1354","severity":1,"message":"1390","line":58,"column":32,"nodeType":"1356","messageId":"1357","endLine":58,"endColumn":34},{"ruleId":"1354","severity":1,"message":"1390","line":58,"column":62,"nodeType":"1356","messageId":"1357","endLine":58,"endColumn":64},{"ruleId":"1305","severity":1,"message":"1328","line":2,"column":10,"nodeType":"1307","messageId":"1308","endLine":2,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1330","line":3,"column":10,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1331","line":4,"column":10,"nodeType":"1307","messageId":"1308","endLine":4,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1485","line":11,"column":3,"nodeType":"1307","messageId":"1308","endLine":11,"endColumn":9},{"ruleId":"1305","severity":1,"message":"1329","line":13,"column":36,"nodeType":"1307","messageId":"1308","endLine":13,"endColumn":48},{"ruleId":"1305","severity":1,"message":"1486","line":17,"column":55,"nodeType":"1307","messageId":"1308","endLine":17,"endColumn":75},{"ruleId":"1305","severity":1,"message":"1335","line":26,"column":22,"nodeType":"1307","messageId":"1308","endLine":26,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1487","line":28,"column":42,"nodeType":"1307","messageId":"1308","endLine":28,"endColumn":57},{"ruleId":"1305","severity":1,"message":"1464","line":31,"column":28,"nodeType":"1307","messageId":"1308","endLine":31,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1488","line":34,"column":28,"nodeType":"1307","messageId":"1308","endLine":34,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1489","line":37,"column":32,"nodeType":"1307","messageId":"1308","endLine":37,"endColumn":42},{"ruleId":"1305","severity":1,"message":"1468","line":40,"column":32,"nodeType":"1307","messageId":"1308","endLine":40,"endColumn":42},{"ruleId":"1305","severity":1,"message":"1490","line":43,"column":38,"nodeType":"1307","messageId":"1308","endLine":43,"endColumn":51},{"ruleId":"1305","severity":1,"message":"1491","line":46,"column":46,"nodeType":"1307","messageId":"1308","endLine":46,"endColumn":63},{"ruleId":"1305","severity":1,"message":"1492","line":49,"column":34,"nodeType":"1307","messageId":"1308","endLine":49,"endColumn":45},{"ruleId":"1305","severity":1,"message":"1493","line":52,"column":38,"nodeType":"1307","messageId":"1308","endLine":52,"endColumn":51},{"ruleId":"1305","severity":1,"message":"1450","line":66,"column":9,"nodeType":"1307","messageId":"1308","endLine":66,"endColumn":10},{"ruleId":"1320","severity":1,"message":"1447","line":72,"column":6,"nodeType":"1322","endLine":72,"endColumn":8,"suggestions":"1494"},{"ruleId":"1305","severity":1,"message":"1495","line":209,"column":9,"nodeType":"1307","messageId":"1308","endLine":209,"endColumn":25},{"ruleId":"1351","severity":1,"message":"1352","line":264,"column":15,"nodeType":"1353","endLine":264,"endColumn":62},{"ruleId":"1305","severity":1,"message":"1496","line":2,"column":8,"nodeType":"1307","messageId":"1308","endLine":2,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1479","line":8,"column":10,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1486","line":11,"column":41,"nodeType":"1307","messageId":"1308","endLine":11,"endColumn":61},{"ruleId":"1305","severity":1,"message":"1497","line":16,"column":34,"nodeType":"1307","messageId":"1308","endLine":16,"endColumn":45},{"ruleId":"1305","severity":1,"message":"1481","line":19,"column":34,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":45},{"ruleId":"1305","severity":1,"message":"1467","line":23,"column":10,"nodeType":"1307","messageId":"1308","endLine":23,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1360","line":24,"column":9,"nodeType":"1307","messageId":"1308","endLine":24,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1495","line":82,"column":9,"nodeType":"1307","messageId":"1308","endLine":82,"endColumn":25},{"ruleId":"1473","severity":1,"message":"1474","line":104,"column":21,"nodeType":"1475","messageId":"1476","endLine":104,"endColumn":33},{"ruleId":"1473","severity":1,"message":"1474","line":137,"column":19,"nodeType":"1475","messageId":"1476","endLine":137,"endColumn":31},{"ruleId":"1305","severity":1,"message":"1496","line":2,"column":8,"nodeType":"1307","messageId":"1308","endLine":2,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1479","line":8,"column":10,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1486","line":11,"column":41,"nodeType":"1307","messageId":"1308","endLine":11,"endColumn":61},{"ruleId":"1305","severity":1,"message":"1497","line":16,"column":34,"nodeType":"1307","messageId":"1308","endLine":16,"endColumn":45},{"ruleId":"1305","severity":1,"message":"1481","line":19,"column":34,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":45},{"ruleId":"1305","severity":1,"message":"1467","line":23,"column":10,"nodeType":"1307","messageId":"1308","endLine":23,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1360","line":24,"column":9,"nodeType":"1307","messageId":"1308","endLine":24,"endColumn":16},{"ruleId":"1473","severity":1,"message":"1474","line":71,"column":19,"nodeType":"1475","messageId":"1476","endLine":71,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1499","line":78,"column":33,"nodeType":"1500","messageId":"1501","endLine":78,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1495","line":109,"column":9,"nodeType":"1307","messageId":"1308","endLine":109,"endColumn":25},{"ruleId":"1473","severity":1,"message":"1474","line":131,"column":21,"nodeType":"1475","messageId":"1476","endLine":131,"endColumn":33},{"ruleId":"1473","severity":1,"message":"1474","line":164,"column":19,"nodeType":"1475","messageId":"1476","endLine":164,"endColumn":31},{"ruleId":"1301","replacedBy":"1502"},{"ruleId":"1303","replacedBy":"1503"},{"ruleId":"1351","severity":1,"message":"1352","line":15,"column":36,"nodeType":"1353","endLine":15,"endColumn":156},{"ruleId":"1351","severity":1,"message":"1352","line":16,"column":70,"nodeType":"1353","endLine":16,"endColumn":190},{"ruleId":"1351","severity":1,"message":"1352","line":17,"column":70,"nodeType":"1353","endLine":17,"endColumn":191},{"ruleId":"1351","severity":1,"message":"1352","line":18,"column":70,"nodeType":"1353","endLine":18,"endColumn":189},{"ruleId":"1351","severity":1,"message":"1352","line":19,"column":70,"nodeType":"1353","endLine":19,"endColumn":192},{"ruleId":"1351","severity":1,"message":"1352","line":20,"column":70,"nodeType":"1353","endLine":20,"endColumn":125},{"ruleId":"1351","severity":1,"message":"1352","line":21,"column":70,"nodeType":"1353","endLine":21,"endColumn":126},{"ruleId":"1305","severity":1,"message":"1488","line":14,"column":28,"nodeType":"1307","messageId":"1308","endLine":14,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1335","line":17,"column":22,"nodeType":"1307","messageId":"1308","endLine":17,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1504","line":22,"column":16,"nodeType":"1307","messageId":"1308","endLine":22,"endColumn":23},{"ruleId":"1320","severity":1,"message":"1447","line":31,"column":6,"nodeType":"1322","endLine":31,"endColumn":8,"suggestions":"1505"},{"ruleId":"1351","severity":1,"message":"1352","line":167,"column":17,"nodeType":"1353","endLine":167,"endColumn":77},{"ruleId":"1351","severity":1,"message":"1352","line":175,"column":17,"nodeType":"1353","endLine":175,"endColumn":77},{"ruleId":"1351","severity":1,"message":"1352","line":183,"column":17,"nodeType":"1353","endLine":183,"endColumn":77},{"ruleId":"1305","severity":1,"message":"1444","line":1,"column":38,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":44},{"ruleId":"1305","severity":1,"message":"1328","line":2,"column":10,"nodeType":"1307","messageId":"1308","endLine":2,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1330","line":3,"column":10,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1331","line":4,"column":10,"nodeType":"1307","messageId":"1308","endLine":4,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1506","line":6,"column":3,"nodeType":"1307","messageId":"1308","endLine":6,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1329","line":8,"column":3,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1507","line":9,"column":3,"nodeType":"1307","messageId":"1308","endLine":9,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1508","line":16,"column":10,"nodeType":"1307","messageId":"1308","endLine":16,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1509","line":19,"column":10,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1335","line":28,"column":22,"nodeType":"1307","messageId":"1308","endLine":28,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1447","line":37,"column":6,"nodeType":"1322","endLine":37,"endColumn":8,"suggestions":"1510"},{"ruleId":"1305","severity":1,"message":"1449","line":39,"column":10,"nodeType":"1307","messageId":"1308","endLine":39,"endColumn":16},{"ruleId":"1351","severity":1,"message":"1352","line":185,"column":12,"nodeType":"1353","endLine":185,"endColumn":72},{"ruleId":"1305","severity":1,"message":"1479","line":12,"column":10,"nodeType":"1307","messageId":"1308","endLine":12,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1335","line":21,"column":22,"nodeType":"1307","messageId":"1308","endLine":21,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1447","line":49,"column":6,"nodeType":"1322","endLine":49,"endColumn":8,"suggestions":"1511"},{"ruleId":"1354","severity":1,"message":"1355","line":93,"column":18,"nodeType":"1356","messageId":"1357","endLine":93,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1512","line":7,"column":3,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1507","line":8,"column":3,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1478","line":9,"column":3,"nodeType":"1307","messageId":"1308","endLine":9,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1513","line":10,"column":3,"nodeType":"1307","messageId":"1308","endLine":10,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1508","line":14,"column":10,"nodeType":"1307","messageId":"1308","endLine":14,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1335","line":29,"column":22,"nodeType":"1307","messageId":"1308","endLine":29,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1514","line":51,"column":6,"nodeType":"1322","endLine":51,"endColumn":8,"suggestions":"1515"},{"ruleId":"1351","severity":1,"message":"1352","line":489,"column":23,"nodeType":"1353","endLine":489,"endColumn":83},{"ruleId":"1351","severity":1,"message":"1352","line":577,"column":24,"nodeType":"1353","endLine":577,"endColumn":84},{"ruleId":"1351","severity":1,"message":"1352","line":599,"column":24,"nodeType":"1353","endLine":599,"endColumn":84},{"ruleId":"1305","severity":1,"message":"1516","line":1,"column":38,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":51},{"ruleId":"1305","severity":1,"message":"1367","line":3,"column":10,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":23},{"ruleId":"1305","severity":1,"message":"1368","line":3,"column":25,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":37},{"ruleId":"1305","severity":1,"message":"1517","line":19,"column":10,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1518","line":25,"column":10,"nodeType":"1307","messageId":"1308","endLine":25,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1519","line":26,"column":10,"nodeType":"1307","messageId":"1308","endLine":26,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1520","line":28,"column":10,"nodeType":"1307","messageId":"1308","endLine":28,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1521","line":36,"column":18,"nodeType":"1307","messageId":"1308","endLine":36,"endColumn":27},{"ruleId":"1320","severity":1,"message":"1522","line":60,"column":6,"nodeType":"1322","endLine":60,"endColumn":8,"suggestions":"1523"},{"ruleId":"1498","severity":1,"message":"1524","line":74,"column":65,"nodeType":"1500","messageId":"1501","endLine":74,"endColumn":67},{"ruleId":"1320","severity":1,"message":"1525","line":107,"column":6,"nodeType":"1322","endLine":107,"endColumn":14,"suggestions":"1526"},{"ruleId":"1305","severity":1,"message":"1527","line":195,"column":9,"nodeType":"1307","messageId":"1308","endLine":195,"endColumn":36},{"ruleId":"1354","severity":1,"message":"1390","line":340,"column":37,"nodeType":"1356","messageId":"1357","endLine":340,"endColumn":39},{"ruleId":"1498","severity":1,"message":"1524","line":386,"column":21,"nodeType":"1500","messageId":"1501","endLine":386,"endColumn":23},{"ruleId":"1305","severity":1,"message":"1528","line":417,"column":9,"nodeType":"1307","messageId":"1308","endLine":417,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1529","line":651,"column":52,"nodeType":"1500","messageId":"1530","endLine":651,"endColumn":54},{"ruleId":"1498","severity":1,"message":"1529","line":678,"column":52,"nodeType":"1500","messageId":"1530","endLine":678,"endColumn":54},{"ruleId":"1531","severity":1,"message":"1532","line":725,"column":45,"nodeType":"1533","messageId":"1534","endLine":725,"endColumn":47},{"ruleId":"1531","severity":1,"message":"1532","line":725,"column":85,"nodeType":"1533","messageId":"1534","endLine":725,"endColumn":87},{"ruleId":"1535","severity":1,"message":"1536","line":978,"column":13,"nodeType":"1353","endLine":978,"endColumn":144},{"ruleId":"1498","severity":1,"message":"1529","line":1067,"column":44,"nodeType":"1500","messageId":"1530","endLine":1067,"endColumn":46},{"ruleId":"1354","severity":1,"message":"1390","line":1068,"column":61,"nodeType":"1356","messageId":"1357","endLine":1068,"endColumn":63},{"ruleId":"1498","severity":1,"message":"1529","line":1132,"column":44,"nodeType":"1500","messageId":"1530","endLine":1132,"endColumn":46},{"ruleId":"1354","severity":1,"message":"1390","line":1133,"column":59,"nodeType":"1356","messageId":"1357","endLine":1133,"endColumn":61},{"ruleId":"1354","severity":1,"message":"1390","line":1135,"column":63,"nodeType":"1356","messageId":"1357","endLine":1135,"endColumn":65},{"ruleId":"1305","severity":1,"message":"1479","line":17,"column":10,"nodeType":"1307","messageId":"1308","endLine":17,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1335","line":29,"column":22,"nodeType":"1307","messageId":"1308","endLine":29,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1537","line":47,"column":10,"nodeType":"1307","messageId":"1308","endLine":47,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1538","line":47,"column":16,"nodeType":"1307","messageId":"1308","endLine":47,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1539","line":48,"column":9,"nodeType":"1307","messageId":"1308","endLine":48,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1540","line":53,"column":10,"nodeType":"1307","messageId":"1308","endLine":53,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1541","line":57,"column":10,"nodeType":"1307","messageId":"1308","endLine":57,"endColumn":25},{"ruleId":"1320","severity":1,"message":"1542","line":71,"column":6,"nodeType":"1322","endLine":71,"endColumn":8,"suggestions":"1543"},{"ruleId":"1354","severity":1,"message":"1390","line":173,"column":25,"nodeType":"1356","messageId":"1357","endLine":173,"endColumn":27},{"ruleId":"1354","severity":1,"message":"1390","line":189,"column":41,"nodeType":"1356","messageId":"1357","endLine":189,"endColumn":43},{"ruleId":"1354","severity":1,"message":"1390","line":191,"column":49,"nodeType":"1356","messageId":"1357","endLine":191,"endColumn":51},{"ruleId":"1354","severity":1,"message":"1390","line":193,"column":41,"nodeType":"1356","messageId":"1357","endLine":193,"endColumn":43},{"ruleId":"1305","severity":1,"message":"1512","line":7,"column":3,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1507","line":8,"column":3,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1513","line":10,"column":3,"nodeType":"1307","messageId":"1308","endLine":10,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1508","line":14,"column":10,"nodeType":"1307","messageId":"1308","endLine":14,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1544","line":17,"column":10,"nodeType":"1307","messageId":"1308","endLine":17,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1545","line":26,"column":20,"nodeType":"1307","messageId":"1308","endLine":26,"endColumn":31},{"ruleId":"1305","severity":1,"message":"1546","line":27,"column":10,"nodeType":"1307","messageId":"1308","endLine":27,"endColumn":26},{"ruleId":"1305","severity":1,"message":"1547","line":27,"column":28,"nodeType":"1307","messageId":"1308","endLine":27,"endColumn":47},{"ruleId":"1305","severity":1,"message":"1548","line":28,"column":10,"nodeType":"1307","messageId":"1308","endLine":28,"endColumn":26},{"ruleId":"1305","severity":1,"message":"1549","line":28,"column":28,"nodeType":"1307","messageId":"1308","endLine":28,"endColumn":47},{"ruleId":"1305","severity":1,"message":"1335","line":30,"column":22,"nodeType":"1307","messageId":"1308","endLine":30,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1550","line":43,"column":10,"nodeType":"1307","messageId":"1308","endLine":43,"endColumn":32},{"ruleId":"1305","severity":1,"message":"1551","line":44,"column":10,"nodeType":"1307","messageId":"1308","endLine":44,"endColumn":32},{"ruleId":"1320","severity":1,"message":"1514","line":52,"column":6,"nodeType":"1322","endLine":52,"endColumn":8,"suggestions":"1552"},{"ruleId":"1351","severity":1,"message":"1352","line":291,"column":23,"nodeType":"1353","endLine":291,"endColumn":83},{"ruleId":"1305","severity":1,"message":"1512","line":7,"column":3,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1507","line":8,"column":3,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1478","line":9,"column":3,"nodeType":"1307","messageId":"1308","endLine":9,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1545","line":25,"column":20,"nodeType":"1307","messageId":"1308","endLine":25,"endColumn":31},{"ruleId":"1305","severity":1,"message":"1553","line":26,"column":22,"nodeType":"1307","messageId":"1308","endLine":26,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1335","line":28,"column":22,"nodeType":"1307","messageId":"1308","endLine":28,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1514","line":45,"column":6,"nodeType":"1322","endLine":45,"endColumn":8,"suggestions":"1554"},{"ruleId":"1305","severity":1,"message":"1555","line":152,"column":9,"nodeType":"1307","messageId":"1308","endLine":152,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1556","line":227,"column":9,"nodeType":"1307","messageId":"1308","endLine":227,"endColumn":25},{"ruleId":"1305","severity":1,"message":"1450","line":236,"column":9,"nodeType":"1307","messageId":"1308","endLine":236,"endColumn":10},{"ruleId":"1351","severity":1,"message":"1352","line":392,"column":23,"nodeType":"1353","endLine":392,"endColumn":83},{"ruleId":"1305","severity":1,"message":"1444","line":1,"column":38,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":44},{"ruleId":"1305","severity":1,"message":"1328","line":2,"column":10,"nodeType":"1307","messageId":"1308","endLine":2,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1330","line":3,"column":10,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1331","line":4,"column":10,"nodeType":"1307","messageId":"1308","endLine":4,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1506","line":6,"column":3,"nodeType":"1307","messageId":"1308","endLine":6,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1329","line":8,"column":3,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1507","line":9,"column":3,"nodeType":"1307","messageId":"1308","endLine":9,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1478","line":10,"column":3,"nodeType":"1307","messageId":"1308","endLine":10,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1508","line":16,"column":10,"nodeType":"1307","messageId":"1308","endLine":16,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1332","line":17,"column":10,"nodeType":"1307","messageId":"1308","endLine":17,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1333","line":17,"column":18,"nodeType":"1307","messageId":"1308","endLine":17,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1509","line":19,"column":10,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1335","line":24,"column":22,"nodeType":"1307","messageId":"1308","endLine":24,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1447","line":40,"column":6,"nodeType":"1322","endLine":40,"endColumn":8,"suggestions":"1557"},{"ruleId":"1305","severity":1,"message":"1558","line":87,"column":9,"nodeType":"1307","messageId":"1308","endLine":87,"endColumn":26},{"ruleId":"1473","severity":1,"message":"1474","line":113,"column":15,"nodeType":"1475","messageId":"1476","endLine":113,"endColumn":27},{"ruleId":"1498","severity":1,"message":"1499","line":118,"column":30,"nodeType":"1500","messageId":"1501","endLine":118,"endColumn":32},{"ruleId":"1354","severity":1,"message":"1390","line":211,"column":43,"nodeType":"1356","messageId":"1357","endLine":211,"endColumn":45},{"ruleId":"1305","severity":1,"message":"1508","line":12,"column":10,"nodeType":"1307","messageId":"1308","endLine":12,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1332","line":13,"column":10,"nodeType":"1307","messageId":"1308","endLine":13,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1333","line":13,"column":18,"nodeType":"1307","messageId":"1308","endLine":13,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1335","line":22,"column":22,"nodeType":"1307","messageId":"1308","endLine":22,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1559","line":28,"column":10,"nodeType":"1307","messageId":"1308","endLine":28,"endColumn":26},{"ruleId":"1305","severity":1,"message":"1560","line":29,"column":10,"nodeType":"1307","messageId":"1308","endLine":29,"endColumn":19},{"ruleId":"1320","severity":1,"message":"1447","line":39,"column":6,"nodeType":"1322","endLine":39,"endColumn":8,"suggestions":"1561"},{"ruleId":"1305","severity":1,"message":"1450","line":53,"column":11,"nodeType":"1307","messageId":"1308","endLine":53,"endColumn":12},{"ruleId":"1305","severity":1,"message":"1335","line":28,"column":22,"nodeType":"1307","messageId":"1308","endLine":28,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1562","line":47,"column":10,"nodeType":"1307","messageId":"1308","endLine":47,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1563","line":47,"column":19,"nodeType":"1307","messageId":"1308","endLine":47,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1564","line":48,"column":9,"nodeType":"1307","messageId":"1308","endLine":48,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1541","line":50,"column":10,"nodeType":"1307","messageId":"1308","endLine":50,"endColumn":25},{"ruleId":"1320","severity":1,"message":"1565","line":62,"column":6,"nodeType":"1322","endLine":62,"endColumn":8,"suggestions":"1566"},{"ruleId":"1354","severity":1,"message":"1390","line":137,"column":25,"nodeType":"1356","messageId":"1357","endLine":137,"endColumn":27},{"ruleId":"1354","severity":1,"message":"1390","line":151,"column":41,"nodeType":"1356","messageId":"1357","endLine":151,"endColumn":43},{"ruleId":"1354","severity":1,"message":"1390","line":153,"column":49,"nodeType":"1356","messageId":"1357","endLine":153,"endColumn":51},{"ruleId":"1354","severity":1,"message":"1390","line":155,"column":41,"nodeType":"1356","messageId":"1357","endLine":155,"endColumn":43},{"ruleId":"1305","severity":1,"message":"1512","line":7,"column":3,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1335","line":27,"column":22,"nodeType":"1307","messageId":"1308","endLine":27,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1514","line":44,"column":6,"nodeType":"1322","endLine":44,"endColumn":8,"suggestions":"1567"},{"ruleId":"1351","severity":1,"message":"1352","line":270,"column":23,"nodeType":"1353","endLine":270,"endColumn":83},{"ruleId":"1305","severity":1,"message":"1512","line":7,"column":3,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1508","line":14,"column":10,"nodeType":"1307","messageId":"1308","endLine":14,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1335","line":26,"column":22,"nodeType":"1307","messageId":"1308","endLine":26,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1514","line":41,"column":6,"nodeType":"1322","endLine":41,"endColumn":8,"suggestions":"1568"},{"ruleId":"1351","severity":1,"message":"1352","line":275,"column":23,"nodeType":"1353","endLine":275,"endColumn":83},{"ruleId":"1305","severity":1,"message":"1545","line":22,"column":20,"nodeType":"1307","messageId":"1308","endLine":22,"endColumn":31},{"ruleId":"1305","severity":1,"message":"1553","line":23,"column":22,"nodeType":"1307","messageId":"1308","endLine":23,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1335","line":25,"column":22,"nodeType":"1307","messageId":"1308","endLine":25,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1514","line":54,"column":6,"nodeType":"1322","endLine":54,"endColumn":8,"suggestions":"1569"},{"ruleId":"1305","severity":1,"message":"1570","line":86,"column":9,"nodeType":"1307","messageId":"1308","endLine":86,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1450","line":192,"column":9,"nodeType":"1307","messageId":"1308","endLine":192,"endColumn":10},{"ruleId":"1305","severity":1,"message":"1556","line":204,"column":9,"nodeType":"1307","messageId":"1308","endLine":204,"endColumn":25},{"ruleId":"1305","severity":1,"message":"1450","line":214,"column":9,"nodeType":"1307","messageId":"1308","endLine":214,"endColumn":10},{"ruleId":"1305","severity":1,"message":"1328","line":2,"column":10,"nodeType":"1307","messageId":"1308","endLine":2,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1330","line":3,"column":10,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1331","line":4,"column":10,"nodeType":"1307","messageId":"1308","endLine":4,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1343","line":5,"column":8,"nodeType":"1307","messageId":"1308","endLine":5,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1506","line":8,"column":3,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1329","line":10,"column":3,"nodeType":"1307","messageId":"1308","endLine":10,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1478","line":12,"column":3,"nodeType":"1307","messageId":"1308","endLine":12,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1508","line":18,"column":10,"nodeType":"1307","messageId":"1308","endLine":18,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1332","line":19,"column":10,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1333","line":19,"column":18,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1335","line":33,"column":22,"nodeType":"1307","messageId":"1308","endLine":33,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1571","line":35,"column":20,"nodeType":"1307","messageId":"1308","endLine":35,"endColumn":32},{"ruleId":"1305","severity":1,"message":"1572","line":36,"column":18,"nodeType":"1307","messageId":"1308","endLine":36,"endColumn":28},{"ruleId":"1305","severity":1,"message":"1573","line":37,"column":9,"nodeType":"1307","messageId":"1308","endLine":37,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1574","line":38,"column":9,"nodeType":"1307","messageId":"1308","endLine":38,"endColumn":18},{"ruleId":"1320","severity":1,"message":"1447","line":51,"column":6,"nodeType":"1322","endLine":51,"endColumn":8,"suggestions":"1575"},{"ruleId":"1305","severity":1,"message":"1450","line":65,"column":11,"nodeType":"1307","messageId":"1308","endLine":65,"endColumn":12},{"ruleId":"1351","severity":1,"message":"1352","line":354,"column":13,"nodeType":"1353","endLine":354,"endColumn":73},{"ruleId":"1305","severity":1,"message":"1516","line":1,"column":46,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":59},{"ruleId":"1305","severity":1,"message":"1576","line":24,"column":3,"nodeType":"1307","messageId":"1308","endLine":24,"endColumn":14},{"ruleId":"1320","severity":1,"message":"1577","line":44,"column":6,"nodeType":"1322","endLine":44,"endColumn":8,"suggestions":"1578"},{"ruleId":"1305","severity":1,"message":"1334","line":51,"column":20,"nodeType":"1307","messageId":"1308","endLine":51,"endColumn":31},{"ruleId":"1305","severity":1,"message":"1579","line":65,"column":24,"nodeType":"1307","messageId":"1308","endLine":65,"endColumn":39},{"ruleId":"1305","severity":1,"message":"1580","line":127,"column":10,"nodeType":"1307","messageId":"1308","endLine":127,"endColumn":23},{"ruleId":"1305","severity":1,"message":"1581","line":131,"column":10,"nodeType":"1307","messageId":"1308","endLine":131,"endColumn":29},{"ruleId":"1305","severity":1,"message":"1582","line":152,"column":22,"nodeType":"1307","messageId":"1308","endLine":152,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1583","line":161,"column":9,"nodeType":"1307","messageId":"1308","endLine":161,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1584","line":189,"column":25,"nodeType":"1307","messageId":"1308","endLine":189,"endColumn":42},{"ruleId":"1305","severity":1,"message":"1585","line":190,"column":22,"nodeType":"1307","messageId":"1308","endLine":190,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1586","line":190,"column":38,"nodeType":"1307","messageId":"1308","endLine":190,"endColumn":51},{"ruleId":"1305","severity":1,"message":"1587","line":191,"column":16,"nodeType":"1307","messageId":"1308","endLine":191,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1588","line":193,"column":22,"nodeType":"1307","messageId":"1308","endLine":193,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1589","line":193,"column":38,"nodeType":"1307","messageId":"1308","endLine":193,"endColumn":51},{"ruleId":"1305","severity":1,"message":"1590","line":195,"column":27,"nodeType":"1307","messageId":"1308","endLine":195,"endColumn":46},{"ruleId":"1305","severity":1,"message":"1591","line":198,"column":24,"nodeType":"1307","messageId":"1308","endLine":198,"endColumn":40},{"ruleId":"1305","severity":1,"message":"1592","line":216,"column":15,"nodeType":"1307","messageId":"1308","endLine":216,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1593","line":218,"column":19,"nodeType":"1307","messageId":"1308","endLine":218,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1594","line":221,"column":9,"nodeType":"1307","messageId":"1308","endLine":221,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1595","line":223,"column":9,"nodeType":"1307","messageId":"1308","endLine":223,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1596","line":239,"column":9,"nodeType":"1307","messageId":"1308","endLine":239,"endColumn":25},{"ruleId":"1305","severity":1,"message":"1597","line":244,"column":9,"nodeType":"1307","messageId":"1308","endLine":244,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1598","line":246,"column":9,"nodeType":"1307","messageId":"1308","endLine":246,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1599","line":264,"column":10,"nodeType":"1307","messageId":"1308","endLine":264,"endColumn":34},{"ruleId":"1305","severity":1,"message":"1600","line":264,"column":36,"nodeType":"1307","messageId":"1308","endLine":264,"endColumn":60},{"ruleId":"1305","severity":1,"message":"1601","line":265,"column":10,"nodeType":"1307","messageId":"1308","endLine":265,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1602","line":265,"column":23,"nodeType":"1307","messageId":"1308","endLine":265,"endColumn":37},{"ruleId":"1305","severity":1,"message":"1603","line":268,"column":10,"nodeType":"1307","messageId":"1308","endLine":268,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1604","line":269,"column":18,"nodeType":"1307","messageId":"1308","endLine":269,"endColumn":27},{"ruleId":"1305","severity":1,"message":"1605","line":277,"column":10,"nodeType":"1307","messageId":"1308","endLine":277,"endColumn":26},{"ruleId":"1305","severity":1,"message":"1606","line":278,"column":10,"nodeType":"1307","messageId":"1308","endLine":278,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1607","line":279,"column":10,"nodeType":"1307","messageId":"1308","endLine":279,"endColumn":23},{"ruleId":"1305","severity":1,"message":"1608","line":285,"column":10,"nodeType":"1307","messageId":"1308","endLine":285,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1609","line":293,"column":10,"nodeType":"1307","messageId":"1308","endLine":293,"endColumn":18},{"ruleId":"1320","severity":1,"message":"1610","line":312,"column":6,"nodeType":"1322","endLine":312,"endColumn":8,"suggestions":"1611"},{"ruleId":"1320","severity":1,"message":"1324","line":317,"column":6,"nodeType":"1322","endLine":317,"endColumn":20,"suggestions":"1612"},{"ruleId":"1305","severity":1,"message":"1613","line":385,"column":9,"nodeType":"1307","messageId":"1308","endLine":385,"endColumn":21},{"ruleId":"1351","severity":1,"message":"1352","line":756,"column":27,"nodeType":"1353","endLine":759,"endColumn":29},{"ruleId":"1351","severity":1,"message":"1352","line":790,"column":27,"nodeType":"1353","endLine":793,"endColumn":29},{"ruleId":"1354","severity":1,"message":"1390","line":897,"column":48,"nodeType":"1356","messageId":"1357","endLine":897,"endColumn":50},{"ruleId":"1354","severity":1,"message":"1390","line":1175,"column":33,"nodeType":"1356","messageId":"1357","endLine":1175,"endColumn":35},{"ruleId":"1354","severity":1,"message":"1390","line":1176,"column":28,"nodeType":"1356","messageId":"1357","endLine":1176,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1614","line":1182,"column":9,"nodeType":"1307","messageId":"1308","endLine":1182,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1615","line":1198,"column":9,"nodeType":"1307","messageId":"1308","endLine":1198,"endColumn":17},{"ruleId":"1354","severity":1,"message":"1390","line":1201,"column":13,"nodeType":"1356","messageId":"1357","endLine":1201,"endColumn":15},{"ruleId":"1354","severity":1,"message":"1390","line":1207,"column":20,"nodeType":"1356","messageId":"1357","endLine":1207,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1499","line":1311,"column":32,"nodeType":"1500","messageId":"1501","endLine":1311,"endColumn":34},{"ruleId":"1305","severity":1,"message":"1616","line":1425,"column":10,"nodeType":"1307","messageId":"1308","endLine":1425,"endColumn":21},{"ruleId":"1354","severity":1,"message":"1355","line":1455,"column":14,"nodeType":"1356","messageId":"1357","endLine":1455,"endColumn":16},{"ruleId":"1354","severity":1,"message":"1355","line":1457,"column":16,"nodeType":"1356","messageId":"1357","endLine":1457,"endColumn":18},{"ruleId":"1354","severity":1,"message":"1390","line":1468,"column":38,"nodeType":"1356","messageId":"1357","endLine":1468,"endColumn":40},{"ruleId":"1354","severity":1,"message":"1390","line":1469,"column":36,"nodeType":"1356","messageId":"1357","endLine":1469,"endColumn":38},{"ruleId":"1354","severity":1,"message":"1390","line":1470,"column":42,"nodeType":"1356","messageId":"1357","endLine":1470,"endColumn":44},{"ruleId":"1305","severity":1,"message":"1617","line":1482,"column":10,"nodeType":"1307","messageId":"1308","endLine":1482,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1618","line":1483,"column":10,"nodeType":"1307","messageId":"1308","endLine":1483,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1619","line":1484,"column":10,"nodeType":"1307","messageId":"1308","endLine":1484,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1620","line":1486,"column":10,"nodeType":"1307","messageId":"1308","endLine":1486,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1621","line":1539,"column":10,"nodeType":"1307","messageId":"1308","endLine":1539,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1622","line":1539,"column":22,"nodeType":"1307","messageId":"1308","endLine":1539,"endColumn":35},{"ruleId":"1354","severity":1,"message":"1390","line":1590,"column":38,"nodeType":"1356","messageId":"1357","endLine":1590,"endColumn":40},{"ruleId":"1354","severity":1,"message":"1390","line":1604,"column":38,"nodeType":"1356","messageId":"1357","endLine":1604,"endColumn":40},{"ruleId":"1354","severity":1,"message":"1390","line":1658,"column":20,"nodeType":"1356","messageId":"1357","endLine":1658,"endColumn":22},{"ruleId":"1354","severity":1,"message":"1390","line":1679,"column":20,"nodeType":"1356","messageId":"1357","endLine":1679,"endColumn":22},{"ruleId":"1354","severity":1,"message":"1390","line":1684,"column":23,"nodeType":"1356","messageId":"1357","endLine":1684,"endColumn":25},{"ruleId":"1623","severity":1,"message":"1624","line":1858,"column":7,"nodeType":"1625","messageId":"1357","endLine":1858,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1626","line":1909,"column":15,"nodeType":"1307","messageId":"1308","endLine":1909,"endColumn":27},{"ruleId":"1305","severity":1,"message":"1627","line":2093,"column":10,"nodeType":"1307","messageId":"1308","endLine":2093,"endColumn":28},{"ruleId":"1305","severity":1,"message":"1628","line":2094,"column":10,"nodeType":"1307","messageId":"1308","endLine":2094,"endColumn":25},{"ruleId":"1305","severity":1,"message":"1629","line":2095,"column":10,"nodeType":"1307","messageId":"1308","endLine":2095,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1630","line":2095,"column":26,"nodeType":"1307","messageId":"1308","endLine":2095,"endColumn":43},{"ruleId":"1354","severity":1,"message":"1355","line":2110,"column":19,"nodeType":"1356","messageId":"1357","endLine":2110,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1631","line":2163,"column":22,"nodeType":"1307","messageId":"1308","endLine":2163,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1632","line":2164,"column":10,"nodeType":"1307","messageId":"1308","endLine":2164,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1633","line":2290,"column":9,"nodeType":"1307","messageId":"1308","endLine":2290,"endColumn":23},{"ruleId":"1320","severity":1,"message":"1634","line":2320,"column":6,"nodeType":"1322","endLine":2320,"endColumn":20,"suggestions":"1635"},{"ruleId":"1320","severity":1,"message":"1636","line":2359,"column":6,"nodeType":"1322","endLine":2359,"endColumn":25,"suggestions":"1637"},{"ruleId":"1320","severity":1,"message":"1638","line":2416,"column":6,"nodeType":"1322","endLine":2416,"endColumn":23,"suggestions":"1639"},{"ruleId":"1498","severity":1,"message":"1529","line":3325,"column":48,"nodeType":"1500","messageId":"1530","endLine":3325,"endColumn":50},{"ruleId":"1351","severity":1,"message":"1352","line":3938,"column":7,"nodeType":"1353","endLine":3941,"endColumn":9},{"ruleId":"1351","severity":1,"message":"1352","line":3942,"column":7,"nodeType":"1353","endLine":3945,"endColumn":9},{"ruleId":"1305","severity":1,"message":"1330","line":3,"column":10,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1328","line":7,"column":23,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":34},{"ruleId":"1305","severity":1,"message":"1331","line":8,"column":10,"nodeType":"1307","messageId":"1308","endLine":8,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1640","line":12,"column":10,"nodeType":"1307","messageId":"1308","endLine":12,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1507","line":18,"column":3,"nodeType":"1307","messageId":"1308","endLine":18,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1329","line":19,"column":3,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1641","line":29,"column":9,"nodeType":"1307","messageId":"1308","endLine":29,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1335","line":38,"column":22,"nodeType":"1307","messageId":"1308","endLine":38,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1642","line":47,"column":10,"nodeType":"1307","messageId":"1308","endLine":47,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1608","line":52,"column":10,"nodeType":"1307","messageId":"1308","endLine":52,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1643","line":53,"column":38,"nodeType":"1307","messageId":"1308","endLine":53,"endColumn":51},{"ruleId":"1320","severity":1,"message":"1644","line":62,"column":6,"nodeType":"1322","endLine":62,"endColumn":8,"suggestions":"1645"},{"ruleId":"1305","severity":1,"message":"1646","line":211,"column":10,"nodeType":"1307","messageId":"1308","endLine":211,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1613","line":215,"column":9,"nodeType":"1307","messageId":"1308","endLine":215,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1499","line":263,"column":32,"nodeType":"1500","messageId":"1501","endLine":263,"endColumn":34},{"ruleId":"1305","severity":1,"message":"1647","line":345,"column":9,"nodeType":"1307","messageId":"1308","endLine":345,"endColumn":11},{"ruleId":"1351","severity":1,"message":"1352","line":363,"column":27,"nodeType":"1353","endLine":363,"endColumn":138},{"ruleId":"1351","severity":1,"message":"1352","line":374,"column":27,"nodeType":"1353","endLine":374,"endColumn":136},{"ruleId":"1354","severity":1,"message":"1390","line":405,"column":60,"nodeType":"1356","messageId":"1357","endLine":405,"endColumn":62},{"ruleId":"1351","severity":1,"message":"1352","line":553,"column":33,"nodeType":"1353","endLine":553,"endColumn":128},{"ruleId":"1623","severity":1,"message":"1648","line":566,"column":186,"nodeType":"1625","messageId":"1357","endLine":566,"endColumn":193},{"ruleId":"1351","severity":1,"message":"1352","line":640,"column":27,"nodeType":"1353","endLine":640,"endColumn":138},{"ruleId":"1351","severity":1,"message":"1352","line":651,"column":27,"nodeType":"1353","endLine":651,"endColumn":136},{"ruleId":"1354","severity":1,"message":"1390","line":682,"column":60,"nodeType":"1356","messageId":"1357","endLine":682,"endColumn":62},{"ruleId":"1351","severity":1,"message":"1352","line":817,"column":35,"nodeType":"1353","endLine":817,"endColumn":130},{"ruleId":"1623","severity":1,"message":"1648","line":830,"column":188,"nodeType":"1625","messageId":"1357","endLine":830,"endColumn":195},{"ruleId":"1351","severity":1,"message":"1352","line":892,"column":78,"nodeType":"1353","endLine":892,"endColumn":173},{"ruleId":"1351","severity":1,"message":"1352","line":1015,"column":35,"nodeType":"1353","endLine":1015,"endColumn":130},{"ruleId":"1623","severity":1,"message":"1648","line":1028,"column":188,"nodeType":"1625","messageId":"1357","endLine":1028,"endColumn":195},{"ruleId":"1351","severity":1,"message":"1352","line":1105,"column":86,"nodeType":"1353","endLine":1105,"endColumn":181},{"ruleId":"1351","severity":1,"message":"1352","line":1203,"column":37,"nodeType":"1353","endLine":1203,"endColumn":132},{"ruleId":"1623","severity":1,"message":"1648","line":1216,"column":190,"nodeType":"1625","messageId":"1357","endLine":1216,"endColumn":197},{"ruleId":"1354","severity":1,"message":"1390","line":1299,"column":33,"nodeType":"1356","messageId":"1357","endLine":1299,"endColumn":35},{"ruleId":"1354","severity":1,"message":"1390","line":1300,"column":28,"nodeType":"1356","messageId":"1357","endLine":1300,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1614","line":1306,"column":9,"nodeType":"1307","messageId":"1308","endLine":1306,"endColumn":19},{"ruleId":"1649","severity":1,"message":"1650","line":1396,"column":17,"nodeType":"1353","endLine":1402,"endColumn":18},{"ruleId":"1351","severity":1,"message":"1352","line":1403,"column":19,"nodeType":"1353","endLine":1403,"endColumn":57},{"ruleId":"1351","severity":1,"message":"1352","line":1660,"column":13,"nodeType":"1353","endLine":1660,"endColumn":48},{"ruleId":"1351","severity":1,"message":"1352","line":1740,"column":17,"nodeType":"1353","endLine":1740,"endColumn":77},{"ruleId":"1649","severity":1,"message":"1650","line":1945,"column":23,"nodeType":"1353","endLine":1948,"endColumn":28},{"ruleId":"1649","severity":1,"message":"1650","line":1949,"column":23,"nodeType":"1353","endLine":1952,"endColumn":28},{"ruleId":"1649","severity":1,"message":"1650","line":1953,"column":23,"nodeType":"1353","endLine":1956,"endColumn":28},{"ruleId":"1649","severity":1,"message":"1650","line":1958,"column":23,"nodeType":"1353","endLine":1961,"endColumn":28},{"ruleId":"1649","severity":1,"message":"1650","line":1962,"column":23,"nodeType":"1353","endLine":1965,"endColumn":28},{"ruleId":"1649","severity":1,"message":"1650","line":1966,"column":23,"nodeType":"1353","endLine":1969,"endColumn":28},{"ruleId":"1351","severity":1,"message":"1352","line":2034,"column":21,"nodeType":"1353","endLine":2034,"endColumn":81},{"ruleId":"1351","severity":1,"message":"1352","line":2046,"column":7,"nodeType":"1353","endLine":2049,"endColumn":9},{"ruleId":"1351","severity":1,"message":"1352","line":2050,"column":7,"nodeType":"1353","endLine":2053,"endColumn":9},{"ruleId":"1305","severity":1,"message":"1651","line":14,"column":9,"nodeType":"1307","messageId":"1308","endLine":14,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1335","line":18,"column":22,"nodeType":"1307","messageId":"1308","endLine":18,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1652","line":30,"column":6,"nodeType":"1322","endLine":30,"endColumn":8,"suggestions":"1653"},{"ruleId":"1305","severity":1,"message":"1444","line":1,"column":38,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":44},{"ruleId":"1305","severity":1,"message":"1328","line":2,"column":10,"nodeType":"1307","messageId":"1308","endLine":2,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1330","line":3,"column":10,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1343","line":5,"column":8,"nodeType":"1307","messageId":"1308","endLine":5,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1349","line":6,"column":8,"nodeType":"1307","messageId":"1308","endLine":6,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1329","line":11,"column":3,"nodeType":"1307","messageId":"1308","endLine":11,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1507","line":12,"column":3,"nodeType":"1307","messageId":"1308","endLine":12,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1478","line":13,"column":3,"nodeType":"1307","messageId":"1308","endLine":13,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1640","line":20,"column":10,"nodeType":"1307","messageId":"1308","endLine":20,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1333","line":21,"column":18,"nodeType":"1307","messageId":"1308","endLine":21,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1335","line":29,"column":22,"nodeType":"1307","messageId":"1308","endLine":29,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1654","line":33,"column":10,"nodeType":"1307","messageId":"1308","endLine":33,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1655","line":38,"column":10,"nodeType":"1307","messageId":"1308","endLine":38,"endColumn":24},{"ruleId":"1320","severity":1,"message":"1447","line":44,"column":6,"nodeType":"1322","endLine":44,"endColumn":8,"suggestions":"1656"},{"ruleId":"1354","severity":1,"message":"1355","line":217,"column":34,"nodeType":"1356","messageId":"1357","endLine":217,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1657","line":222,"column":10,"nodeType":"1307","messageId":"1308","endLine":222,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1626","line":284,"column":13,"nodeType":"1307","messageId":"1308","endLine":284,"endColumn":25},{"ruleId":"1351","severity":1,"message":"1352","line":420,"column":23,"nodeType":"1353","endLine":420,"endColumn":90},{"ruleId":"1351","severity":1,"message":"1352","line":448,"column":19,"nodeType":"1353","endLine":448,"endColumn":73},{"ruleId":"1305","severity":1,"message":"1516","line":1,"column":46,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":59},{"ruleId":"1305","severity":1,"message":"1658","line":22,"column":3,"nodeType":"1307","messageId":"1308","endLine":22,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1576","line":23,"column":3,"nodeType":"1307","messageId":"1308","endLine":23,"endColumn":14},{"ruleId":"1320","severity":1,"message":"1577","line":42,"column":6,"nodeType":"1322","endLine":42,"endColumn":8,"suggestions":"1659"},{"ruleId":"1305","severity":1,"message":"1334","line":50,"column":20,"nodeType":"1307","messageId":"1308","endLine":50,"endColumn":31},{"ruleId":"1305","severity":1,"message":"1579","line":64,"column":24,"nodeType":"1307","messageId":"1308","endLine":64,"endColumn":39},{"ruleId":"1305","severity":1,"message":"1660","line":124,"column":26,"nodeType":"1307","messageId":"1308","endLine":124,"endColumn":43},{"ruleId":"1305","severity":1,"message":"1580","line":126,"column":10,"nodeType":"1307","messageId":"1308","endLine":126,"endColumn":23},{"ruleId":"1305","severity":1,"message":"1582","line":151,"column":22,"nodeType":"1307","messageId":"1308","endLine":151,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1583","line":160,"column":9,"nodeType":"1307","messageId":"1308","endLine":160,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1584","line":188,"column":25,"nodeType":"1307","messageId":"1308","endLine":188,"endColumn":42},{"ruleId":"1305","severity":1,"message":"1585","line":189,"column":22,"nodeType":"1307","messageId":"1308","endLine":189,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1587","line":190,"column":16,"nodeType":"1307","messageId":"1308","endLine":190,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1588","line":192,"column":22,"nodeType":"1307","messageId":"1308","endLine":192,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1590","line":194,"column":27,"nodeType":"1307","messageId":"1308","endLine":194,"endColumn":46},{"ruleId":"1305","severity":1,"message":"1591","line":197,"column":24,"nodeType":"1307","messageId":"1308","endLine":197,"endColumn":40},{"ruleId":"1305","severity":1,"message":"1592","line":215,"column":15,"nodeType":"1307","messageId":"1308","endLine":215,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1593","line":217,"column":19,"nodeType":"1307","messageId":"1308","endLine":217,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1596","line":238,"column":9,"nodeType":"1307","messageId":"1308","endLine":238,"endColumn":25},{"ruleId":"1305","severity":1,"message":"1597","line":243,"column":9,"nodeType":"1307","messageId":"1308","endLine":243,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1598","line":245,"column":9,"nodeType":"1307","messageId":"1308","endLine":245,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1599","line":263,"column":10,"nodeType":"1307","messageId":"1308","endLine":263,"endColumn":34},{"ruleId":"1305","severity":1,"message":"1600","line":263,"column":36,"nodeType":"1307","messageId":"1308","endLine":263,"endColumn":60},{"ruleId":"1305","severity":1,"message":"1601","line":264,"column":10,"nodeType":"1307","messageId":"1308","endLine":264,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1602","line":264,"column":23,"nodeType":"1307","messageId":"1308","endLine":264,"endColumn":37},{"ruleId":"1305","severity":1,"message":"1603","line":267,"column":10,"nodeType":"1307","messageId":"1308","endLine":267,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1604","line":268,"column":18,"nodeType":"1307","messageId":"1308","endLine":268,"endColumn":27},{"ruleId":"1305","severity":1,"message":"1605","line":276,"column":10,"nodeType":"1307","messageId":"1308","endLine":276,"endColumn":26},{"ruleId":"1305","severity":1,"message":"1606","line":277,"column":10,"nodeType":"1307","messageId":"1308","endLine":277,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1607","line":278,"column":10,"nodeType":"1307","messageId":"1308","endLine":278,"endColumn":23},{"ruleId":"1305","severity":1,"message":"1608","line":284,"column":10,"nodeType":"1307","messageId":"1308","endLine":284,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1609","line":292,"column":10,"nodeType":"1307","messageId":"1308","endLine":292,"endColumn":18},{"ruleId":"1320","severity":1,"message":"1610","line":311,"column":6,"nodeType":"1322","endLine":311,"endColumn":8,"suggestions":"1661"},{"ruleId":"1320","severity":1,"message":"1324","line":316,"column":6,"nodeType":"1322","endLine":316,"endColumn":20,"suggestions":"1662"},{"ruleId":"1305","severity":1,"message":"1613","line":384,"column":9,"nodeType":"1307","messageId":"1308","endLine":384,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1663","line":392,"column":9,"nodeType":"1307","messageId":"1308","endLine":392,"endColumn":28},{"ruleId":"1351","severity":1,"message":"1352","line":741,"column":25,"nodeType":"1353","endLine":741,"endColumn":136},{"ruleId":"1351","severity":1,"message":"1352","line":752,"column":25,"nodeType":"1353","endLine":752,"endColumn":134},{"ruleId":"1354","severity":1,"message":"1390","line":782,"column":58,"nodeType":"1356","messageId":"1357","endLine":782,"endColumn":60},{"ruleId":"1354","severity":1,"message":"1390","line":929,"column":33,"nodeType":"1356","messageId":"1357","endLine":929,"endColumn":35},{"ruleId":"1354","severity":1,"message":"1390","line":930,"column":28,"nodeType":"1356","messageId":"1357","endLine":930,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1614","line":936,"column":9,"nodeType":"1307","messageId":"1308","endLine":936,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1615","line":952,"column":9,"nodeType":"1307","messageId":"1308","endLine":952,"endColumn":17},{"ruleId":"1354","severity":1,"message":"1390","line":955,"column":13,"nodeType":"1356","messageId":"1357","endLine":955,"endColumn":15},{"ruleId":"1354","severity":1,"message":"1390","line":961,"column":20,"nodeType":"1356","messageId":"1357","endLine":961,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1499","line":1065,"column":32,"nodeType":"1500","messageId":"1501","endLine":1065,"endColumn":34},{"ruleId":"1305","severity":1,"message":"1616","line":1162,"column":10,"nodeType":"1307","messageId":"1308","endLine":1162,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1664","line":1280,"column":9,"nodeType":"1307","messageId":"1308","endLine":1280,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1665","line":1282,"column":11,"nodeType":"1307","messageId":"1308","endLine":1282,"endColumn":14},{"ruleId":"1354","severity":1,"message":"1390","line":1322,"column":38,"nodeType":"1356","messageId":"1357","endLine":1322,"endColumn":40},{"ruleId":"1354","severity":1,"message":"1390","line":1336,"column":38,"nodeType":"1356","messageId":"1357","endLine":1336,"endColumn":40},{"ruleId":"1354","severity":1,"message":"1390","line":1419,"column":20,"nodeType":"1356","messageId":"1357","endLine":1419,"endColumn":22},{"ruleId":"1354","severity":1,"message":"1390","line":1424,"column":23,"nodeType":"1356","messageId":"1357","endLine":1424,"endColumn":25},{"ruleId":"1354","severity":1,"message":"1355","line":1523,"column":23,"nodeType":"1356","messageId":"1357","endLine":1523,"endColumn":25},{"ruleId":"1623","severity":1,"message":"1624","line":1608,"column":13,"nodeType":"1625","messageId":"1357","endLine":1608,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1626","line":1649,"column":15,"nodeType":"1307","messageId":"1308","endLine":1649,"endColumn":27},{"ruleId":"1305","severity":1,"message":"1666","line":1840,"column":10,"nodeType":"1307","messageId":"1308","endLine":1840,"endColumn":21},{"ruleId":"1320","severity":1,"message":"1634","line":1844,"column":6,"nodeType":"1322","endLine":1844,"endColumn":20,"suggestions":"1667"},{"ruleId":"1320","severity":1,"message":"1636","line":1885,"column":6,"nodeType":"1322","endLine":1885,"endColumn":25,"suggestions":"1668"},{"ruleId":"1320","severity":1,"message":"1638","line":1941,"column":6,"nodeType":"1322","endLine":1941,"endColumn":23,"suggestions":"1669"},{"ruleId":"1498","severity":1,"message":"1529","line":2816,"column":48,"nodeType":"1500","messageId":"1530","endLine":2816,"endColumn":50},{"ruleId":"1351","severity":1,"message":"1352","line":3432,"column":9,"nodeType":"1353","endLine":3435,"endColumn":11},{"ruleId":"1351","severity":1,"message":"1352","line":3436,"column":9,"nodeType":"1353","endLine":3439,"endColumn":11},{"ruleId":"1305","severity":1,"message":"1479","line":12,"column":10,"nodeType":"1307","messageId":"1308","endLine":12,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1670","line":19,"column":19,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":29},{"ruleId":"1305","severity":1,"message":"1671","line":23,"column":10,"nodeType":"1307","messageId":"1308","endLine":23,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1672","line":23,"column":21,"nodeType":"1307","messageId":"1308","endLine":23,"endColumn":33},{"ruleId":"1305","severity":1,"message":"1335","line":24,"column":22,"nodeType":"1307","messageId":"1308","endLine":24,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1447","line":45,"column":6,"nodeType":"1322","endLine":45,"endColumn":8,"suggestions":"1673"},{"ruleId":"1305","severity":1,"message":"1674","line":81,"column":9,"nodeType":"1307","messageId":"1308","endLine":81,"endColumn":23},{"ruleId":"1305","severity":1,"message":"1675","line":126,"column":9,"nodeType":"1307","messageId":"1308","endLine":126,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1676","line":147,"column":9,"nodeType":"1307","messageId":"1308","endLine":147,"endColumn":42},{"ruleId":"1351","severity":1,"message":"1352","line":235,"column":15,"nodeType":"1353","endLine":235,"endColumn":75},{"ruleId":"1305","severity":1,"message":"1335","line":24,"column":22,"nodeType":"1307","messageId":"1308","endLine":24,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1677","line":32,"column":9,"nodeType":"1307","messageId":"1308","endLine":32,"endColumn":22},{"ruleId":"1320","severity":1,"message":"1678","line":53,"column":6,"nodeType":"1322","endLine":53,"endColumn":8,"suggestions":"1679"},{"ruleId":"1305","severity":1,"message":"1680","line":83,"column":13,"nodeType":"1307","messageId":"1308","endLine":83,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1681","line":119,"column":13,"nodeType":"1307","messageId":"1308","endLine":119,"endColumn":19},{"ruleId":"1305","severity":1,"message":"1626","line":140,"column":13,"nodeType":"1307","messageId":"1308","endLine":140,"endColumn":25},{"ruleId":"1305","severity":1,"message":"1682","line":2,"column":10,"nodeType":"1307","messageId":"1308","endLine":2,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1343","line":3,"column":8,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1506","line":5,"column":2,"nodeType":"1307","messageId":"1308","endLine":5,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1512","line":6,"column":2,"nodeType":"1307","messageId":"1308","endLine":6,"endColumn":12},{"ruleId":"1305","severity":1,"message":"1329","line":7,"column":2,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1445","line":9,"column":2,"nodeType":"1307","messageId":"1308","endLine":9,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1331","line":13,"column":10,"nodeType":"1307","messageId":"1308","endLine":13,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1683","line":17,"column":21,"nodeType":"1307","messageId":"1308","endLine":17,"endColumn":32},{"ruleId":"1305","severity":1,"message":"1335","line":22,"column":21,"nodeType":"1307","messageId":"1308","endLine":22,"endColumn":34},{"ruleId":"1305","severity":1,"message":"1670","line":27,"column":18,"nodeType":"1307","messageId":"1308","endLine":27,"endColumn":28},{"ruleId":"1305","severity":1,"message":"1560","line":28,"column":9,"nodeType":"1307","messageId":"1308","endLine":28,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1684","line":28,"column":20,"nodeType":"1307","messageId":"1308","endLine":28,"endColumn":32},{"ruleId":"1305","severity":1,"message":"1685","line":29,"column":9,"nodeType":"1307","messageId":"1308","endLine":29,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1686","line":57,"column":9,"nodeType":"1307","messageId":"1308","endLine":57,"endColumn":20},{"ruleId":"1320","severity":1,"message":"1447","line":92,"column":5,"nodeType":"1322","endLine":92,"endColumn":7,"suggestions":"1687"},{"ruleId":"1305","severity":1,"message":"1688","line":93,"column":8,"nodeType":"1307","messageId":"1308","endLine":93,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1689","line":100,"column":8,"nodeType":"1307","messageId":"1308","endLine":100,"endColumn":24},{"ruleId":"1498","severity":1,"message":"1499","line":137,"column":63,"nodeType":"1500","messageId":"1501","endLine":137,"endColumn":65},{"ruleId":"1305","severity":1,"message":"1330","line":3,"column":10,"nodeType":"1307","messageId":"1308","endLine":3,"endColumn":20},{"ruleId":"1305","severity":1,"message":"1331","line":4,"column":10,"nodeType":"1307","messageId":"1308","endLine":4,"endColumn":14},{"ruleId":"1305","severity":1,"message":"1485","line":7,"column":50,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":56},{"ruleId":"1305","severity":1,"message":"1506","line":9,"column":3,"nodeType":"1307","messageId":"1308","endLine":9,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1329","line":11,"column":3,"nodeType":"1307","messageId":"1308","endLine":11,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1690","line":14,"column":3,"nodeType":"1307","messageId":"1308","endLine":14,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1316","line":20,"column":10,"nodeType":"1307","messageId":"1308","endLine":20,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1640","line":20,"column":20,"nodeType":"1307","messageId":"1308","endLine":20,"endColumn":26},{"ruleId":"1305","severity":1,"message":"1335","line":32,"column":22,"nodeType":"1307","messageId":"1308","endLine":32,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1691","line":49,"column":10,"nodeType":"1307","messageId":"1308","endLine":49,"endColumn":13},{"ruleId":"1305","severity":1,"message":"1692","line":49,"column":15,"nodeType":"1307","messageId":"1308","endLine":49,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1693","line":49,"column":24,"nodeType":"1307","messageId":"1308","endLine":49,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1694","line":50,"column":9,"nodeType":"1307","messageId":"1308","endLine":50,"endColumn":15},{"ruleId":"1320","severity":1,"message":"1447","line":56,"column":6,"nodeType":"1322","endLine":56,"endColumn":8,"suggestions":"1695"},{"ruleId":"1305","severity":1,"message":"1512","line":5,"column":21,"nodeType":"1307","messageId":"1308","endLine":5,"endColumn":31},{"ruleId":"1305","severity":1,"message":"1335","line":12,"column":22,"nodeType":"1307","messageId":"1308","endLine":12,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1696","line":26,"column":6,"nodeType":"1322","endLine":26,"endColumn":8,"suggestions":"1697"},{"ruleId":"1320","severity":1,"message":"1698","line":30,"column":6,"nodeType":"1322","endLine":30,"endColumn":16,"suggestions":"1699"},{"ruleId":"1649","severity":1,"message":"1700","line":467,"column":21,"nodeType":"1353","endLine":467,"endColumn":78},{"ruleId":"1305","severity":1,"message":"1332","line":11,"column":10,"nodeType":"1307","messageId":"1308","endLine":11,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1333","line":11,"column":18,"nodeType":"1307","messageId":"1308","endLine":11,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1701","line":20,"column":10,"nodeType":"1307","messageId":"1308","endLine":20,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1702","line":21,"column":10,"nodeType":"1307","messageId":"1308","endLine":21,"endColumn":18},{"ruleId":"1305","severity":1,"message":"1703","line":23,"column":38,"nodeType":"1307","messageId":"1308","endLine":23,"endColumn":51},{"ruleId":"1305","severity":1,"message":"1704","line":24,"column":25,"nodeType":"1307","messageId":"1308","endLine":24,"endColumn":41},{"ruleId":"1305","severity":1,"message":"1335","line":26,"column":22,"nodeType":"1307","messageId":"1308","endLine":26,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1705","line":42,"column":6,"nodeType":"1322","endLine":42,"endColumn":8,"suggestions":"1706"},{"ruleId":"1354","severity":1,"message":"1390","line":82,"column":20,"nodeType":"1356","messageId":"1357","endLine":82,"endColumn":22},{"ruleId":"1305","severity":1,"message":"1707","line":89,"column":9,"nodeType":"1307","messageId":"1308","endLine":89,"endColumn":23},{"ruleId":"1305","severity":1,"message":"1708","line":90,"column":9,"nodeType":"1307","messageId":"1308","endLine":90,"endColumn":13},{"ruleId":"1649","severity":1,"message":"1700","line":123,"column":9,"nodeType":"1353","endLine":130,"endColumn":10},{"ruleId":"1535","severity":1,"message":"1709","line":123,"column":9,"nodeType":"1353","endLine":130,"endColumn":10},{"ruleId":"1649","severity":1,"message":"1700","line":145,"column":11,"nodeType":"1353","endLine":145,"endColumn":73},{"ruleId":"1351","severity":1,"message":"1352","line":151,"column":9,"nodeType":"1353","endLine":151,"endColumn":86},{"ruleId":"1649","severity":1,"message":"1700","line":154,"column":9,"nodeType":"1353","endLine":161,"endColumn":10},{"ruleId":"1535","severity":1,"message":"1709","line":154,"column":9,"nodeType":"1353","endLine":161,"endColumn":10},{"ruleId":"1351","severity":1,"message":"1352","line":164,"column":13,"nodeType":"1353","endLine":164,"endColumn":92},{"ruleId":"1649","severity":1,"message":"1700","line":172,"column":11,"nodeType":"1353","endLine":172,"endColumn":60},{"ruleId":"1351","severity":1,"message":"1352","line":173,"column":13,"nodeType":"1353","endLine":173,"endColumn":110},{"ruleId":"1649","severity":1,"message":"1700","line":175,"column":11,"nodeType":"1353","endLine":175,"endColumn":50},{"ruleId":"1351","severity":1,"message":"1352","line":176,"column":13,"nodeType":"1353","endLine":176,"endColumn":110},{"ruleId":"1649","severity":1,"message":"1700","line":186,"column":9,"nodeType":"1353","endLine":193,"endColumn":10},{"ruleId":"1535","severity":1,"message":"1709","line":186,"column":9,"nodeType":"1353","endLine":193,"endColumn":10},{"ruleId":"1710","severity":1,"message":"1711","line":188,"column":16,"nodeType":"1314","messageId":"1712","endLine":188,"endColumn":30},{"ruleId":"1649","severity":1,"message":"1700","line":202,"column":11,"nodeType":"1353","endLine":207,"endColumn":12},{"ruleId":"1649","severity":1,"message":"1700","line":212,"column":15,"nodeType":"1353","endLine":221,"endColumn":16},{"ruleId":"1649","severity":1,"message":"1700","line":229,"column":9,"nodeType":"1353","endLine":236,"endColumn":10},{"ruleId":"1535","severity":1,"message":"1709","line":229,"column":9,"nodeType":"1353","endLine":236,"endColumn":10},{"ruleId":"1351","severity":1,"message":"1352","line":239,"column":13,"nodeType":"1353","endLine":239,"endColumn":92},{"ruleId":"1649","severity":1,"message":"1700","line":247,"column":11,"nodeType":"1353","endLine":247,"endColumn":60},{"ruleId":"1351","severity":1,"message":"1352","line":248,"column":13,"nodeType":"1353","endLine":248,"endColumn":110},{"ruleId":"1649","severity":1,"message":"1700","line":250,"column":11,"nodeType":"1353","endLine":250,"endColumn":50},{"ruleId":"1351","severity":1,"message":"1352","line":251,"column":13,"nodeType":"1353","endLine":251,"endColumn":110},{"ruleId":"1351","severity":1,"message":"1352","line":263,"column":13,"nodeType":"1353","endLine":263,"endColumn":129},{"ruleId":"1305","severity":1,"message":"1335","line":18,"column":22,"nodeType":"1307","messageId":"1308","endLine":18,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1514","line":32,"column":6,"nodeType":"1322","endLine":32,"endColumn":8,"suggestions":"1713"},{"ruleId":"1498","severity":1,"message":"1499","line":110,"column":28,"nodeType":"1500","messageId":"1501","endLine":110,"endColumn":30},{"ruleId":"1351","severity":1,"message":"1352","line":174,"column":13,"nodeType":"1353","endLine":174,"endColumn":73},{"ruleId":"1305","severity":1,"message":"1350","line":1,"column":17,"nodeType":"1307","messageId":"1308","endLine":1,"endColumn":26},{"ruleId":"1451","severity":1,"message":"1452","line":8,"column":7,"nodeType":"1353","messageId":"1453","endLine":8,"endColumn":54,"fix":"1714"},{"ruleId":"1440","severity":1,"message":"1441","line":13,"column":3,"nodeType":"1442","messageId":"1443","endLine":51,"endColumn":4},{"ruleId":"1715","severity":1,"message":"1716","line":13,"column":3,"nodeType":"1442","messageId":"1717","endLine":51,"endColumn":4},{"ruleId":"1305","severity":1,"message":"1332","line":7,"column":10,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":16},{"ruleId":"1305","severity":1,"message":"1333","line":7,"column":18,"nodeType":"1307","messageId":"1308","endLine":7,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1467","line":29,"column":10,"nodeType":"1307","messageId":"1308","endLine":29,"endColumn":17},{"ruleId":"1305","severity":1,"message":"1335","line":31,"column":22,"nodeType":"1307","messageId":"1308","endLine":31,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1718","line":32,"column":10,"nodeType":"1307","messageId":"1308","endLine":32,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1719","line":32,"column":23,"nodeType":"1307","messageId":"1308","endLine":32,"endColumn":37},{"ruleId":"1320","severity":1,"message":"1514","line":48,"column":6,"nodeType":"1322","endLine":48,"endColumn":8,"suggestions":"1720"},{"ruleId":"1351","severity":1,"message":"1352","line":116,"column":23,"nodeType":"1353","endLine":116,"endColumn":123},{"ruleId":"1351","severity":1,"message":"1352","line":120,"column":23,"nodeType":"1353","endLine":120,"endColumn":126},{"ruleId":"1305","severity":1,"message":"1670","line":16,"column":19,"nodeType":"1307","messageId":"1308","endLine":16,"endColumn":29},{"ruleId":"1305","severity":1,"message":"1335","line":17,"column":22,"nodeType":"1307","messageId":"1308","endLine":17,"endColumn":35},{"ruleId":"1305","severity":1,"message":"1721","line":23,"column":10,"nodeType":"1307","messageId":"1308","endLine":23,"endColumn":21},{"ruleId":"1305","severity":1,"message":"1722","line":25,"column":38,"nodeType":"1307","messageId":"1308","endLine":25,"endColumn":51},{"ruleId":"1320","severity":1,"message":"1447","line":32,"column":6,"nodeType":"1322","endLine":32,"endColumn":8,"suggestions":"1723"},{"ruleId":"1305","severity":1,"message":"1724","line":71,"column":19,"nodeType":"1307","messageId":"1308","endLine":71,"endColumn":29},{"ruleId":"1305","severity":1,"message":"1608","line":73,"column":10,"nodeType":"1307","messageId":"1308","endLine":73,"endColumn":15},{"ruleId":"1305","severity":1,"message":"1614","line":77,"column":9,"nodeType":"1307","messageId":"1308","endLine":77,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1499","line":93,"column":34,"nodeType":"1500","messageId":"1501","endLine":93,"endColumn":36},{"ruleId":"1305","severity":1,"message":"1335","line":19,"column":22,"nodeType":"1307","messageId":"1308","endLine":19,"endColumn":35},{"ruleId":"1320","severity":1,"message":"1514","line":26,"column":6,"nodeType":"1322","endLine":26,"endColumn":8,"suggestions":"1725"},{"ruleId":"1351","severity":1,"message":"1352","line":231,"column":17,"nodeType":"1353","endLine":231,"endColumn":77},"no-native-reassign",["1726"],"no-negated-in-lhs",["1727"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'FooterMenu' is defined but never used.","'V2LadingCreateComponent' is defined but never used.","'LoginComponent' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","'Location' is defined but never used.","'APIKeyOld' is defined but never used.","'setDefault' is assigned a value but never used.","'IsActive' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onGetLocation'. Either include it or remove the dependency array.","ArrayExpression",["1728"],"React Hook useEffect has a missing dependency: 'APIC_spServiceGetMany'. Either include it or remove the dependency array.",["1729"],"React Hook useEffect has missing dependencies: 'APIC_spServiceGetMany' and '_default'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setValueS' needs the current value of '_default'.",["1730"],"'useSelector' is defined but never used.","'DecodeString' is defined but never used.","'useCookies' is defined but never used.","'Link' is defined but never used.","'APIKey' is defined but never used.","'TOKEN_DEVICE' is defined but never used.","'setCustomer' is assigned a value but never used.","'setCustomerID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CustomerID', 'history', and 'onGetCustomerSenderAddress'. Either include them or remove the dependency array.",["1731"],"React Hook useEffect has missing dependencies: '_default' and 'data'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setValueS' needs the current value of '_default'.",["1732"],"Assignments to the 'onLoad' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: '_default' and 'onGetCustomerSenderAddress'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setValueS' needs the current value of '_default'.",["1733"],"'Select' is defined but never used.","React Hook React.useMemo has a missing dependency: 'type'. Either include it or remove the dependency array.",["1734"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","'useState' is defined but never used.","'DateTimePicker' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'GetLadingDetail'. Either include it or remove the dependency array.",["1735"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onGetData'. Either include it or remove the dependency array.",["1736"],"React Hook useEffect has missing dependencies: '_default', 'data', and 'onGetData'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setValueS' needs the current value of '_default'.",["1737"],["1738"],"'SelectTypeAddress' is defined but never used.","'withGoogleMap' is defined but never used.","'withScriptjs' is defined but never used.","'GoogleMap' is defined but never used.","'Marker' is defined but never used.","'confirmAlert' is defined but never used.","'setShowMap' is assigned a value but never used.","'Title' is assigned a value but never used.","'TypeAddressRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CityId.label', 'CityId.value', 'DistrictId.label', 'DistrictId.value', 'Streets', 'WardId.label', and 'WardId.value'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFullAddress' needs the current value of 'Streets'.",["1739"],"React Hook useEffect has a missing dependency: 'CPN_spManagerAddress_Get'. Either include it or remove the dependency array.",["1740"],"React Hook useEffect has a missing dependency: 'getListCityFromLocal'. Either include it or remove the dependency array.",["1741"],["1742"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'take' is defined but never used.","'cancel' is defined but never used.","'EN' is defined but never used.","'VN' is defined but never used.","'param' is defined but never used.","Expected '===' and instead saw '=='.","'Type' is assigned a value but never used.","'React' is defined but never used.","no-useless-escape","Unnecessary escape character: \\$.","unnecessaryEscape",["1743","1744"],"Unnecessary escape character: \\^.",["1745","1746"],"Unnecessary escape character: \\*.",["1747","1748"],["1749","1750"],["1751","1752"],["1753","1754"],"Unnecessary escape character: \\/.",["1755","1756"],["1757","1758"],["1759","1760"],["1761","1762"],["1763","1764"],["1765","1766"],["1767","1768"],["1769","1770"],["1771","1772"],["1773","1774"],["1775","1776"],["1777","1778"],["1779","1780"],["1781","1782"],["1783","1784"],["1785","1786"],["1787","1788"],["1789","1790"],["1791","1792"],["1793","1794"],["1795","1796"],["1797","1798"],["1799","1800"],["1801","1802"],["1803","1804"],["1805","1806"],["1807","1808"],["1809","1810"],["1811","1812"],["1813","1814"],["1815","1816"],["1817","1818"],["1819","1820"],["1821","1822"],["1823","1824"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useRef' is defined but never used.","'FormatNumber' is defined but never used.","'CodeBK' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CustomerID' and 'history'. Either include them or remove the dependency array.",["1825"],"'NoData' is assigned a value but never used.","'a' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"1826","text":"1827"},"'CustomerID' is assigned a value but never used.","'LadingCode' is assigned a value but never used.","'setLadingCode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'APIC_spLadingGetDataPrint' and 'location.search'. Either include them or remove the dependency array.",["1828"],"'pageprint' is assigned a value but never used.","'setpageprint' is assigned a value but never used.","'HtmlPrint' is assigned a value but never used.","'setHtmlPrint' is assigned a value but never used.","'setPhone' is assigned a value but never used.","'setSMSOTP' is assigned a value but never used.",["1829"],"'disable' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'SocialIdRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCustomerName' and 'setEmail'. Either include them or remove the dependency array.",["1830"],"'ErrWard' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'list' is assigned a value but never used.","'PaginationTable' is defined but never used.","'CustomerAction' is defined but never used.","'Alert' is defined but never used.","'setPassword' is assigned a value but never used.","'setPasswordConfirm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'APIC_CustomerCheckResetPass'. Either include it or remove the dependency array.",["1831"],"'Avarta' is defined but never used.","'FACEBOOK_LOGIN_APPID' is defined but never used.","'setCustomerName' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setCompany' is assigned a value but never used.","'setBankNumber' is assigned a value but never used.","'setBankNumberName' is assigned a value but never used.","'setBankName' is assigned a value but never used.","'setBankBranch' is assigned a value but never used.",["1832"],"'responseFacebook' is assigned a value but never used.","'FacebookLogin' is defined but never used.","'setUsername' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["1726"],["1727"],"'setCode' is assigned a value but never used.",["1833"],"'Alertsuccess' is defined but never used.","'FormatDate' is defined but never used.","'ReportAction' is defined but never used.","'useInput' is defined but never used.",["1834"],["1835"],"'Alerterror' is defined but never used.","'PaginationTable2' is defined but never used.","React Hook useEffect has missing dependencies: 'CustomerID', '_Init', and 'history'. Either include them or remove the dependency array.",["1836"],"'useDebugValue' is defined but never used.","'InfoPosst' is assigned a value but never used.","'TotalActive' is assigned a value but never used.","'TotalNotActive' is assigned a value but never used.","'dataFilter' is assigned a value but never used.","'setToDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'APIC_spVehicle_List', 'CPN_spRouteVehicle_List_Update', 'Filter', 'FilterVehicle', and 'FromDate'. Either include them or remove the dependency array. You can also do a functional update 'setFromDate(F => ...)' if you only need 'FromDate' in the 'setFromDate' call.",["1837"],"Array.prototype.filter() expects a return value from arrow function.","React Hook useEffect has a missing dependency: 'FilterVehicle'. Either include it or remove the dependency array.",["1838"],"'CPN_spRouterPostOffice_List' is assigned a value but never used.","'handleClickVehicleSearch' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/role-supports-aria-props","The attribute aria-expanded is not supported by the role heading. This role is implicit on the element h5.","'Code' is assigned a value but never used.","'bindCode' is assigned a value but never used.","'CodeRef' is assigned a value but never used.","'AddressOld' is assigned a value but never used.","'NoResultMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'APIC_spCustomerRecipientLoad', 'CustomerID', and 'history'. Either include them or remove the dependency array.",["1839"],"'DataTable' is defined but never used.","'setViewList' is assigned a value but never used.","'ViewDetailImport' is assigned a value but never used.","'setViewDetailImport' is assigned a value but never used.","'ViewDetailOutput' is assigned a value but never used.","'setViewDetailOutput' is assigned a value but never used.","'ReportDataDetailImport' is assigned a value but never used.","'ReportDataDetailOutput' is assigned a value but never used.",["1840"],"'setViewDetail' is assigned a value but never used.",["1841"],"'columns' is assigned a value but never used.","'ViewReportDetail' is assigned a value but never used.",["1842"],"'changeSelectMonth' is assigned a value but never used.","'ReportDataDetail' is assigned a value but never used.","'DataChart' is assigned a value but never used.",["1843"],"'Company' is assigned a value but never used.","'bindCompany' is assigned a value but never used.","'CompanyRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'APIC_spCustomerSenderAddressList', 'CustomerID', and 'history'. Either include them or remove the dependency array.",["1844"],["1845"],["1846"],["1847"],"'_date' is assigned a value but never used.","'bindFromDate' is assigned a value but never used.","'bindToDate' is assigned a value but never used.","'FromDateRef' is assigned a value but never used.","'ToDateRef' is assigned a value but never used.",["1848"],"'ValidNumber' is defined but never used.","React Hook useEffect has missing dependencies: 'Customer' and 'history'. Either include them or remove the dependency array.",["1849"],"'setPostOfficeId' is assigned a value but never used.","'RecipientMeno' is assigned a value but never used.","'RecipientAddressOld' is assigned a value but never used.","'bindParnerCode' is assigned a value but never used.","'ParnerCodeRef' is assigned a value but never used.","'bindPhuQuocIsLand' is assigned a value but never used.","'bindIsProtocol' is assigned a value but never used.","'setIsProtocol' is assigned a value but never used.","'bindIsHD' is assigned a value but never used.","'bindIsDelivery' is assigned a value but never used.","'setIsDelivery' is assigned a value but never used.","'bindIsNumberCoCheck' is assigned a value but never used.","'bindSupperMarket' is assigned a value but never used.","'bindCod' is assigned a value but never used.","'bindInsured' is assigned a value but never used.","'CodRef' is assigned a value but never used.","'InsuredRef' is assigned a value but never used.","'InsuredPricesRef' is assigned a value but never used.","'CODPricesRef' is assigned a value but never used.","'SearchcodeRef' is assigned a value but never used.","'getCustomerRecipientLoad' is assigned a value but never used.","'setCustomerRecipientLoad' is assigned a value but never used.","'dataAddress' is assigned a value but never used.","'setdataAddress' is assigned a value but never used.","'IsAcctive' is assigned a value but never used.","'setIsLoad' is assigned a value but never used.","'disablerecipient' is assigned a value but never used.","'showinggtgt' is assigned a value but never used.","'showingdetail' is assigned a value but never used.","'State' is assigned a value but never used.","'phoneReg' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'APIC_spLadingGetMany', 'APIC_spServiceGetMany', 'Customer', 'ReadLadingDraft', and 'history'. Either include them or remove the dependency array.",["1850"],["1851"],"'LadingDetail' is assigned a value but never used.","'allChecked' is assigned a value but never used.","'RegPhone' is assigned a value but never used.","'StreetSlect' is assigned a value but never used.","'CityCode' is assigned a value but never used.","'DistrictCode' is assigned a value but never used.","'WardCode' is assigned a value but never used.","'CityCodeTo' is assigned a value but never used.","'StreetList' is assigned a value but never used.","'setStreetList' is assigned a value but never used.","no-dupe-keys","Duplicate key 'PPXDPercent'.","ObjectExpression","'resultNotify' is assigned a value but never used.","'ListRecipientPhone' is assigned a value but never used.","'ListDataaddress' is assigned a value but never used.","'IsAcctivePhone' is assigned a value but never used.","'setIsAcctivePhone' is assigned a value but never used.","'setKeySetUpId' is assigned a value but never used.","'CodeAddress' is assigned a value but never used.","'ClearFormSetUp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CPN_spLocationCheckCustomer'. Either include it or remove the dependency array.",["1852"],"React Hook useEffect has a missing dependency: 'CPN_spLading_PriceMain'. Either include it or remove the dependency array.",["1853"],"React Hook useEffect has a missing dependency: 'CPN_spLadingGetAnotherServiceMoney'. Either include it or remove the dependency array.",["1854"],"'Lading' is defined but never used.","'config' is assigned a value but never used.","'Checked' is assigned a value but never used.","'setLadingcode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'APIC_spLadingGetMany', 'CustomerID', 'Status', and 'history'. Either include them or remove the dependency array.",["1855"],"'ViewDetail' is assigned a value but never used.","'db' is assigned a value but never used.","Duplicate key 'padding'.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CustomerID', 'history', and 'location.search'. Either include them or remove the dependency array.",["1856"],"'ShowForm' is assigned a value but never used.","'ShowUploadFile' is assigned a value but never used.",["1857"],"'TotalBill' is assigned a value but never used.","'RemoveAccents' is defined but never used.",["1858"],"'setAddressSetupId' is assigned a value but never used.",["1859"],["1860"],"'APIC_spLadingRemove' is assigned a value but never used.","'GetLatLng' is assigned a value but never used.","'AAA' is assigned a value but never used.","'OutlineSave' is assigned a value but never used.",["1861"],["1862"],["1863"],"'setDisable' is assigned a value but never used.","'AppAPIKey' is assigned a value but never used.","'setAppAPIKey' is assigned a value but never used.",["1864"],"'firtdatasearch' is assigned a value but never used.","'clickRow' is assigned a value but never used.","'APIC_spCustomerComplainList_clear' is assigned a value but never used.","'LadingCodeRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CustomerID', 'history', and 'location.Code'. Either include them or remove the dependency array.",["1865"],"'Codearr' is assigned a value but never used.","'result' is assigned a value but never used.","'connect' is defined but never used.","'CanvasChart' is defined but never used.","'setDataChart' is assigned a value but never used.","'DataCanvasChart' is assigned a value but never used.","'TotalWeight' is assigned a value but never used.",["1866"],"'convert' is assigned a value but never used.","'ChangeTypeSearch' is assigned a value but never used.","'GetCookieValue' is defined but never used.","'COD' is assigned a value but never used.","'bindCOD' is assigned a value but never used.","'setCOD' is assigned a value but never used.","'CODRef' is assigned a value but never used.",["1867"],"React Hook useEffect has a missing dependency: 'CustomerID'. Either include it or remove the dependency array.",["1868"],"React Hook useEffect has a missing dependency: 'System_spLogModule_Save'. Either include it or remove the dependency array.",["1869"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'LangName' is assigned a value but never used.","'LangIcon' is assigned a value but never used.","'setCodesearch' is assigned a value but never used.","'setCustomerGroup' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CustomerGroup', 'CustomerID', and 'initialLanguage'. Either include them or remove the dependency array.",["1870"],"'changeLanguage' is assigned a value but never used.","'lang' is assigned a value but never used.","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","no-script-url","Script URL is a form of eval.","unexpectedScriptURL",["1871"],{"range":"1872","text":"1827"},"no-unreachable","Unreachable code.","unreachableCode","'ServiceMeno' is assigned a value but never used.","'setServiceMeno' is assigned a value but never used.",["1873"],"'UploadError' is assigned a value but never used.","'setTotalSheet' is assigned a value but never used.",["1874"],"'setChecked' is assigned a value but never used.",["1875"],"no-global-assign","no-unsafe-negation",{"desc":"1876","fix":"1877"},{"desc":"1878","fix":"1879"},{"desc":"1880","fix":"1881"},{"desc":"1882","fix":"1883"},{"desc":"1884","fix":"1885"},{"desc":"1886","fix":"1887"},{"desc":"1888","fix":"1889"},{"desc":"1890","fix":"1891"},{"desc":"1892","fix":"1893"},{"desc":"1894","fix":"1895"},{"desc":"1876","fix":"1896"},{"desc":"1897","fix":"1898"},{"desc":"1899","fix":"1900"},{"desc":"1901","fix":"1902"},{"desc":"1884","fix":"1903"},{"messageId":"1904","fix":"1905","desc":"1906"},{"messageId":"1907","fix":"1908","desc":"1909"},{"messageId":"1904","fix":"1910","desc":"1906"},{"messageId":"1907","fix":"1911","desc":"1909"},{"messageId":"1904","fix":"1912","desc":"1906"},{"messageId":"1907","fix":"1913","desc":"1909"},{"messageId":"1904","fix":"1914","desc":"1906"},{"messageId":"1907","fix":"1915","desc":"1909"},{"messageId":"1904","fix":"1916","desc":"1906"},{"messageId":"1907","fix":"1917","desc":"1909"},{"messageId":"1904","fix":"1918","desc":"1906"},{"messageId":"1907","fix":"1919","desc":"1909"},{"messageId":"1904","fix":"1920","desc":"1906"},{"messageId":"1907","fix":"1921","desc":"1909"},{"messageId":"1904","fix":"1922","desc":"1906"},{"messageId":"1907","fix":"1923","desc":"1909"},{"messageId":"1904","fix":"1924","desc":"1906"},{"messageId":"1907","fix":"1925","desc":"1909"},{"messageId":"1904","fix":"1926","desc":"1906"},{"messageId":"1907","fix":"1927","desc":"1909"},{"messageId":"1904","fix":"1928","desc":"1906"},{"messageId":"1907","fix":"1929","desc":"1909"},{"messageId":"1904","fix":"1930","desc":"1906"},{"messageId":"1907","fix":"1931","desc":"1909"},{"messageId":"1904","fix":"1932","desc":"1906"},{"messageId":"1907","fix":"1933","desc":"1909"},{"messageId":"1904","fix":"1934","desc":"1906"},{"messageId":"1907","fix":"1935","desc":"1909"},{"messageId":"1904","fix":"1936","desc":"1906"},{"messageId":"1907","fix":"1937","desc":"1909"},{"messageId":"1904","fix":"1938","desc":"1906"},{"messageId":"1907","fix":"1939","desc":"1909"},{"messageId":"1904","fix":"1940","desc":"1906"},{"messageId":"1907","fix":"1941","desc":"1909"},{"messageId":"1904","fix":"1942","desc":"1906"},{"messageId":"1907","fix":"1943","desc":"1909"},{"messageId":"1904","fix":"1944","desc":"1906"},{"messageId":"1907","fix":"1945","desc":"1909"},{"messageId":"1904","fix":"1946","desc":"1906"},{"messageId":"1907","fix":"1947","desc":"1909"},{"messageId":"1904","fix":"1948","desc":"1906"},{"messageId":"1907","fix":"1949","desc":"1909"},{"messageId":"1904","fix":"1950","desc":"1906"},{"messageId":"1907","fix":"1951","desc":"1909"},{"messageId":"1904","fix":"1952","desc":"1906"},{"messageId":"1907","fix":"1953","desc":"1909"},{"messageId":"1904","fix":"1954","desc":"1906"},{"messageId":"1907","fix":"1955","desc":"1909"},{"messageId":"1904","fix":"1956","desc":"1906"},{"messageId":"1907","fix":"1957","desc":"1909"},{"messageId":"1904","fix":"1958","desc":"1906"},{"messageId":"1907","fix":"1959","desc":"1909"},{"messageId":"1904","fix":"1960","desc":"1906"},{"messageId":"1907","fix":"1961","desc":"1909"},{"messageId":"1904","fix":"1962","desc":"1906"},{"messageId":"1907","fix":"1963","desc":"1909"},{"messageId":"1904","fix":"1964","desc":"1906"},{"messageId":"1907","fix":"1965","desc":"1909"},{"messageId":"1904","fix":"1966","desc":"1906"},{"messageId":"1907","fix":"1967","desc":"1909"},{"messageId":"1904","fix":"1968","desc":"1906"},{"messageId":"1907","fix":"1969","desc":"1909"},{"messageId":"1904","fix":"1970","desc":"1906"},{"messageId":"1907","fix":"1971","desc":"1909"},{"messageId":"1904","fix":"1972","desc":"1906"},{"messageId":"1907","fix":"1973","desc":"1909"},{"messageId":"1904","fix":"1974","desc":"1906"},{"messageId":"1907","fix":"1975","desc":"1909"},{"messageId":"1904","fix":"1976","desc":"1906"},{"messageId":"1907","fix":"1977","desc":"1909"},{"messageId":"1904","fix":"1978","desc":"1906"},{"messageId":"1907","fix":"1979","desc":"1909"},{"messageId":"1904","fix":"1980","desc":"1906"},{"messageId":"1907","fix":"1981","desc":"1909"},{"messageId":"1904","fix":"1982","desc":"1906"},{"messageId":"1907","fix":"1983","desc":"1909"},{"messageId":"1904","fix":"1984","desc":"1906"},{"messageId":"1907","fix":"1985","desc":"1909"},{"messageId":"1904","fix":"1986","desc":"1906"},{"messageId":"1907","fix":"1987","desc":"1909"},{"messageId":"1904","fix":"1988","desc":"1906"},{"messageId":"1907","fix":"1989","desc":"1909"},{"desc":"1990","fix":"1991"},[5718,5718]," rel=\"noreferrer\"",{"desc":"1992","fix":"1993"},{"desc":"1990","fix":"1994"},{"desc":"1995","fix":"1996"},{"desc":"1997","fix":"1998"},{"desc":"1990","fix":"1999"},{"desc":"1990","fix":"2000"},{"desc":"1990","fix":"2001"},{"desc":"1990","fix":"2002"},{"desc":"2003","fix":"2004"},{"desc":"2005","fix":"2006"},{"desc":"2007","fix":"2008"},{"desc":"2009","fix":"2010"},{"desc":"2003","fix":"2011"},{"desc":"2003","fix":"2012"},{"desc":"1990","fix":"2013"},{"desc":"1990","fix":"2014"},{"desc":"2015","fix":"2016"},{"desc":"2003","fix":"2017"},{"desc":"2003","fix":"2018"},{"desc":"2003","fix":"2019"},{"desc":"1990","fix":"2020"},{"desc":"2021","fix":"2022"},{"desc":"2023","fix":"2024"},{"desc":"2025","fix":"2026"},{"desc":"2027","fix":"2028"},{"desc":"2029","fix":"2030"},{"desc":"2031","fix":"2032"},{"desc":"2033","fix":"2034"},{"desc":"2035","fix":"2036"},{"desc":"1990","fix":"2037"},{"desc":"2021","fix":"2038"},{"desc":"2023","fix":"2039"},{"desc":"2025","fix":"2040"},{"desc":"2027","fix":"2041"},{"desc":"2029","fix":"2042"},{"desc":"2031","fix":"2043"},{"desc":"1990","fix":"2044"},{"desc":"2045","fix":"2046"},{"desc":"1990","fix":"2047"},{"desc":"1990","fix":"2048"},{"desc":"2049","fix":"2050"},{"desc":"2051","fix":"2052"},{"desc":"2053","fix":"2054"},{"desc":"2003","fix":"2055"},[278,278],{"desc":"2003","fix":"2056"},{"desc":"1990","fix":"2057"},{"desc":"2003","fix":"2058"},"Update the dependencies array to be: [onActive, ParentID, onGetLocation]",{"range":"2059","text":"2060"},"Update the dependencies array to be: [APIC_spServiceGetMany]",{"range":"2061","text":"2062"},"Update the dependencies array to be: [APIC_spServiceGetMany, _default, onActive]",{"range":"2063","text":"2064"},"Update the dependencies array to be: [CustomerID, history, onGetCustomerSenderAddress]",{"range":"2065","text":"2066"},"Update the dependencies array to be: [_default, data, onActive]",{"range":"2067","text":"2068"},"Update the dependencies array to be: [_default, defaultLabel, onGetCustomerSenderAddress]",{"range":"2069","text":"2070"},"Update the dependencies array to be: [type]",{"range":"2071","text":"2072"},"Update the dependencies array to be: [GetLadingDetail, LadingCode, LadingId]",{"range":"2073","text":"2074"},"Update the dependencies array to be: [onGetData]",{"range":"2075","text":"2076"},"Update the dependencies array to be: [_default, data, onActive, onGetData]",{"range":"2077","text":"2078"},{"range":"2079","text":"2060"},"Update the dependencies array to be: [CityId.label, CityId.value, DistrictId.label, DistrictId.value, FullCheck, Streets, WardId.label, WardId.value]",{"range":"2080","text":"2081"},"Update the dependencies array to be: [CPN_spManagerAddress_Get, addressEditId]",{"range":"2082","text":"2083"},"Update the dependencies array to be: [getListCityFromLocal]",{"range":"2084","text":"2085"},{"range":"2086","text":"2068"},"removeEscape",{"range":"2087","text":"2088"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2089","text":"2090"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2091","text":"2088"},{"range":"2092","text":"2090"},{"range":"2093","text":"2088"},{"range":"2094","text":"2090"},{"range":"2095","text":"2088"},{"range":"2096","text":"2090"},{"range":"2097","text":"2088"},{"range":"2098","text":"2090"},{"range":"2099","text":"2088"},{"range":"2100","text":"2090"},{"range":"2101","text":"2088"},{"range":"2102","text":"2090"},{"range":"2103","text":"2088"},{"range":"2104","text":"2090"},{"range":"2105","text":"2088"},{"range":"2106","text":"2090"},{"range":"2107","text":"2088"},{"range":"2108","text":"2090"},{"range":"2109","text":"2088"},{"range":"2110","text":"2090"},{"range":"2111","text":"2088"},{"range":"2112","text":"2090"},{"range":"2113","text":"2088"},{"range":"2114","text":"2090"},{"range":"2115","text":"2088"},{"range":"2116","text":"2090"},{"range":"2117","text":"2088"},{"range":"2118","text":"2090"},{"range":"2119","text":"2088"},{"range":"2120","text":"2090"},{"range":"2121","text":"2088"},{"range":"2122","text":"2090"},{"range":"2123","text":"2088"},{"range":"2124","text":"2090"},{"range":"2125","text":"2088"},{"range":"2126","text":"2090"},{"range":"2127","text":"2088"},{"range":"2128","text":"2090"},{"range":"2129","text":"2088"},{"range":"2130","text":"2090"},{"range":"2131","text":"2088"},{"range":"2132","text":"2090"},{"range":"2133","text":"2088"},{"range":"2134","text":"2090"},{"range":"2135","text":"2088"},{"range":"2136","text":"2090"},{"range":"2137","text":"2088"},{"range":"2138","text":"2090"},{"range":"2139","text":"2088"},{"range":"2140","text":"2090"},{"range":"2141","text":"2088"},{"range":"2142","text":"2090"},{"range":"2143","text":"2088"},{"range":"2144","text":"2090"},{"range":"2145","text":"2088"},{"range":"2146","text":"2090"},{"range":"2147","text":"2088"},{"range":"2148","text":"2090"},{"range":"2149","text":"2088"},{"range":"2150","text":"2090"},{"range":"2151","text":"2088"},{"range":"2152","text":"2090"},{"range":"2153","text":"2088"},{"range":"2154","text":"2090"},{"range":"2155","text":"2088"},{"range":"2156","text":"2090"},{"range":"2157","text":"2088"},{"range":"2158","text":"2090"},{"range":"2159","text":"2088"},{"range":"2160","text":"2090"},{"range":"2161","text":"2088"},{"range":"2162","text":"2090"},{"range":"2163","text":"2088"},{"range":"2164","text":"2090"},{"range":"2165","text":"2088"},{"range":"2166","text":"2090"},{"range":"2167","text":"2088"},{"range":"2168","text":"2090"},{"range":"2169","text":"2088"},{"range":"2170","text":"2090"},"Update the dependencies array to be: [CustomerID, history]",{"range":"2171","text":"2172"},"Update the dependencies array to be: [APIC_spLadingGetDataPrint, location.search]",{"range":"2173","text":"2174"},{"range":"2175","text":"2172"},"Update the dependencies array to be: [setCustomerName, setEmail]",{"range":"2176","text":"2177"},"Update the dependencies array to be: [APIC_CustomerCheckResetPass]",{"range":"2178","text":"2179"},{"range":"2180","text":"2172"},{"range":"2181","text":"2172"},{"range":"2182","text":"2172"},{"range":"2183","text":"2172"},"Update the dependencies array to be: [CustomerID, _Init, history]",{"range":"2184","text":"2185"},"Update the dependencies array to be: [APIC_spVehicle_List, CPN_spRouteVehicle_List_Update, Filter, FilterVehicle, FromDate]",{"range":"2186","text":"2187"},"Update the dependencies array to be: [Filter, FilterVehicle]",{"range":"2188","text":"2189"},"Update the dependencies array to be: [APIC_spCustomerRecipientLoad, CustomerID, history]",{"range":"2190","text":"2191"},{"range":"2192","text":"2185"},{"range":"2193","text":"2185"},{"range":"2194","text":"2172"},{"range":"2195","text":"2172"},"Update the dependencies array to be: [APIC_spCustomerSenderAddressList, CustomerID, history]",{"range":"2196","text":"2197"},{"range":"2198","text":"2185"},{"range":"2199","text":"2185"},{"range":"2200","text":"2185"},{"range":"2201","text":"2172"},"Update the dependencies array to be: [Customer, history]",{"range":"2202","text":"2203"},"Update the dependencies array to be: [APIC_spLadingGetMany, APIC_spServiceGetMany, Customer, ReadLadingDraft, history]",{"range":"2204","text":"2205"},"Update the dependencies array to be: [APIC_spServiceGetMany, IsRunservice]",{"range":"2206","text":"2207"},"Update the dependencies array to be: [CPN_spLocationCheckCustomer, IsChangeWard]",{"range":"2208","text":"2209"},"Update the dependencies array to be: [CPN_spLading_PriceMain, IsChangePriceMain]",{"range":"2210","text":"2211"},"Update the dependencies array to be: [CPN_spLadingGetAnotherServiceMoney, IsChangeVatPpxd]",{"range":"2212","text":"2213"},"Update the dependencies array to be: [APIC_spLadingGetMany, CustomerID, Status, history]",{"range":"2214","text":"2215"},"Update the dependencies array to be: [CustomerID, history, location.search]",{"range":"2216","text":"2217"},{"range":"2218","text":"2172"},{"range":"2219","text":"2203"},{"range":"2220","text":"2205"},{"range":"2221","text":"2207"},{"range":"2222","text":"2209"},{"range":"2223","text":"2211"},{"range":"2224","text":"2213"},{"range":"2225","text":"2172"},"Update the dependencies array to be: [CustomerID, history, location.Code]",{"range":"2226","text":"2227"},{"range":"2228","text":"2172"},{"range":"2229","text":"2172"},"Update the dependencies array to be: [CustomerID]",{"range":"2230","text":"2231"},"Update the dependencies array to be: [System_spLogModule_Save, location]",{"range":"2232","text":"2233"},"Update the dependencies array to be: [CustomerGroup, CustomerID, initialLanguage]",{"range":"2234","text":"2235"},{"range":"2236","text":"2185"},{"range":"2237","text":"2185"},{"range":"2238","text":"2172"},{"range":"2239","text":"2185"},[1547,1566],"[onActive, ParentID, onGetLocation]",[646,648],"[APIC_spServiceGetMany]",[793,803],"[APIC_spServiceGetMany, _default, onActive]",[1921,1923],"[CustomerID, history, onGetCustomerSenderAddress]",[2132,2142],"[_default, data, onActive]",[2435,2449],"[_default, defaultLabel, onGetCustomerSenderAddress]",[397,399],"[type]",[735,757],"[GetLadingDetail, LadingCode, LadingId]",[1326,1328],"[onGetData]",[1585,1595],"[_default, data, onActive, onGetData]",[1468,1487],[3401,3412],"[CityId.label, CityId.value, DistrictId.label, DistrictId.value, FullCheck, Streets, WardId.label, WardId.value]",[3566,3581],"[CPN_spManagerAddress_Get, addressEditId]",[3457,3459],"[getListCityFromLocal]",[3668,3678],[149,150],"",[149,149],"\\",[152,153],[152,152],[155,156],[155,155],[126,127],[126,126],[129,130],[129,129],[132,133],[132,132],[48,49],[48,48],[115,116],[115,115],[190,191],[190,190],[261,262],[261,261],[346,347],[346,346],[419,420],[419,419],[491,492],[491,491],[575,576],[575,575],[654,655],[654,654],[746,747],[746,746],[837,838],[837,837],[922,923],[922,922],[1006,1007],[1006,1006],[1089,1090],[1089,1089],[1194,1195],[1194,1194],[1276,1277],[1276,1276],[1359,1360],[1359,1359],[1442,1443],[1442,1442],[1527,1528],[1527,1527],[1609,1610],[1609,1609],[1695,1696],[1695,1695],[1781,1782],[1781,1781],[1865,1866],[1865,1865],[1958,1959],[1958,1958],[2050,2051],[2050,2050],[2131,2132],[2131,2131],[2216,2217],[2216,2216],[2305,2306],[2305,2305],[2397,2398],[2397,2397],[2481,2482],[2481,2481],[2564,2565],[2564,2564],[2646,2647],[2646,2646],[2733,2734],[2733,2733],[2816,2817],[2816,2816],[2900,2901],[2900,2900],[1419,1421],"[CustomerID, history]",[904,906],"[APIC_spLadingGetDataPrint, location.search]",[933,935],[2524,2526],"[setCustomerName, setEmail]",[1393,1395],"[APIC_CustomerCheckResetPass]",[2694,2696],[1128,1130],[1261,1263],[1699,1701],[2136,2138],"[CustomerID, _Init, history]",[2471,2473],"[APIC_spVehicle_List, CPN_spRouteVehicle_List_Update, Filter, FilterVehicle, FromDate]",[3754,3762],"[Filter, FilterVehicle]",[2366,2368],"[APIC_spCustomerRecipientLoad, CustomerID, history]",[2210,2212],[1789,1791],[1425,1427],[1461,1463],[2024,2026],"[APIC_spCustomerSenderAddressList, CustomerID, history]",[1633,1635],[1595,1597],[1808,1810],[1846,1848],[1181,1183],"[Customer, history]",[11760,11762],"[APIC_spLadingGetMany, APIC_spServiceGetMany, Customer, ReadLadingDraft, history]",[11936,11950],"[APIC_spServiceGetMany, IsRunservice]",[80845,80859],"[CPN_spLocationCheckCustomer, IsChangeWard]",[81956,81975],"[CPN_spLading_PriceMain, IsChangePriceMain]",[83885,83902],"[CPN_spLadingGetAnotherServiceMoney, IsChangeVatPpxd]",[2184,2186],"[APIC_spLadingGetMany, CustomerID, Status, history]",[818,820],"[CustomerID, history, location.search]",[1569,1571],[1134,1136],[11715,11717],[11891,11905],[67224,67238],[68440,68459],[70428,70445],[1464,1466],[1662,1664],"[CustomerID, history, location.Code]",[3921,3923],[2034,2036],[839,841],"[CustomerID]",[922,932],"[System_spLogModule_Save, location]",[1441,1443],"[CustomerGroup, CustomerID, initialLanguage]",[1061,1063],[1608,1610],[1186,1188],[838,840]]